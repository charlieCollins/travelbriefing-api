
buildscript {
    
    repositories {
        flatDir dirs: './libs'
    }   

}

plugins {
    id 'java'
}

group 'com.totsp'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.7

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.+'

    // TODO get mocks or mockserver tests working
    ///testCompile 'com.squareup.retrofit2:retrofit-mock:2.2.0'
    ///testCompile 'org.mock-server:mockserver-netty:3.10.4'

    compile 'com.google.guava:guava:21.0'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'    
    compile 'io.reactivex.rxjava2:rxjava:2.0.6'    
}

// copies jar created here to the related android project libs
task updateAndroidLibs (dependsOn: jar, type: Copy) {
    //println "****** BUILD and COPY: [$jar.archivePath]"
    from './build/libs/api-1.0-SNAPSHOT.jar' // tried $archivePath and variations on $archiveName, all fail?
    into '../app-android/libs'
}

// creates a jar with source
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

// creates a jar with dependencies
task fatJar(type: Jar) {
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

// TODO write a one off task that invokes j2objc and creates static lib for iOS import from the api
