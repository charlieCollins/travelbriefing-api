//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/retrofit2/adapter/rxjava2/Result.java
//

#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "retrofit2/Response.h"
#include "retrofit2/adapter/rxjava2/Result.h"

@interface Retrofit2AdapterRxjava2Result () {
 @public
  Retrofit2Response *response_;
  NSException *error_;
}

- (instancetype)initWithRetrofit2Response:(Retrofit2Response *)response
                          withNSException:(NSException *)error;

@end

J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjava2Result, response_, Retrofit2Response *)
J2OBJC_FIELD_SETTER(Retrofit2AdapterRxjava2Result, error_, NSException *)

__attribute__((unused)) static void Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(Retrofit2AdapterRxjava2Result *self, Retrofit2Response *response, NSException *error);

__attribute__((unused)) static Retrofit2AdapterRxjava2Result *new_Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(Retrofit2Response *response, NSException *error) NS_RETURNS_RETAINED;

__attribute__((unused)) static Retrofit2AdapterRxjava2Result *create_Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(Retrofit2Response *response, NSException *error);

@implementation Retrofit2AdapterRxjava2Result

+ (Retrofit2AdapterRxjava2Result *)errorWithNSException:(NSException *)error {
  return Retrofit2AdapterRxjava2Result_errorWithNSException_(error);
}

+ (Retrofit2AdapterRxjava2Result *)responseWithRetrofit2Response:(Retrofit2Response *)response {
  return Retrofit2AdapterRxjava2Result_responseWithRetrofit2Response_(response);
}

- (instancetype)initWithRetrofit2Response:(Retrofit2Response *)response
                          withNSException:(NSException *)error {
  Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(self, response, error);
  return self;
}

- (Retrofit2Response *)response {
  return response_;
}

- (NSException *)error {
  return error_;
}

- (jboolean)isError {
  return error_ != nil;
}

- (void)dealloc {
  RELEASE_(response_);
  RELEASE_(error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LRetrofit2AdapterRxjava2Result;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRetrofit2AdapterRxjava2Result;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x2, -1, 6, -1, 7, -1, -1 },
    { NULL, "LRetrofit2Response;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "LNSException;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(errorWithNSException:);
  methods[1].selector = @selector(responseWithRetrofit2Response:);
  methods[2].selector = @selector(initWithRetrofit2Response:withNSException:);
  methods[3].selector = @selector(response);
  methods[4].selector = @selector(error);
  methods[5].selector = @selector(isError);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "response_", "LRetrofit2Response;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "error_", "LNSException;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "error", "LNSException;", "<T:Ljava/lang/Object;>(Ljava/lang/Throwable;)Lretrofit2/adapter/rxjava2/Result<TT;>;", "response", "LRetrofit2Response;", "<T:Ljava/lang/Object;>(Lretrofit2/Response<TT;>;)Lretrofit2/adapter/rxjava2/Result<TT;>;", "LRetrofit2Response;LNSException;", "(Lretrofit2/Response<TT;>;Ljava/lang/Throwable;)V", "()Lretrofit2/Response<TT;>;", "Lretrofit2/Response<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _Retrofit2AdapterRxjava2Result = { "Result", "retrofit2.adapter.rxjava2", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, -1, -1, 10, -1 };
  return &_Retrofit2AdapterRxjava2Result;
}

@end

Retrofit2AdapterRxjava2Result *Retrofit2AdapterRxjava2Result_errorWithNSException_(NSException *error) {
  Retrofit2AdapterRxjava2Result_initialize();
  if (error == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"error == null");
  return create_Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(nil, error);
}

Retrofit2AdapterRxjava2Result *Retrofit2AdapterRxjava2Result_responseWithRetrofit2Response_(Retrofit2Response *response) {
  Retrofit2AdapterRxjava2Result_initialize();
  if (response == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"response == null");
  return create_Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(response, nil);
}

void Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(Retrofit2AdapterRxjava2Result *self, Retrofit2Response *response, NSException *error) {
  NSObject_init(self);
  JreStrongAssign(&self->response_, response);
  JreStrongAssign(&self->error_, error);
}

Retrofit2AdapterRxjava2Result *new_Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(Retrofit2Response *response, NSException *error) {
  J2OBJC_NEW_IMPL(Retrofit2AdapterRxjava2Result, initWithRetrofit2Response_withNSException_, response, error)
}

Retrofit2AdapterRxjava2Result *create_Retrofit2AdapterRxjava2Result_initWithRetrofit2Response_withNSException_(Retrofit2Response *response, NSException *error) {
  J2OBJC_CREATE_IMPL(Retrofit2AdapterRxjava2Result, initWithRetrofit2Response_withNSException_, response, error)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2AdapterRxjava2Result)
