//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/flowables/ConnectableFlowable.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/Flowable.h"
#include "io/reactivex/disposables/Disposable.h"
#include "io/reactivex/flowables/ConnectableFlowable.h"
#include "io/reactivex/functions/Consumer.h"
#include "io/reactivex/internal/functions/Functions.h"
#include "io/reactivex/internal/operators/flowable/FlowableAutoConnect.h"
#include "io/reactivex/internal/operators/flowable/FlowableRefCount.h"
#include "io/reactivex/internal/util/ConnectConsumer.h"
#include "io/reactivex/plugins/RxJavaPlugins.h"

@implementation IoReactivexFlowablesConnectableFlowable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoReactivexFlowablesConnectableFlowable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)connectWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)connection {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<IoReactivexDisposablesDisposable>)connect {
  IoReactivexInternalUtilConnectConsumer *cc = create_IoReactivexInternalUtilConnectConsumer_init();
  [self connectWithIoReactivexFunctionsConsumer:cc];
  return cc->disposable_;
}

- (IoReactivexFlowable *)refCount {
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(create_IoReactivexInternalOperatorsFlowableFlowableRefCount_initWithIoReactivexFlowablesConnectableFlowable_(self));
}

- (IoReactivexFlowable *)autoConnect {
  return [self autoConnectWithInt:1];
}

- (IoReactivexFlowable *)autoConnectWithInt:(jint)numberOfSubscribers {
  return [self autoConnectWithInt:numberOfSubscribers withIoReactivexFunctionsConsumer:IoReactivexInternalFunctionsFunctions_emptyConsumer()];
}

- (IoReactivexFlowable *)autoConnectWithInt:(jint)numberOfSubscribers
           withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)connection {
  if (numberOfSubscribers <= 0) {
    [self connectWithIoReactivexFunctionsConsumer:connection];
    return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowablesConnectableFlowable_(self);
  }
  return IoReactivexPluginsRxJavaPlugins_onAssemblyWithIoReactivexFlowable_(create_IoReactivexInternalOperatorsFlowableFlowableAutoConnect_initWithIoReactivexFlowablesConnectableFlowable_withInt_withIoReactivexFunctionsConsumer_(self, numberOfSubscribers, connection));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LIoReactivexDisposablesDisposable;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexFlowable;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LIoReactivexFlowable;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LIoReactivexFlowable;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LIoReactivexFlowable;", 0x1, 4, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(connectWithIoReactivexFunctionsConsumer:);
  methods[2].selector = @selector(connect);
  methods[3].selector = @selector(refCount);
  methods[4].selector = @selector(autoConnect);
  methods[5].selector = @selector(autoConnectWithInt:);
  methods[6].selector = @selector(autoConnectWithInt:withIoReactivexFunctionsConsumer:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "connect", "LIoReactivexFunctionsConsumer;", "(Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;)V", "()Lio/reactivex/Flowable<TT;>;", "autoConnect", "I", "(I)Lio/reactivex/Flowable<TT;>;", "ILIoReactivexFunctionsConsumer;", "(ILio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;)Lio/reactivex/Flowable<TT;>;", "<T:Ljava/lang/Object;>Lio/reactivex/Flowable<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexFlowablesConnectableFlowable = { "ConnectableFlowable", "io.reactivex.flowables", ptrTable, methods, NULL, 7, 0x401, 7, 0, -1, -1, -1, 9, -1 };
  return &_IoReactivexFlowablesConnectableFlowable;
}

@end

void IoReactivexFlowablesConnectableFlowable_init(IoReactivexFlowablesConnectableFlowable *self) {
  IoReactivexFlowable_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexFlowablesConnectableFlowable)
