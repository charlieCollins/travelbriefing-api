//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/completable/CompletableFromPublisher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableFromPublisher")
#ifdef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableFromPublisher
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableFromPublisher 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableFromPublisher 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsCompletableCompletableFromPublisher

#if !defined (IoReactivexInternalOperatorsCompletableCompletableFromPublisher_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableFromPublisher || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableFromPublisher))
#define IoReactivexInternalOperatorsCompletableCompletableFromPublisher_

#define RESTRICT_IoReactivexCompletable 1
#define INCLUDE_IoReactivexCompletable 1
#include "io/reactivex/Completable.h"

@protocol IoReactivexCompletableObserver;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsCompletableCompletableFromPublisher : IoReactivexCompletable {
 @public
  id<OrgReactivestreamsPublisher> flowable_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)flowable;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)cs;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableFromPublisher)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableFromPublisher, flowable_, id<OrgReactivestreamsPublisher>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableFromPublisher_initWithOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsCompletableCompletableFromPublisher *self, id<OrgReactivestreamsPublisher> flowable);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableFromPublisher *new_IoReactivexInternalOperatorsCompletableCompletableFromPublisher_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> flowable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableFromPublisher *create_IoReactivexInternalOperatorsCompletableCompletableFromPublisher_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> flowable);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableFromPublisher)

#endif

#if !defined (IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableFromPublisher || defined(INCLUDE_IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber))
#define IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber_

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexCompletableObserver;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber : NSObject < OrgReactivestreamsSubscriber, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexCompletableObserver> cs_;
  id<OrgReactivestreamsSubscription> s_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber, cs_, id<IoReactivexCompletableObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber_initWithIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber *self, id<IoReactivexCompletableObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber *new_IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber_initWithIoReactivexCompletableObserver_(id<IoReactivexCompletableObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber *create_IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber_initWithIoReactivexCompletableObserver_(id<IoReactivexCompletableObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsCompletableCompletableFromPublisher_FromPublisherSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsCompletableCompletableFromPublisher")
