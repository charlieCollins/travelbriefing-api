//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/completable/CompletablePeek.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "io/reactivex/Completable.h"
#include "io/reactivex/CompletableObserver.h"
#include "io/reactivex/CompletableSource.h"
#include "io/reactivex/disposables/Disposable.h"
#include "io/reactivex/disposables/Disposables.h"
#include "io/reactivex/exceptions/CompositeException.h"
#include "io/reactivex/exceptions/Exceptions.h"
#include "io/reactivex/functions/Action.h"
#include "io/reactivex/functions/Consumer.h"
#include "io/reactivex/internal/disposables/EmptyDisposable.h"
#include "io/reactivex/internal/operators/completable/CompletablePeek.h"
#include "io/reactivex/plugins/RxJavaPlugins.h"
#include "java/lang/Runnable.h"

@interface IoReactivexInternalOperatorsCompletableCompletablePeek_1 : NSObject < IoReactivexCompletableObserver > {
 @public
  IoReactivexInternalOperatorsCompletableCompletablePeek *this$0_;
  id<IoReactivexCompletableObserver> val$s_;
}

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletablePeek:(IoReactivexInternalOperatorsCompletableCompletablePeek *)outer$
                                            withIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)capture$0;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)doAfter;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletablePeek_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *self, IoReactivexInternalOperatorsCompletableCompletablePeek *outer$, id<IoReactivexCompletableObserver> capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletablePeek_1 *new_IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletablePeek *outer$, id<IoReactivexCompletableObserver> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletablePeek_1 *create_IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletablePeek *outer$, id<IoReactivexCompletableObserver> capture$0);

@interface IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsCompletableCompletablePeek_1 *this$0_;
  id<IoReactivexDisposablesDisposable> val$d_;
}

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1:(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *)outer$
                                            withIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletablePeek_1_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 *self, IoReactivexInternalOperatorsCompletableCompletablePeek_1 *outer$, id<IoReactivexDisposablesDisposable> capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 *new_IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *outer$, id<IoReactivexDisposablesDisposable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 *create_IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *outer$, id<IoReactivexDisposablesDisposable> capture$0);

@implementation IoReactivexInternalOperatorsCompletableCompletablePeek

- (instancetype)initWithIoReactivexCompletableSource:(id<IoReactivexCompletableSource>)source
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSubscribe
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onError
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onComplete
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onTerminate
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onAfterTerminate
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onDispose {
  IoReactivexInternalOperatorsCompletableCompletablePeek_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(self, source, onSubscribe, onError, onComplete, onTerminate, onAfterTerminate, onDispose);
  return self;
}

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s {
  [((id<IoReactivexCompletableSource>) nil_chk(source_)) subscribeWithIoReactivexCompletableObserver:create_IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(self, s)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(onSubscribe_);
  RELEASE_(onError_);
  RELEASE_(onComplete_);
  RELEASE_(onTerminate_);
  RELEASE_(onAfterTerminate_);
  RELEASE_(onDispose_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexCompletableSource:withIoReactivexFunctionsConsumer:withIoReactivexFunctionsConsumer:withIoReactivexFunctionsAction:withIoReactivexFunctionsAction:withIoReactivexFunctionsAction:withIoReactivexFunctionsAction:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexCompletableObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexCompletableSource;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "onSubscribe_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
    { "onError_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "onComplete_", "LIoReactivexFunctionsAction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "onTerminate_", "LIoReactivexFunctionsAction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "onAfterTerminate_", "LIoReactivexFunctionsAction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "onDispose_", "LIoReactivexFunctionsAction;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableSource;LIoReactivexFunctionsConsumer;LIoReactivexFunctionsConsumer;LIoReactivexFunctionsAction;LIoReactivexFunctionsAction;LIoReactivexFunctionsAction;LIoReactivexFunctionsAction;", "(Lio/reactivex/CompletableSource;Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;Lio/reactivex/functions/Consumer<-Ljava/lang/Throwable;>;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;Lio/reactivex/functions/Action;)V", "subscribeActual", "LIoReactivexCompletableObserver;", "Lio/reactivex/functions/Consumer<-Lio/reactivex/disposables/Disposable;>;", "Lio/reactivex/functions/Consumer<-Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletablePeek = { "CompletablePeek", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x11, 2, 7, -1, -1, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletablePeek;
}

@end

void IoReactivexInternalOperatorsCompletableCompletablePeek_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsCompletableCompletablePeek *self, id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsConsumer> onSubscribe, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsAction> onTerminate, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose) {
  IoReactivexCompletable_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->onSubscribe_, onSubscribe);
  JreStrongAssign(&self->onError_, onError);
  JreStrongAssign(&self->onComplete_, onComplete);
  JreStrongAssign(&self->onTerminate_, onTerminate);
  JreStrongAssign(&self->onAfterTerminate_, onAfterTerminate);
  JreStrongAssign(&self->onDispose_, onDispose);
}

IoReactivexInternalOperatorsCompletableCompletablePeek *new_IoReactivexInternalOperatorsCompletableCompletablePeek_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsConsumer> onSubscribe, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsAction> onTerminate, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletablePeek, initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_, source, onSubscribe, onError, onComplete, onTerminate, onAfterTerminate, onDispose)
}

IoReactivexInternalOperatorsCompletableCompletablePeek *create_IoReactivexInternalOperatorsCompletableCompletablePeek_initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_(id<IoReactivexCompletableSource> source, id<IoReactivexFunctionsConsumer> onSubscribe, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsAction> onTerminate, id<IoReactivexFunctionsAction> onAfterTerminate, id<IoReactivexFunctionsAction> onDispose) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletablePeek, initWithIoReactivexCompletableSource_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_withIoReactivexFunctionsAction_, source, onSubscribe, onError, onComplete, onTerminate, onAfterTerminate, onDispose)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletablePeek)

@implementation IoReactivexInternalOperatorsCompletableCompletablePeek_1

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletablePeek:(IoReactivexInternalOperatorsCompletableCompletablePeek *)outer$
                                            withIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)capture$0 {
  IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(self, outer$, capture$0);
  return self;
}

- (void)onComplete {
  @try {
    [((id<IoReactivexFunctionsAction>) nil_chk(this$0_->onComplete_)) run];
    [((id<IoReactivexFunctionsAction>) nil_chk(this$0_->onTerminate_)) run];
  }
  @catch (NSException *e) {
    IoReactivexExceptionsExceptions_throwIfFatalWithNSException_(e);
    [((id<IoReactivexCompletableObserver>) nil_chk(val$s_)) onErrorWithNSException:e];
    return;
  }
  [((id<IoReactivexCompletableObserver>) nil_chk(val$s_)) onComplete];
  [self doAfter];
}

- (void)onErrorWithNSException:(NSException *)e {
  @try {
    [((id<IoReactivexFunctionsConsumer>) nil_chk(this$0_->onError_)) acceptWithId:e];
    [((id<IoReactivexFunctionsAction>) nil_chk(this$0_->onTerminate_)) run];
  }
  @catch (NSException *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithNSException_(ex);
    e = create_IoReactivexExceptionsCompositeException_initWithNSExceptionArray_([IOSObjectArray arrayWithObjects:(id[]){ e, ex } count:2 type:NSException_class_()]);
  }
  [((id<IoReactivexCompletableObserver>) nil_chk(val$s_)) onErrorWithNSException:e];
  [self doAfter];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  @try {
    [((id<IoReactivexFunctionsConsumer>) nil_chk(this$0_->onSubscribe_)) acceptWithId:d];
  }
  @catch (NSException *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithNSException_(ex);
    [((id<IoReactivexDisposablesDisposable>) nil_chk(d)) dispose];
    IoReactivexInternalDisposablesEmptyDisposable_errorWithNSException_withIoReactivexCompletableObserver_(ex, val$s_);
    return;
  }
  [((id<IoReactivexCompletableObserver>) nil_chk(val$s_)) onSubscribeWithIoReactivexDisposablesDisposable:IoReactivexDisposablesDisposables_fromRunnableWithJavaLangRunnable_(create_IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(self, d))];
}

- (void)doAfter {
  @try {
    [((id<IoReactivexFunctionsAction>) nil_chk(this$0_->onAfterTerminate_)) run];
  }
  @catch (NSException *ex) {
    IoReactivexExceptionsExceptions_throwIfFatalWithNSException_(ex);
    IoReactivexPluginsRxJavaPlugins_onErrorWithNSException_(ex);
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletablePeek:withIoReactivexCompletableObserver:);
  methods[1].selector = @selector(onComplete);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[4].selector = @selector(doAfter);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletablePeek;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LIoReactivexCompletableObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LIoReactivexDisposablesDisposable;", "LIoReactivexInternalOperatorsCompletableCompletablePeek;", "subscribeActualWithIoReactivexCompletableObserver:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletablePeek_1 = { "", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x8018, 5, 2, 4, -1, 5, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletablePeek_1;
}

@end

void IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *self, IoReactivexInternalOperatorsCompletableCompletablePeek *outer$, id<IoReactivexCompletableObserver> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsCompletableCompletablePeek_1 *new_IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletablePeek *outer$, id<IoReactivexCompletableObserver> capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletablePeek_1, initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_, outer$, capture$0)
}

IoReactivexInternalOperatorsCompletableCompletablePeek_1 *create_IoReactivexInternalOperatorsCompletableCompletablePeek_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletablePeek *outer$, id<IoReactivexCompletableObserver> capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletablePeek_1, initWithIoReactivexInternalOperatorsCompletableCompletablePeek_withIoReactivexCompletableObserver_, outer$, capture$0)
}

@implementation IoReactivexInternalOperatorsCompletableCompletablePeek_1_1

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1:(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *)outer$
                                            withIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)capture$0 {
  IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(self, outer$, capture$0);
  return self;
}

- (void)run {
  @try {
    [((id<IoReactivexFunctionsAction>) nil_chk(this$0_->this$0_->onDispose_)) run];
  }
  @catch (NSException *e) {
    IoReactivexExceptionsExceptions_throwIfFatalWithNSException_(e);
    IoReactivexPluginsRxJavaPlugins_onErrorWithNSException_(e);
  }
  [((id<IoReactivexDisposablesDisposable>) nil_chk(val$d_)) dispose];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$d_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1:withIoReactivexDisposablesDisposable:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletablePeek_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$d_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsCompletableCompletablePeek_1;", "onSubscribeWithIoReactivexDisposablesDisposable:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 = { "", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletablePeek_1_1;
}

@end

void IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 *self, IoReactivexInternalOperatorsCompletableCompletablePeek_1 *outer$, id<IoReactivexDisposablesDisposable> capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$d_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 *new_IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *outer$, id<IoReactivexDisposablesDisposable> capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletablePeek_1_1, initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_, outer$, capture$0)
}

IoReactivexInternalOperatorsCompletableCompletablePeek_1_1 *create_IoReactivexInternalOperatorsCompletableCompletablePeek_1_1_initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_(IoReactivexInternalOperatorsCompletableCompletablePeek_1 *outer$, id<IoReactivexDisposablesDisposable> capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletablePeek_1_1, initWithIoReactivexInternalOperatorsCompletableCompletablePeek_1_withIoReactivexDisposablesDisposable_, outer$, capture$0)
}
