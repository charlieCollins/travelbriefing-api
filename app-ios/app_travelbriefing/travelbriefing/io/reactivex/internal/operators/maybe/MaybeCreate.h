//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/maybe/MaybeCreate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCreate")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeCreate
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCreate 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCreate 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeCreate

#if !defined (IoReactivexInternalOperatorsMaybeMaybeCreate_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCreate || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeCreate))
#define IoReactivexInternalOperatorsMaybeMaybeCreate_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "io/reactivex/Maybe.h"

@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeOnSubscribe;

@interface IoReactivexInternalOperatorsMaybeMaybeCreate : IoReactivexMaybe {
 @public
  id<IoReactivexMaybeOnSubscribe> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeOnSubscribe:(id<IoReactivexMaybeOnSubscribe>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeCreate)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeCreate, source_, id<IoReactivexMaybeOnSubscribe>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeCreate_initWithIoReactivexMaybeOnSubscribe_(IoReactivexInternalOperatorsMaybeMaybeCreate *self, id<IoReactivexMaybeOnSubscribe> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeCreate *new_IoReactivexInternalOperatorsMaybeMaybeCreate_initWithIoReactivexMaybeOnSubscribe_(id<IoReactivexMaybeOnSubscribe> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeCreate *create_IoReactivexInternalOperatorsMaybeMaybeCreate_initWithIoReactivexMaybeOnSubscribe_(id<IoReactivexMaybeOnSubscribe> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeCreate)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCreate || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter))
#define IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeEmitter 1
#define INCLUDE_IoReactivexMaybeEmitter 1
#include "io/reactivex/MaybeEmitter.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexFunctionsCancellable;
@protocol IoReactivexMaybeObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeEmitter, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
}

#pragma mark Public

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onSuccessWithId:(id)value;

- (void)setCancellableWithIoReactivexFunctionsCancellable:(id<IoReactivexFunctionsCancellable>)c;

- (void)setDisposableWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter, actual_, id<IoReactivexMaybeObserver>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter_initWithIoReactivexMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter *self, id<IoReactivexMaybeObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter *new_IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter *create_IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeCreate_Emitter)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCreate")
