//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/maybe/MaybeCallbackObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver

#if !defined (IoReactivexInternalOperatorsMaybeMaybeCallbackObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver))
#define IoReactivexInternalOperatorsMaybeMaybeCallbackObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "io/reactivex/MaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexFunctionsAction;
@protocol IoReactivexFunctionsConsumer;

@interface IoReactivexInternalOperatorsMaybeMaybeCallbackObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexFunctionsConsumer> onSuccess_;
  id<IoReactivexFunctionsConsumer> onError_;
  id<IoReactivexFunctionsAction> onComplete_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSuccess
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onError
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onComplete;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeCallbackObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeCallbackObserver, onSuccess_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeCallbackObserver, onError_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeCallbackObserver, onComplete_, id<IoReactivexFunctionsAction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeCallbackObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsMaybeMaybeCallbackObserver *self, id<IoReactivexFunctionsConsumer> onSuccess, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeCallbackObserver *new_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_(id<IoReactivexFunctionsConsumer> onSuccess, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeCallbackObserver *create_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_(id<IoReactivexFunctionsConsumer> onSuccess, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeCallbackObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeCallbackObserver")
