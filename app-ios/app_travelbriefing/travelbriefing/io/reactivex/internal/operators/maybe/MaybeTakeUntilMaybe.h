//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/maybe/MaybeTakeUntilMaybe.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe

#if !defined (IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe))
#define IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "io/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream.h"

@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexMaybeSource> other_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
                    withIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)other;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe, other_, id<IoReactivexMaybeSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_initWithIoReactivexMaybeSource_withIoReactivexMaybeSource_(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe *self, id<IoReactivexMaybeSource> source, id<IoReactivexMaybeSource> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe *new_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_initWithIoReactivexMaybeSource_withIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source, id<IoReactivexMaybeSource> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe *create_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_initWithIoReactivexMaybeSource_withIoReactivexMaybeSource_(id<IoReactivexMaybeSource> source, id<IoReactivexMaybeSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "io/reactivex/MaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@class IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver;

@interface IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver *other_;
}

#pragma mark Public

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual;

- (void)otherComplete;

- (void)otherErrorWithNSException:(NSException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver, other_, IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_initWithIoReactivexMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *self, id<IoReactivexMaybeObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver))
#define IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "io/reactivex/MaybeObserver.h"

@class IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeObserver > {
 @public
  IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *parent_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver:(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver, parent_, IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver_initWithIoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver *self, IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver *new_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver_initWithIoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver *create_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver_initWithIoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe_TakeUntilMainMaybeObserver_TakeUntilOtherMaybeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeTakeUntilMaybe")
