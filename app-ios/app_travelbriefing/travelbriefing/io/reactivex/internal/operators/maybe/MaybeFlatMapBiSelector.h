//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/maybe/MaybeFlatMapBiSelector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector")
#ifdef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector))
#define IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_

#define RESTRICT_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream 1
#include "io/reactivex/internal/operators/maybe/AbstractMaybeWithUpstream.h"

@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexMaybeObserver;
@protocol IoReactivexMaybeSource;

@interface IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector : IoReactivexInternalOperatorsMaybeAbstractMaybeWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
  id<IoReactivexFunctionsBiFunction> resultSelector_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexMaybeSource:(id<IoReactivexMaybeSource>)source
              withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
            withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)resultSelector;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector, resultSelector_, id<IoReactivexFunctionsBiFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector *self, id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> resultSelector);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector *new_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> resultSelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector *create_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_initWithIoReactivexMaybeSource_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeSource> source, id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> resultSelector);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver))
#define IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "io/reactivex/MaybeObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@class IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver;
@protocol IoReactivexFunctionsBiFunction;
@protocol IoReactivexFunctionsFunction;

@interface IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver : NSObject < IoReactivexMaybeObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
  IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver *inner_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
              withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)resultSelector;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver, inner_, IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> resultSelector);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver *new_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> resultSelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver *create_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> resultSelector);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver)

#endif

#if !defined (IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector || defined(INCLUDE_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver))
#define IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexMaybeObserver 1
#define INCLUDE_IoReactivexMaybeObserver 1
#include "io/reactivex/MaybeObserver.h"

@protocol IoReactivexDisposablesDisposable;
@protocol IoReactivexFunctionsBiFunction;

@interface IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexMaybeObserver > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<IoReactivexFunctionsBiFunction> resultSelector_;
  id value_InnerObserver_;
}

#pragma mark Public

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
              withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)resultSelector;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver, resultSelector_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver, value_InnerObserver_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver *self, id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiFunction> resultSelector);

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver *new_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiFunction> resultSelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver *create_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver_initWithIoReactivexMaybeObserver_withIoReactivexFunctionsBiFunction_(id<IoReactivexMaybeObserver> actual, id<IoReactivexFunctionsBiFunction> resultSelector);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector_FlatMapBiMainObserver_InnerObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsMaybeMaybeFlatMapBiSelector")
