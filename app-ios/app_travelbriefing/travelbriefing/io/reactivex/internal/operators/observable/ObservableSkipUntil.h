//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/observable/ObservableSkipUntil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipUntil")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableSkipUntil
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipUntil 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipUntil 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableSkipUntil

#if !defined (IoReactivexInternalOperatorsObservableObservableSkipUntil_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipUntil || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSkipUntil))
#define IoReactivexInternalOperatorsObservableObservableSkipUntil_

#define RESTRICT_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream 1
#include "io/reactivex/internal/operators/observable/AbstractObservableWithUpstream.h"

@protocol IoReactivexObservableSource;
@protocol IoReactivexObserver;

@interface IoReactivexInternalOperatorsObservableObservableSkipUntil : IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream {
 @public
  id<IoReactivexObservableSource> other_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)child;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSkipUntil)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkipUntil, other_, id<IoReactivexObservableSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSkipUntil_initWithIoReactivexObservableSource_withIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableSkipUntil *self, id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipUntil *new_IoReactivexInternalOperatorsObservableObservableSkipUntil_initWithIoReactivexObservableSource_withIoReactivexObservableSource_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipUntil *create_IoReactivexInternalOperatorsObservableObservableSkipUntil_initWithIoReactivexObservableSource_withIoReactivexObservableSource_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSkipUntil)

#endif

#if !defined (IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipUntil || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver))
#define IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "io/reactivex/Observer.h"

@class IoReactivexInternalDisposablesArrayCompositeDisposable;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver : NSObject < IoReactivexObserver > {
 @public
  id<IoReactivexObserver> actual_;
  IoReactivexInternalDisposablesArrayCompositeDisposable *frc_;
  id<IoReactivexDisposablesDisposable> s_;
  volatile_jboolean notSkipping_;
  jboolean notSkippingLocal_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
withIoReactivexInternalDisposablesArrayCompositeDisposable:(IoReactivexInternalDisposablesArrayCompositeDisposable *)frc;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver, frc_, IoReactivexInternalDisposablesArrayCompositeDisposable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver *self, id<IoReactivexObserver> actual, IoReactivexInternalDisposablesArrayCompositeDisposable *frc);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver *new_IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(id<IoReactivexObserver> actual, IoReactivexInternalDisposablesArrayCompositeDisposable *frc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver *create_IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(id<IoReactivexObserver> actual, IoReactivexInternalDisposablesArrayCompositeDisposable *frc);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableSkipUntil_SkipUntilObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableSkipUntil")
