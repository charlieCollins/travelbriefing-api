//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/observable/ObservableDefer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDefer")
#ifdef RESTRICT_IoReactivexInternalOperatorsObservableObservableDefer
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDefer 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDefer 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsObservableObservableDefer

#if !defined (IoReactivexInternalOperatorsObservableObservableDefer_) && (INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDefer || defined(INCLUDE_IoReactivexInternalOperatorsObservableObservableDefer))
#define IoReactivexInternalOperatorsObservableObservableDefer_

#define RESTRICT_IoReactivexObservable 1
#define INCLUDE_IoReactivexObservable 1
#include "io/reactivex/Observable.h"

@protocol IoReactivexObserver;
@protocol JavaUtilConcurrentCallable;

@interface IoReactivexInternalOperatorsObservableObservableDefer : IoReactivexObservable {
 @public
  id<JavaUtilConcurrentCallable> supplier_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)supplier;

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableDefer)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableDefer, supplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsObservableObservableDefer_initWithJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsObservableObservableDefer *self, id<JavaUtilConcurrentCallable> supplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableDefer *new_IoReactivexInternalOperatorsObservableObservableDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> supplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsObservableObservableDefer *create_IoReactivexInternalOperatorsObservableObservableDefer_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> supplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsObservableObservableDefer)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsObservableObservableDefer")
