//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/observable/ObservableInternalHelper.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "io/reactivex/Emitter.h"
#include "io/reactivex/Notification.h"
#include "io/reactivex/Observable.h"
#include "io/reactivex/ObservableSource.h"
#include "io/reactivex/Observer.h"
#include "io/reactivex/Scheduler.h"
#include "io/reactivex/functions/Action.h"
#include "io/reactivex/functions/BiConsumer.h"
#include "io/reactivex/functions/BiFunction.h"
#include "io/reactivex/functions/Consumer.h"
#include "io/reactivex/functions/Function.h"
#include "io/reactivex/internal/functions/Functions.h"
#include "io/reactivex/internal/operators/observable/ObservableFromIterable.h"
#include "io/reactivex/internal/operators/observable/ObservableInternalHelper.h"
#include "io/reactivex/internal/operators/observable/ObservableMap.h"
#include "io/reactivex/internal/operators/observable/ObservableTake.h"
#include "io/reactivex/observables/ConnectableObservable.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/util/List.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/TimeUnit.h"

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper ()

- (instancetype)init;

@end

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_init(IoReactivexInternalOperatorsObservableObservableInternalHelper *self);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_init();

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner () {
 @public
  id<IoReactivexFunctionsBiFunction> combiner_;
  id t_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner, combiner_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner, t_, id)

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter () {
 @public
  id<IoReactivexFunctionsBiFunction> combiner_;
  id<IoReactivexFunctionsFunction> mapper_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter, combiner_, id<IoReactivexFunctionsBiFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter, mapper_, id<IoReactivexFunctionsFunction>)

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable () {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable, mapper_, id<IoReactivexFunctionsFunction>)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_initWithNSString_withInt_(IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt *self, NSString *__name, jint __ordinal);

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler () {
 @public
  id<IoReactivexFunctionsFunction> handler_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler, handler_, id<IoReactivexFunctionsFunction>)

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_1 : NSObject < JavaUtilConcurrentCallable > {
 @public
  IoReactivexObservable *val$parent_;
}

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0;

- (IoReactivexObservablesConnectableObservable *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableInternalHelper_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(IoReactivexInternalOperatorsObservableObservableInternalHelper_1 *self, IoReactivexObservable *capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_1 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(IoReactivexObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_1 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(IoReactivexObservable *capture$0);

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_2 : NSObject < JavaUtilConcurrentCallable > {
 @public
  IoReactivexObservable *val$parent_;
  jint val$bufferSize_;
}

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0
                                      withInt:(jint)capture$1;

- (IoReactivexObservablesConnectableObservable *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableInternalHelper_2)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(IoReactivexInternalOperatorsObservableObservableInternalHelper_2 *self, IoReactivexObservable *capture$0, jint capture$1);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_2 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(IoReactivexObservable *capture$0, jint capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_2 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(IoReactivexObservable *capture$0, jint capture$1);

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_3 : NSObject < JavaUtilConcurrentCallable > {
 @public
  IoReactivexObservable *val$parent_;
  jint val$bufferSize_;
  jlong val$time_;
  JavaUtilConcurrentTimeUnit *val$unit_;
  IoReactivexScheduler *val$scheduler_;
}

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0
                                      withInt:(jint)capture$1
                                     withLong:(jlong)capture$2
               withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$3
                     withIoReactivexScheduler:(IoReactivexScheduler *)capture$4;

- (IoReactivexObservablesConnectableObservable *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableInternalHelper_3)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableInternalHelper_3 *self, IoReactivexObservable *capture$0, jint capture$1, jlong capture$2, JavaUtilConcurrentTimeUnit *capture$3, IoReactivexScheduler *capture$4);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_3 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jint capture$1, jlong capture$2, JavaUtilConcurrentTimeUnit *capture$3, IoReactivexScheduler *capture$4) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_3 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jint capture$1, jlong capture$2, JavaUtilConcurrentTimeUnit *capture$3, IoReactivexScheduler *capture$4);

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_4 : NSObject < JavaUtilConcurrentCallable > {
 @public
  IoReactivexObservable *val$parent_;
  jlong val$time_;
  JavaUtilConcurrentTimeUnit *val$unit_;
  IoReactivexScheduler *val$scheduler_;
}

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0
                                     withLong:(jlong)capture$1
               withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$2
                     withIoReactivexScheduler:(IoReactivexScheduler *)capture$3;

- (IoReactivexObservablesConnectableObservable *)call;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableInternalHelper_4)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableInternalHelper_4 *self, IoReactivexObservable *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, IoReactivexScheduler *capture$3);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_4 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, IoReactivexScheduler *capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_4 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, IoReactivexScheduler *capture$3);

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_5 : NSObject < IoReactivexFunctionsFunction > {
 @public
  id<IoReactivexFunctionsFunction> val$selector_;
  IoReactivexScheduler *val$scheduler_;
}

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)capture$0
                            withIoReactivexScheduler:(IoReactivexScheduler *)capture$1;

- (id<IoReactivexObservableSource>)applyWithId:(IoReactivexObservable *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableInternalHelper_5)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableInternalHelper_5 *self, id<IoReactivexFunctionsFunction> capture$0, IoReactivexScheduler *capture$1);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_5 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> capture$0, IoReactivexScheduler *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableInternalHelper_5 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> capture$0, IoReactivexScheduler *capture$1);

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_initWithNSString_withInt_(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter *self, NSString *__name, jint __ordinal);

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner () {
 @public
  id<IoReactivexFunctionsFunction> handler_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner, handler_, id<IoReactivexFunctionsFunction>)

@interface IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction () {
 @public
  id<IoReactivexFunctionsFunction> zipper_;
}

@end

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction, zipper_, id<IoReactivexFunctionsFunction>)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<IoReactivexFunctionsBiFunction>)simpleGeneratorWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)consumer {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_simpleGeneratorWithIoReactivexFunctionsConsumer_(consumer);
}

+ (id<IoReactivexFunctionsBiFunction>)simpleBiGeneratorWithIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)consumer {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_simpleBiGeneratorWithIoReactivexFunctionsBiConsumer_(consumer);
}

+ (id<IoReactivexFunctionsFunction>)itemDelayWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)itemDelay {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_itemDelayWithIoReactivexFunctionsFunction_(itemDelay);
}

+ (id<IoReactivexFunctionsConsumer>)observerOnNextWithIoReactivexObserver:(id<IoReactivexObserver>)observer {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_observerOnNextWithIoReactivexObserver_(observer);
}

+ (id<IoReactivexFunctionsConsumer>)observerOnErrorWithIoReactivexObserver:(id<IoReactivexObserver>)observer {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_observerOnErrorWithIoReactivexObserver_(observer);
}

+ (id<IoReactivexFunctionsAction>)observerOnCompleteWithIoReactivexObserver:(id<IoReactivexObserver>)observer {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_observerOnCompleteWithIoReactivexObserver_(observer);
}

+ (id<IoReactivexFunctionsFunction>)flatMapWithCombinerWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                                     withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_flatMapWithCombinerWithIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(mapper, combiner);
}

+ (id<IoReactivexFunctionsFunction>)flatMapIntoIterableWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_flatMapIntoIterableWithIoReactivexFunctionsFunction_(mapper);
}

+ (id<IoReactivexFunctionsFunction>)repeatWhenHandlerWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)handler {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_repeatWhenHandlerWithIoReactivexFunctionsFunction_(handler);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexObservable:(IoReactivexObservable *)parent {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_(parent);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexObservable:(IoReactivexObservable *)parent
                                                                  withInt:(jint)bufferSize {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_withInt_(parent, bufferSize);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexObservable:(IoReactivexObservable *)parent
                                                                  withInt:(jint)bufferSize
                                                                 withLong:(jlong)time
                                           withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                                 withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, bufferSize, time, unit, scheduler);
}

+ (id<JavaUtilConcurrentCallable>)replayCallableWithIoReactivexObservable:(IoReactivexObservable *)parent
                                                                 withLong:(jlong)time
                                           withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                                 withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, time, unit, scheduler);
}

+ (id<IoReactivexFunctionsFunction>)replayFunctionWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)selector
                                                          withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_replayFunctionWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(selector, scheduler);
}

+ (id<IoReactivexFunctionsFunction>)retryWhenHandlerWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)handler {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_retryWhenHandlerWithIoReactivexFunctionsFunction_(handler);
}

+ (id<IoReactivexFunctionsFunction>)zipIterableWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)zipper {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_zipIterableWithIoReactivexFunctionsFunction_(zipper);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexFunctionsBiFunction;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LIoReactivexFunctionsBiFunction;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LIoReactivexFunctionsConsumer;", 0x9, 9, 10, -1, 11, -1, -1 },
    { NULL, "LIoReactivexFunctionsConsumer;", 0x9, 12, 10, -1, 13, -1, -1 },
    { NULL, "LIoReactivexFunctionsAction;", 0x9, 14, 10, -1, 15, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 16, 17, -1, 18, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 19, 7, -1, 20, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 21, 7, -1, 22, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 23, 24, -1, 25, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 23, 26, -1, 27, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 23, 28, -1, 29, -1, -1 },
    { NULL, "LJavaUtilConcurrentCallable;", 0x9, 23, 30, -1, 31, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 32, 33, -1, 34, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 35, 7, -1, 36, -1, -1 },
    { NULL, "LIoReactivexFunctionsFunction;", 0x9, 37, 7, -1, 38, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(simpleGeneratorWithIoReactivexFunctionsConsumer:);
  methods[2].selector = @selector(simpleBiGeneratorWithIoReactivexFunctionsBiConsumer:);
  methods[3].selector = @selector(itemDelayWithIoReactivexFunctionsFunction:);
  methods[4].selector = @selector(observerOnNextWithIoReactivexObserver:);
  methods[5].selector = @selector(observerOnErrorWithIoReactivexObserver:);
  methods[6].selector = @selector(observerOnCompleteWithIoReactivexObserver:);
  methods[7].selector = @selector(flatMapWithCombinerWithIoReactivexFunctionsFunction:withIoReactivexFunctionsBiFunction:);
  methods[8].selector = @selector(flatMapIntoIterableWithIoReactivexFunctionsFunction:);
  methods[9].selector = @selector(repeatWhenHandlerWithIoReactivexFunctionsFunction:);
  methods[10].selector = @selector(replayCallableWithIoReactivexObservable:);
  methods[11].selector = @selector(replayCallableWithIoReactivexObservable:withInt:);
  methods[12].selector = @selector(replayCallableWithIoReactivexObservable:withInt:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[13].selector = @selector(replayCallableWithIoReactivexObservable:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[14].selector = @selector(replayFunctionWithIoReactivexFunctionsFunction:withIoReactivexScheduler:);
  methods[15].selector = @selector(retryWhenHandlerWithIoReactivexFunctionsFunction:);
  methods[16].selector = @selector(zipIterableWithIoReactivexFunctionsFunction:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "simpleGenerator", "LIoReactivexFunctionsConsumer;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>(Lio/reactivex/functions/Consumer<Lio/reactivex/Emitter<TT;>;>;)Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;", "simpleBiGenerator", "LIoReactivexFunctionsBiConsumer;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>(Lio/reactivex/functions/BiConsumer<TS;Lio/reactivex/Emitter<TT;>;>;)Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;", "itemDelay", "LIoReactivexFunctionsFunction;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<TU;>;>;)Lio/reactivex/functions/Function<TT;Lio/reactivex/ObservableSource<TT;>;>;", "observerOnNext", "LIoReactivexObserver;", "<T:Ljava/lang/Object;>(Lio/reactivex/Observer<TT;>;)Lio/reactivex/functions/Consumer<TT;>;", "observerOnError", "<T:Ljava/lang/Object;>(Lio/reactivex/Observer<TT;>;)Lio/reactivex/functions/Consumer<Ljava/lang/Throwable;>;", "observerOnComplete", "<T:Ljava/lang/Object;>(Lio/reactivex/Observer<TT;>;)Lio/reactivex/functions/Action;", "flatMapWithCombiner", "LIoReactivexFunctionsFunction;LIoReactivexFunctionsBiFunction;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<+TU;>;>;Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;)Lio/reactivex/functions/Function<TT;Lio/reactivex/ObservableSource<TR;>;>;", "flatMapIntoIterable", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-TT;+Ljava/lang/Iterable<+TU;>;>;)Lio/reactivex/functions/Function<TT;Lio/reactivex/ObservableSource<TU;>;>;", "repeatWhenHandler", "(Lio/reactivex/functions/Function<-Lio/reactivex/Observable<Ljava/lang/Object;>;+Lio/reactivex/ObservableSource<*>;>;)Lio/reactivex/functions/Function<Lio/reactivex/Observable<Lio/reactivex/Notification<Ljava/lang/Object;>;>;Lio/reactivex/ObservableSource<*>;>;", "replayCallable", "LIoReactivexObservable;", "<T:Ljava/lang/Object;>(Lio/reactivex/Observable<TT;>;)Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;", "LIoReactivexObservable;I", "<T:Ljava/lang/Object;>(Lio/reactivex/Observable<TT;>;I)Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;", "LIoReactivexObservable;IJLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;", "<T:Ljava/lang/Object;>(Lio/reactivex/Observable<TT;>;IJLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;", "LIoReactivexObservable;JLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;", "<T:Ljava/lang/Object;>(Lio/reactivex/Observable<TT;>;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;", "replayFunction", "LIoReactivexFunctionsFunction;LIoReactivexScheduler;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-Lio/reactivex/Observable<TT;>;+Lio/reactivex/ObservableSource<TR;>;>;Lio/reactivex/Scheduler;)Lio/reactivex/functions/Function<Lio/reactivex/Observable<TT;>;Lio/reactivex/ObservableSource<TR;>;>;", "retryWhenHandler", "<T:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-Lio/reactivex/Observable<Ljava/lang/Throwable;>;+Lio/reactivex/ObservableSource<*>;>;)Lio/reactivex/functions/Function<Lio/reactivex/Observable<Lio/reactivex/Notification<Ljava/lang/Object;>;>;Lio/reactivex/ObservableSource<*>;>;", "zipIterable", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;)Lio/reactivex/functions/Function<Ljava/util/List<Lio/reactivex/ObservableSource<+TT;>;>;Lio/reactivex/ObservableSource<+TR;>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator;LIoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator;LIoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction;LIoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext;LIoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError;LIoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete;LIoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner;LIoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter;LIoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable;LIoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt;LIoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler;LIoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter;LIoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner;LIoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper = { "ObservableInternalHelper", "io.reactivex.internal.operators.observable", ptrTable, methods, NULL, 7, 0x11, 17, 0, -1, 39, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_init(IoReactivexInternalOperatorsObservableObservableInternalHelper *self) {
  NSObject_init(self);
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"No instances!");
}

IoReactivexInternalOperatorsObservableObservableInternalHelper *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_init() {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper, init)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_init() {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper, init)
}

id<IoReactivexFunctionsBiFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_simpleGeneratorWithIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> consumer) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(consumer);
}

id<IoReactivexFunctionsBiFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_simpleBiGeneratorWithIoReactivexFunctionsBiConsumer_(id<IoReactivexFunctionsBiConsumer> consumer) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(consumer);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_itemDelayWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> itemDelay) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(itemDelay);
}

id<IoReactivexFunctionsConsumer> IoReactivexInternalOperatorsObservableObservableInternalHelper_observerOnNextWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext_initWithIoReactivexObserver_(observer);
}

id<IoReactivexFunctionsConsumer> IoReactivexInternalOperatorsObservableObservableInternalHelper_observerOnErrorWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError_initWithIoReactivexObserver_(observer);
}

id<IoReactivexFunctionsAction> IoReactivexInternalOperatorsObservableObservableInternalHelper_observerOnCompleteWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete_initWithIoReactivexObserver_(observer);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_flatMapWithCombinerWithIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<IoReactivexFunctionsFunction> mapper, id<IoReactivexFunctionsBiFunction> combiner) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(combiner, mapper);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_flatMapIntoIterableWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> mapper) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(mapper);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_repeatWhenHandlerWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> handler) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler_initWithIoReactivexFunctionsFunction_(handler);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_(IoReactivexObservable *parent) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(parent);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_withInt_(IoReactivexObservable *parent, jint bufferSize) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(parent, bufferSize);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *parent, jint bufferSize, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, bufferSize, time, unit, scheduler);
}

id<JavaUtilConcurrentCallable> IoReactivexInternalOperatorsObservableObservableInternalHelper_replayCallableWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *parent, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(parent, time, unit, scheduler);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_replayFunctionWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> selector, IoReactivexScheduler *scheduler) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(selector, scheduler);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_retryWhenHandlerWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> handler) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner_initWithIoReactivexFunctionsFunction_(handler);
}

id<IoReactivexFunctionsFunction> IoReactivexInternalOperatorsObservableObservableInternalHelper_zipIterableWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> zipper) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_initialize();
  return create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(zipper);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator

- (instancetype)initWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)consumer {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(self, consumer);
  return self;
}

- (id)applyWithId:(id)t1
           withId:(id<IoReactivexEmitter>)t2 {
  [((id<IoReactivexFunctionsConsumer>) nil_chk(consumer_)) acceptWithId:t2];
  return t1;
}

- (void)dealloc {
  RELEASE_(consumer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsConsumer:);
  methods[1].selector = @selector(applyWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "consumer_", "LIoReactivexFunctionsConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsConsumer;", "(Lio/reactivex/functions/Consumer<Lio/reactivex/Emitter<TT;>;>;)V", "apply", "LNSObject;LIoReactivexEmitter;", "LJavaLangException;", "(TS;Lio/reactivex/Emitter<TT;>;)TS;", "Lio/reactivex/functions/Consumer<Lio/reactivex/Emitter<TT;>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator = { "SimpleGenerator", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator *self, id<IoReactivexFunctionsConsumer> consumer) {
  NSObject_init(self);
  JreStrongAssign(&self->consumer_, consumer);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> consumer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator, initWithIoReactivexFunctionsConsumer_, consumer)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator_initWithIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> consumer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator, initWithIoReactivexFunctionsConsumer_, consumer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleGenerator)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator

- (instancetype)initWithIoReactivexFunctionsBiConsumer:(id<IoReactivexFunctionsBiConsumer>)consumer {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(self, consumer);
  return self;
}

- (id)applyWithId:(id)t1
           withId:(id<IoReactivexEmitter>)t2 {
  [((id<IoReactivexFunctionsBiConsumer>) nil_chk(consumer_)) acceptWithId:t1 withId:t2];
  return t1;
}

- (void)dealloc {
  RELEASE_(consumer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsBiConsumer:);
  methods[1].selector = @selector(applyWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "consumer_", "LIoReactivexFunctionsBiConsumer;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsBiConsumer;", "(Lio/reactivex/functions/BiConsumer<TS;Lio/reactivex/Emitter<TT;>;>;)V", "apply", "LNSObject;LIoReactivexEmitter;", "LJavaLangException;", "(TS;Lio/reactivex/Emitter<TT;>;)TS;", "Lio/reactivex/functions/BiConsumer<TS;Lio/reactivex/Emitter<TT;>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;S:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/BiFunction<TS;Lio/reactivex/Emitter<TT;>;TS;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator = { "SimpleBiGenerator", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator *self, id<IoReactivexFunctionsBiConsumer> consumer) {
  NSObject_init(self);
  JreStrongAssign(&self->consumer_, consumer);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(id<IoReactivexFunctionsBiConsumer> consumer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator, initWithIoReactivexFunctionsBiConsumer_, consumer)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator_initWithIoReactivexFunctionsBiConsumer_(id<IoReactivexFunctionsBiConsumer> consumer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator, initWithIoReactivexFunctionsBiConsumer_, consumer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_SimpleBiGenerator)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)itemDelay {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(self, itemDelay);
  return self;
}

- (id<IoReactivexObservableSource>)applyWithId:(id)v {
  return [((IoReactivexObservable *) nil_chk([create_IoReactivexInternalOperatorsObservableObservableTake_initWithIoReactivexObservableSource_withLong_([((id<IoReactivexFunctionsFunction>) nil_chk(itemDelay_)) applyWithId:v], 1) mapWithIoReactivexFunctionsFunction:IoReactivexInternalFunctionsFunctions_justFunctionWithId_(v)])) defaultIfEmptyWithId:v];
}

- (void)dealloc {
  RELEASE_(itemDelay_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexObservableSource;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "itemDelay_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<TU;>;>;)V", "apply", "LNSObject;", "LJavaLangException;", "(TT;)Lio/reactivex/ObservableSource<TT;>;", "Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<TU;>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TT;Lio/reactivex/ObservableSource<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction = { "ItemDelayFunction", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction *self, id<IoReactivexFunctionsFunction> itemDelay) {
  NSObject_init(self);
  JreStrongAssign(&self->itemDelay_, itemDelay);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> itemDelay) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction, initWithIoReactivexFunctionsFunction_, itemDelay)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> itemDelay) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction, initWithIoReactivexFunctionsFunction_, itemDelay)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_ItemDelayFunction)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)observer {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext_initWithIoReactivexObserver_(self, observer);
  return self;
}

- (void)acceptWithId:(id)v {
  [((id<IoReactivexObserver>) nil_chk(observer_)) onNextWithId:v];
}

- (void)dealloc {
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:);
  methods[1].selector = @selector(acceptWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;", "(Lio/reactivex/Observer<TT;>;)V", "accept", "LNSObject;", "LJavaLangException;", "(TT;)V", "Lio/reactivex/Observer<TT;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Consumer<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext = { "ObserverOnNext", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext_initWithIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext *self, id<IoReactivexObserver> observer) {
  NSObject_init(self);
  JreStrongAssign(&self->observer_, observer);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext, initWithIoReactivexObserver_, observer)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext, initWithIoReactivexObserver_, observer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnNext)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)observer {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError_initWithIoReactivexObserver_(self, observer);
  return self;
}

- (void)acceptWithId:(NSException *)v {
  [((id<IoReactivexObserver>) nil_chk(observer_)) onErrorWithNSException:v];
}

- (void)dealloc {
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:);
  methods[1].selector = @selector(acceptWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;", "(Lio/reactivex/Observer<TT;>;)V", "accept", "LNSException;", "LJavaLangException;", "Lio/reactivex/Observer<TT;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Consumer<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError = { "ObserverOnError", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError_initWithIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError *self, id<IoReactivexObserver> observer) {
  NSObject_init(self);
  JreStrongAssign(&self->observer_, observer);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError, initWithIoReactivexObserver_, observer)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError, initWithIoReactivexObserver_, observer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnError)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)observer {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete_initWithIoReactivexObserver_(self, observer);
  return self;
}

- (void)run {
  [((id<IoReactivexObserver>) nil_chk(observer_)) onComplete];
}

- (void)dealloc {
  RELEASE_(observer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "observer_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;", "(Lio/reactivex/Observer<TT;>;)V", "LJavaLangException;", "Lio/reactivex/Observer<TT;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Action;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete = { "ObserverOnComplete", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 4, -1, -1, 5, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete_initWithIoReactivexObserver_(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete *self, id<IoReactivexObserver> observer) {
  NSObject_init(self);
  JreStrongAssign(&self->observer_, observer);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete, initWithIoReactivexObserver_, observer)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete_initWithIoReactivexObserver_(id<IoReactivexObserver> observer) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete, initWithIoReactivexObserver_, observer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_ObserverOnComplete)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner

- (instancetype)initWithIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner
                                                withId:(id)t {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(self, combiner, t);
  return self;
}

- (id)applyWithId:(id)w {
  return [((id<IoReactivexFunctionsBiFunction>) nil_chk(combiner_)) applyWithId:t_ withId:w];
}

- (void)dealloc {
  RELEASE_(combiner_);
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsBiFunction:withId:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "combiner_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "t_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsBiFunction;LNSObject;", "(Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;TT;)V", "apply", "LNSObject;", "LJavaLangException;", "(TU;)TR;", "Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;", "TT;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<U:Ljava/lang/Object;R:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TU;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner = { "FlatMapWithCombinerInner", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner *self, id<IoReactivexFunctionsBiFunction> combiner, id t) {
  NSObject_init(self);
  JreStrongAssign(&self->combiner_, combiner);
  JreStrongAssign(&self->t_, t);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(id<IoReactivexFunctionsBiFunction> combiner, id t) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner, initWithIoReactivexFunctionsBiFunction_withId_, combiner, t)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(id<IoReactivexFunctionsBiFunction> combiner, id t) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner, initWithIoReactivexFunctionsBiFunction_withId_, combiner, t)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter

- (instancetype)initWithIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)combiner
                      withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(self, combiner, mapper);
  return self;
}

- (id<IoReactivexObservableSource>)applyWithId:(id)t {
  id<IoReactivexObservableSource> u = [((id<IoReactivexFunctionsFunction>) nil_chk(mapper_)) applyWithId:t];
  return create_IoReactivexInternalOperatorsObservableObservableMap_initWithIoReactivexObservableSource_withIoReactivexFunctionsFunction_(u, create_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerInner_initWithIoReactivexFunctionsBiFunction_withId_(combiner_, t));
}

- (void)dealloc {
  RELEASE_(combiner_);
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexObservableSource;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsBiFunction:withIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "combiner_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "mapper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsBiFunction;LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<+TU;>;>;)V", "apply", "LNSObject;", "LJavaLangException;", "(TT;)Lio/reactivex/ObservableSource<TR;>;", "Lio/reactivex/functions/BiFunction<-TT;-TU;+TR;>;", "Lio/reactivex/functions/Function<-TT;+Lio/reactivex/ObservableSource<+TU;>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TT;Lio/reactivex/ObservableSource<TR;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter = { "FlatMapWithCombinerOuter", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 2, 8, -1, -1, 9, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter *self, id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexFunctionsFunction> mapper) {
  NSObject_init(self);
  JreStrongAssign(&self->combiner_, combiner);
  JreStrongAssign(&self->mapper_, mapper);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter, initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_, combiner, mapper)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter_initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_(id<IoReactivexFunctionsBiFunction> combiner, id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter, initWithIoReactivexFunctionsBiFunction_withIoReactivexFunctionsFunction_, combiner, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapWithCombinerOuter)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(self, mapper);
  return self;
}

- (id<IoReactivexObservableSource>)applyWithId:(id)t {
  return create_IoReactivexInternalOperatorsObservableObservableFromIterable_initWithJavaLangIterable_([((id<IoReactivexFunctionsFunction>) nil_chk(mapper_)) applyWithId:t]);
}

- (void)dealloc {
  RELEASE_(mapper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexObservableSource;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mapper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-TT;+Ljava/lang/Iterable<+TU;>;>;)V", "apply", "LNSObject;", "LJavaLangException;", "(TT;)Lio/reactivex/ObservableSource<TU;>;", "Lio/reactivex/functions/Function<-TT;+Ljava/lang/Iterable<+TU;>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<TT;Lio/reactivex/ObservableSource<TU;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable = { "FlatMapIntoIterable", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable *self, id<IoReactivexFunctionsFunction> mapper) {
  NSObject_init(self);
  JreStrongAssign(&self->mapper_, mapper);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable, initWithIoReactivexFunctionsFunction_, mapper)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> mapper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable, initWithIoReactivexFunctionsFunction_, mapper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_FlatMapIntoIterable)

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt)

IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt *IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_values_[1];

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt

- (id)applyWithId:(id)t {
  return JavaLangInteger_valueOfWithInt_(0);
}

+ (IOSObjectArray *)values {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_values();
}

+ (IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt *)valueOfWithNSString:(NSString *)name {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "[LIoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LIoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LNSObject;", "LJavaLangException;", "valueOf", "LNSString;", &JreEnum(IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt, INSTANCE), "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "Ljava/lang/Enum<Lio/reactivex/internal/operators/observable/ObservableInternalHelper$MapToInt;>;Lio/reactivex/functions/Function<Ljava/lang/Object;Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt = { "MapToInt", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x4018, 3, 1, 6, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt;
}

+ (void)initialize {
  if (self == [IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 1 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"INSTANCE",
    };
    for (jint i = 0; i < 1; i++) {
      (IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt)
  }
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_initWithNSString_withInt_(IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_values() {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_initialize();
  return [IOSObjectArray arrayWithObjects:IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_values_ count:1 type:IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_class_()];
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt *IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_valueOfWithNSString_(NSString *name) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_initialize();
  for (int i = 0; i < 1; i++) {
    IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt *e = IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt *IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_fromOrdinal(NSUInteger ordinal) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)handler {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler_initWithIoReactivexFunctionsFunction_(self, handler);
  return self;
}

- (id<IoReactivexObservableSource>)applyWithId:(IoReactivexObservable *)no {
  return [((id<IoReactivexFunctionsFunction>) nil_chk(handler_)) applyWithId:[((IoReactivexObservable *) nil_chk(no)) mapWithIoReactivexFunctionsFunction:JreLoadEnum(IoReactivexInternalOperatorsObservableObservableInternalHelper_MapToInt, INSTANCE)]];
}

- (void)dealloc {
  RELEASE_(handler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexObservableSource;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "handler_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-Lio/reactivex/Observable<Ljava/lang/Object;>;+Lio/reactivex/ObservableSource<*>;>;)V", "apply", "LIoReactivexObservable;", "LJavaLangException;", "(Lio/reactivex/Observable<Lio/reactivex/Notification<Ljava/lang/Object;>;>;)Lio/reactivex/ObservableSource<*>;", "Lio/reactivex/functions/Function<-Lio/reactivex/Observable<Ljava/lang/Object;>;+Lio/reactivex/ObservableSource<*>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "Ljava/lang/Object;Lio/reactivex/functions/Function<Lio/reactivex/Observable<Lio/reactivex/Notification<Ljava/lang/Object;>;>;Lio/reactivex/ObservableSource<*>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler = { "RepeatWhenOuterHandler", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler *self, id<IoReactivexFunctionsFunction> handler) {
  NSObject_init(self);
  JreStrongAssign(&self->handler_, handler);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> handler) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler, initWithIoReactivexFunctionsFunction_, handler)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> handler) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler, initWithIoReactivexFunctionsFunction_, handler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_RepeatWhenOuterHandler)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_1

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0 {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(self, capture$0);
  return self;
}

- (IoReactivexObservablesConnectableObservable *)call {
  return [((IoReactivexObservable *) nil_chk(val$parent_)) replay];
}

- (void)dealloc {
  RELEASE_(val$parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexObservablesConnectableObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservable:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$parent_", "LIoReactivexObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()Lio/reactivex/observables/ConnectableObservable<TT;>;", "Lio/reactivex/Observable<TT;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "replayCallableWithIoReactivexObservable:", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_1 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_1;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(IoReactivexInternalOperatorsObservableObservableInternalHelper_1 *self, IoReactivexObservable *capture$0) {
  JreStrongAssign(&self->val$parent_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_1 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(IoReactivexObservable *capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_1, initWithIoReactivexObservable_, capture$0)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_1 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_1_initWithIoReactivexObservable_(IoReactivexObservable *capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_1, initWithIoReactivexObservable_, capture$0)
}

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_2

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0
                                      withInt:(jint)capture$1 {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(self, capture$0, capture$1);
  return self;
}

- (IoReactivexObservablesConnectableObservable *)call {
  return [((IoReactivexObservable *) nil_chk(val$parent_)) replayWithInt:val$bufferSize_];
}

- (void)dealloc {
  RELEASE_(val$parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexObservablesConnectableObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservable:withInt:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$parent_", "LIoReactivexObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$bufferSize_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lio/reactivex/observables/ConnectableObservable<TT;>;", "Lio/reactivex/Observable<TT;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "replayCallableWithIoReactivexObservable:withInt:", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_2 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, 4, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_2;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(IoReactivexInternalOperatorsObservableObservableInternalHelper_2 *self, IoReactivexObservable *capture$0, jint capture$1) {
  JreStrongAssign(&self->val$parent_, capture$0);
  self->val$bufferSize_ = capture$1;
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_2 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(IoReactivexObservable *capture$0, jint capture$1) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_2, initWithIoReactivexObservable_withInt_, capture$0, capture$1)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_2 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_2_initWithIoReactivexObservable_withInt_(IoReactivexObservable *capture$0, jint capture$1) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_2, initWithIoReactivexObservable_withInt_, capture$0, capture$1)
}

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_3

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0
                                      withInt:(jint)capture$1
                                     withLong:(jlong)capture$2
               withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$3
                     withIoReactivexScheduler:(IoReactivexScheduler *)capture$4 {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(self, capture$0, capture$1, capture$2, capture$3, capture$4);
  return self;
}

- (IoReactivexObservablesConnectableObservable *)call {
  return [((IoReactivexObservable *) nil_chk(val$parent_)) replayWithInt:val$bufferSize_ withLong:val$time_ withJavaUtilConcurrentTimeUnit:val$unit_ withIoReactivexScheduler:val$scheduler_];
}

- (void)dealloc {
  RELEASE_(val$parent_);
  RELEASE_(val$unit_);
  RELEASE_(val$scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexObservablesConnectableObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservable:withInt:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$parent_", "LIoReactivexObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$bufferSize_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$time_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lio/reactivex/observables/ConnectableObservable<TT;>;", "Lio/reactivex/Observable<TT;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "replayCallableWithIoReactivexObservable:withInt:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_3 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 5, 2, -1, 3, 4, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_3;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableInternalHelper_3 *self, IoReactivexObservable *capture$0, jint capture$1, jlong capture$2, JavaUtilConcurrentTimeUnit *capture$3, IoReactivexScheduler *capture$4) {
  JreStrongAssign(&self->val$parent_, capture$0);
  self->val$bufferSize_ = capture$1;
  self->val$time_ = capture$2;
  JreStrongAssign(&self->val$unit_, capture$3);
  JreStrongAssign(&self->val$scheduler_, capture$4);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_3 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jint capture$1, jlong capture$2, JavaUtilConcurrentTimeUnit *capture$3, IoReactivexScheduler *capture$4) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_3, initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, capture$0, capture$1, capture$2, capture$3, capture$4)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_3 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_3_initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jint capture$1, jlong capture$2, JavaUtilConcurrentTimeUnit *capture$3, IoReactivexScheduler *capture$4) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_3, initWithIoReactivexObservable_withInt_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, capture$0, capture$1, capture$2, capture$3, capture$4)
}

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_4

- (instancetype)initWithIoReactivexObservable:(IoReactivexObservable *)capture$0
                                     withLong:(jlong)capture$1
               withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$2
                     withIoReactivexScheduler:(IoReactivexScheduler *)capture$3 {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(self, capture$0, capture$1, capture$2, capture$3);
  return self;
}

- (IoReactivexObservablesConnectableObservable *)call {
  return [((IoReactivexObservable *) nil_chk(val$parent_)) replayWithLong:val$time_ withJavaUtilConcurrentTimeUnit:val$unit_ withIoReactivexScheduler:val$scheduler_];
}

- (void)dealloc {
  RELEASE_(val$parent_);
  RELEASE_(val$unit_);
  RELEASE_(val$scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexObservablesConnectableObservable;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservable:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$parent_", "LIoReactivexObservable;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$time_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Lio/reactivex/observables/ConnectableObservable<TT;>;", "Lio/reactivex/Observable<TT;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "replayCallableWithIoReactivexObservable:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Lio/reactivex/observables/ConnectableObservable<TT;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_4 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 4, 2, -1, 3, 4, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_4;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableInternalHelper_4 *self, IoReactivexObservable *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, IoReactivexScheduler *capture$3) {
  JreStrongAssign(&self->val$parent_, capture$0);
  self->val$time_ = capture$1;
  JreStrongAssign(&self->val$unit_, capture$2);
  JreStrongAssign(&self->val$scheduler_, capture$3);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_4 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, IoReactivexScheduler *capture$3) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_4, initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, capture$0, capture$1, capture$2, capture$3)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_4 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_4_initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexObservable *capture$0, jlong capture$1, JavaUtilConcurrentTimeUnit *capture$2, IoReactivexScheduler *capture$3) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_4, initWithIoReactivexObservable_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, capture$0, capture$1, capture$2, capture$3)
}

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_5

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)capture$0
                            withIoReactivexScheduler:(IoReactivexScheduler *)capture$1 {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(self, capture$0, capture$1);
  return self;
}

- (id<IoReactivexObservableSource>)applyWithId:(IoReactivexObservable *)t {
  return [((IoReactivexObservable *) nil_chk(IoReactivexObservable_wrapWithIoReactivexObservableSource_([((id<IoReactivexFunctionsFunction>) nil_chk(val$selector_)) applyWithId:t]))) observeOnWithIoReactivexScheduler:val$scheduler_];
}

- (void)dealloc {
  RELEASE_(val$selector_);
  RELEASE_(val$scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexObservableSource;", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:withIoReactivexScheduler:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$selector_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x1012, -1, -1, 4, -1 },
    { "val$scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LIoReactivexObservable;", "LJavaLangException;", "(Lio/reactivex/Observable<TT;>;)Lio/reactivex/ObservableSource<TR;>;", "Lio/reactivex/functions/Function<-Lio/reactivex/Observable<TT;>;+Lio/reactivex/ObservableSource<TR;>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "replayFunctionWithIoReactivexFunctionsFunction:withIoReactivexScheduler:", "Ljava/lang/Object;Lio/reactivex/functions/Function<Lio/reactivex/Observable<TT;>;Lio/reactivex/ObservableSource<TR;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_5 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 2, 5, -1, 6, 7, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_5;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(IoReactivexInternalOperatorsObservableObservableInternalHelper_5 *self, id<IoReactivexFunctionsFunction> capture$0, IoReactivexScheduler *capture$1) {
  JreStrongAssign(&self->val$selector_, capture$0);
  JreStrongAssign(&self->val$scheduler_, capture$1);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_5 *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> capture$0, IoReactivexScheduler *capture$1) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_5, initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_, capture$0, capture$1)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_5 *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_5_initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_(id<IoReactivexFunctionsFunction> capture$0, IoReactivexScheduler *capture$1) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_5, initWithIoReactivexFunctionsFunction_withIoReactivexScheduler_, capture$0, capture$1)
}

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter)

IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter *IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_values_[1];

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter

- (NSException *)applyWithId:(IoReactivexNotification *)t {
  return [((IoReactivexNotification *) nil_chk(t)) getError];
}

- (jboolean)testWithId:(IoReactivexNotification *)t {
  return [((IoReactivexNotification *) nil_chk(t)) isOnError];
}

+ (IOSObjectArray *)values {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_values();
}

+ (IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter *)valueOfWithNSString:(NSString *)name {
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSException;", 0x1, 0, 1, 2, 3, -1, -1 },
    { NULL, "Z", 0x1, 4, 1, 2, 5, -1, -1 },
    { NULL, "[LIoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter;", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  methods[1].selector = @selector(testWithId:);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LIoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LIoReactivexNotification;", "LJavaLangException;", "(Lio/reactivex/Notification<Ljava/lang/Object;>;)Ljava/lang/Throwable;", "test", "(Lio/reactivex/Notification<Ljava/lang/Object;>;)Z", "valueOf", "LNSString;", &JreEnum(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter, INSTANCE), "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "Ljava/lang/Enum<Lio/reactivex/internal/operators/observable/ObservableInternalHelper$ErrorMapperFilter;>;Lio/reactivex/functions/Function<Lio/reactivex/Notification<Ljava/lang/Object;>;Ljava/lang/Throwable;>;Lio/reactivex/functions/Predicate<Lio/reactivex/Notification<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter = { "ErrorMapperFilter", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x4018, 4, 1, 9, -1, -1, 10, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter;
}

+ (void)initialize {
  if (self == [IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 1 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"INSTANCE",
    };
    for (jint i = 0; i < 1; i++) {
      (IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter)
  }
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_initWithNSString_withInt_(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_values() {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_initialize();
  return [IOSObjectArray arrayWithObjects:IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_values_ count:1 type:IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_class_()];
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter *IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_valueOfWithNSString_(NSString *name) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_initialize();
  for (int i = 0; i < 1; i++) {
    IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter *e = IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter *IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_fromOrdinal(NSUInteger ordinal) {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_initialize();
  if (ordinal >= 1) {
    return nil;
  }
  return IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)handler {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner_initWithIoReactivexFunctionsFunction_(self, handler);
  return self;
}

- (id<IoReactivexObservableSource>)applyWithId:(IoReactivexObservable *)no {
  IoReactivexObservable *map = [((IoReactivexObservable *) nil_chk([((IoReactivexObservable *) nil_chk(no)) takeWhileWithIoReactivexFunctionsPredicate:JreLoadEnum(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter, INSTANCE)])) mapWithIoReactivexFunctionsFunction:JreLoadEnum(IoReactivexInternalOperatorsObservableObservableInternalHelper_ErrorMapperFilter, INSTANCE)];
  return [((id<IoReactivexFunctionsFunction>) nil_chk(handler_)) applyWithId:map];
}

- (void)dealloc {
  RELEASE_(handler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexObservableSource;", 0x1, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "handler_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-Lio/reactivex/Observable<Ljava/lang/Throwable;>;+Lio/reactivex/ObservableSource<*>;>;)V", "apply", "LIoReactivexObservable;", "LJavaLangException;", "(Lio/reactivex/Observable<Lio/reactivex/Notification<Ljava/lang/Object;>;>;)Lio/reactivex/ObservableSource<*>;", "Lio/reactivex/functions/Function<-Lio/reactivex/Observable<Ljava/lang/Throwable;>;+Lio/reactivex/ObservableSource<*>;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "Ljava/lang/Object;Lio/reactivex/functions/Function<Lio/reactivex/Observable<Lio/reactivex/Notification<Ljava/lang/Object;>;>;Lio/reactivex/ObservableSource<*>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner = { "RetryWhenInner", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner *self, id<IoReactivexFunctionsFunction> handler) {
  NSObject_init(self);
  JreStrongAssign(&self->handler_, handler);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> handler) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner, initWithIoReactivexFunctionsFunction_, handler)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> handler) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner, initWithIoReactivexFunctionsFunction_, handler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_RetryWhenInner)

@implementation IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction

- (instancetype)initWithIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)zipper {
  IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(self, zipper);
  return self;
}

- (id<IoReactivexObservableSource>)applyWithId:(id<JavaUtilList>)list {
  return IoReactivexObservable_zipIterableWithJavaLangIterable_withIoReactivexFunctionsFunction_withBoolean_withInt_(list, zipper_, false, IoReactivexObservable_bufferSize());
}

- (void)dealloc {
  RELEASE_(zipper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIoReactivexObservableSource;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexFunctionsFunction:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "zipper_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexFunctionsFunction;", "(Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;)V", "apply", "LJavaUtilList;", "(Ljava/util/List<Lio/reactivex/ObservableSource<+TT;>;>;)Lio/reactivex/ObservableSource<+TR;>;", "Lio/reactivex/functions/Function<-[Ljava/lang/Object;+TR;>;", "LIoReactivexInternalOperatorsObservableObservableInternalHelper;", "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/functions/Function<Ljava/util/List<Lio/reactivex/ObservableSource<+TT;>;>;Lio/reactivex/ObservableSource<+TR;>;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction = { "ZipIterableFunction", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 2, 1, 6, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction;
}

@end

void IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction *self, id<IoReactivexFunctionsFunction> zipper) {
  NSObject_init(self);
  JreStrongAssign(&self->zipper_, zipper);
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction *new_IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> zipper) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction, initWithIoReactivexFunctionsFunction_, zipper)
}

IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction *create_IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction_initWithIoReactivexFunctionsFunction_(id<IoReactivexFunctionsFunction> zipper) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction, initWithIoReactivexFunctionsFunction_, zipper)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableInternalHelper_ZipIterableFunction)
