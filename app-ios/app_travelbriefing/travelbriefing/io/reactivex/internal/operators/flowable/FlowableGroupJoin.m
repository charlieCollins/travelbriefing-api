//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableGroupJoin.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/Flowable.h"
#include "io/reactivex/disposables/CompositeDisposable.h"
#include "io/reactivex/exceptions/Exceptions.h"
#include "io/reactivex/exceptions/MissingBackpressureException.h"
#include "io/reactivex/functions/BiFunction.h"
#include "io/reactivex/functions/Function.h"
#include "io/reactivex/internal/functions/ObjectHelper.h"
#include "io/reactivex/internal/fuseable/SimpleQueue.h"
#include "io/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream.h"
#include "io/reactivex/internal/operators/flowable/FlowableGroupJoin.h"
#include "io/reactivex/internal/queue/SpscLinkedArrayQueue.h"
#include "io/reactivex/internal/subscriptions/SubscriptionHelper.h"
#include "io/reactivex/internal/util/BackpressureHelper.h"
#include "io/reactivex/internal/util/ExceptionHelper.h"
#include "io/reactivex/plugins/RxJavaPlugins.h"
#include "io/reactivex/processors/UnicastProcessor.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/Collection.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "org/reactivestreams/Publisher.h"
#include "org/reactivestreams/Subscriber.h"
#include "org/reactivestreams/Subscription.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport : NSObject

@end

inline jlong IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_get_serialVersionUID();
#define IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_serialVersionUID -6071216598687999801LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription, serialVersionUID, jlong)

inline jlong IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_get_serialVersionUID();
#define IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_serialVersionUID 1883890389173668373LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber, serialVersionUID, jlong)

inline jlong IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_get_serialVersionUID();
#define IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_serialVersionUID 1883890389173668373LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber, serialVersionUID, jlong)

@implementation IoReactivexInternalOperatorsFlowableFlowableGroupJoin

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                    withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)leftEnd
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)rightEnd
                 withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)resultSelector {
  IoReactivexInternalOperatorsFlowableFlowableGroupJoin_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(self, source, other, leftEnd, rightEnd, resultSelector);
  return self;
}

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s {
  IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription *parent = create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(s, leftEnd_, rightEnd_, resultSelector_);
  [((id<OrgReactivestreamsSubscriber>) nil_chk(s)) onSubscribeWithOrgReactivestreamsSubscription:parent];
  IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber *left = create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_(parent, true);
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(parent->disposables_)) addWithIoReactivexDisposablesDisposable:left];
  IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber *right = create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_(parent, false);
  [parent->disposables_ addWithIoReactivexDisposablesDisposable:right];
  [((id<OrgReactivestreamsPublisher>) nil_chk(source_)) subscribeWithOrgReactivestreamsSubscriber:left];
  [((id<OrgReactivestreamsPublisher>) nil_chk(other_)) subscribeWithOrgReactivestreamsSubscriber:right];
}

- (void)dealloc {
  RELEASE_(other_);
  RELEASE_(leftEnd_);
  RELEASE_(rightEnd_);
  RELEASE_(resultSelector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsPublisher:withOrgReactivestreamsPublisher:withIoReactivexFunctionsFunction:withIoReactivexFunctionsFunction:withIoReactivexFunctionsBiFunction:);
  methods[1].selector = @selector(subscribeActualWithOrgReactivestreamsSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "other_", "LOrgReactivestreamsPublisher;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "leftEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
    { "rightEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "resultSelector_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsPublisher;LOrgReactivestreamsPublisher;LIoReactivexFunctionsFunction;LIoReactivexFunctionsFunction;LIoReactivexFunctionsBiFunction;", "(Lorg/reactivestreams/Publisher<TTLeft;>;Lorg/reactivestreams/Publisher<+TTRight;>;Lio/reactivex/functions/Function<-TTLeft;+Lorg/reactivestreams/Publisher<TTLeftEnd;>;>;Lio/reactivex/functions/Function<-TTRight;+Lorg/reactivestreams/Publisher<TTRightEnd;>;>;Lio/reactivex/functions/BiFunction<-TTLeft;-Lio/reactivex/Flowable<TTRight;>;+TR;>;)V", "subscribeActual", "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<-TR;>;)V", "Lorg/reactivestreams/Publisher<+TTRight;>;", "Lio/reactivex/functions/Function<-TTLeft;+Lorg/reactivestreams/Publisher<TTLeftEnd;>;>;", "Lio/reactivex/functions/Function<-TTRight;+Lorg/reactivestreams/Publisher<TTRightEnd;>;>;", "Lio/reactivex/functions/BiFunction<-TTLeft;-Lio/reactivex/Flowable<TTRight;>;+TR;>;", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport;LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription;LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber;LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber;", "<TLeft:Ljava/lang/Object;TRight:Ljava/lang/Object;TLeftEnd:Ljava/lang/Object;TRightEnd:Ljava/lang/Object;R:Ljava/lang/Object;>Lio/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream<TTLeft;TR;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableGroupJoin = { "FlowableGroupJoin", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x11, 2, 4, -1, 9, -1, 10, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableGroupJoin;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableGroupJoin_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsFlowableFlowableGroupJoin *self, id<OrgReactivestreamsPublisher> source, id<OrgReactivestreamsPublisher> other, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream_initWithOrgReactivestreamsPublisher_(self, source);
  JreStrongAssign(&self->other_, other);
  JreStrongAssign(&self->leftEnd_, leftEnd);
  JreStrongAssign(&self->rightEnd_, rightEnd);
  JreStrongAssign(&self->resultSelector_, resultSelector);
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin *new_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsPublisher> source, id<OrgReactivestreamsPublisher> other, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin, initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, source, other, leftEnd, rightEnd, resultSelector)
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin *create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsPublisher> source, id<OrgReactivestreamsPublisher> other, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin, initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, source, other, leftEnd, rightEnd, resultSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableGroupJoin)

@implementation IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(innerErrorWithNSException:);
  methods[1].selector = @selector(innerCompleteWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber:);
  methods[2].selector = @selector(innerValueWithBoolean:withId:);
  methods[3].selector = @selector(innerCloseWithBoolean:withIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber:);
  methods[4].selector = @selector(innerCloseErrorWithNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "innerError", "LNSException;", "innerComplete", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber;", "innerValue", "ZLNSObject;", "innerClose", "ZLIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber;", "innerCloseError", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport = { "JoinSupport", "io.reactivex.internal.operators.flowable", ptrTable, methods, NULL, 7, 0x608, 5, 0, 9, -1, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport)

J2OBJC_INITIALIZED_DEFN(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription)

JavaLangInteger *IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_VALUE;
JavaLangInteger *IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_VALUE;
JavaLangInteger *IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_CLOSE;
JavaLangInteger *IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_CLOSE;

@implementation IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)leftEnd
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)rightEnd
                  withIoReactivexFunctionsBiFunction:(id<IoReactivexFunctionsBiFunction>)resultSelector {
  IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(self, actual, leftEnd, rightEnd, resultSelector);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_validateWithLong_(n)) {
    IoReactivexInternalUtilBackpressureHelper_addWithJavaUtilConcurrentAtomicAtomicLong_withLong_(requested_, n);
  }
}

- (void)cancel {
  if (JreLoadVolatileBoolean(&cancelled_)) {
    return;
  }
  JreAssignVolatileBoolean(&cancelled_, true);
  [self cancelAll];
  if ([self getAndIncrement] == 0) {
    [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(queue_)) clear];
  }
}

- (void)cancelAll {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) dispose];
}

- (void)errorAllWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)a {
  NSException *ex = IoReactivexInternalUtilExceptionHelper_terminateWithJavaUtilConcurrentAtomicAtomicReference_(error_);
  for (IoReactivexProcessorsUnicastProcessor * __strong up in nil_chk([((id<JavaUtilMap>) nil_chk(lefts_)) values])) {
    [((IoReactivexProcessorsUnicastProcessor *) nil_chk(up)) onErrorWithNSException:ex];
  }
  [lefts_ clear];
  [((id<JavaUtilMap>) nil_chk(rights_)) clear];
  [((id<OrgReactivestreamsSubscriber>) nil_chk(a)) onErrorWithNSException:ex];
}

- (void)failWithNSException:(NSException *)exc
withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)a
withIoReactivexInternalFuseableSimpleQueue:(id<IoReactivexInternalFuseableSimpleQueue>)q {
  IoReactivexExceptionsExceptions_throwIfFatalWithNSException_(exc);
  IoReactivexInternalUtilExceptionHelper_addThrowableWithJavaUtilConcurrentAtomicAtomicReference_withNSException_(error_, exc);
  [((id<IoReactivexInternalFuseableSimpleQueue>) nil_chk(q)) clear];
  [self cancelAll];
  [self errorAllWithOrgReactivestreamsSubscriber:a];
}

- (void)drain {
  if ([self getAndIncrement] != 0) {
    return;
  }
  jint missed = 1;
  IoReactivexInternalQueueSpscLinkedArrayQueue *q = queue_;
  id<OrgReactivestreamsSubscriber> a = actual_;
  for (; ; ) {
    for (; ; ) {
      if (JreLoadVolatileBoolean(&cancelled_)) {
        [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) clear];
        return;
      }
      NSException *ex = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(error_)) get];
      if (ex != nil) {
        [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) clear];
        [self cancelAll];
        [self errorAllWithOrgReactivestreamsSubscriber:a];
        return;
      }
      jboolean d = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(active_)) get] == 0;
      JavaLangInteger *mode = (JavaLangInteger *) cast_chk([((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(q)) poll], [JavaLangInteger class]);
      jboolean empty = mode == nil;
      if (d && empty) {
        for (IoReactivexProcessorsUnicastProcessor * __strong up in nil_chk([((id<JavaUtilMap>) nil_chk(lefts_)) values])) {
          [((IoReactivexProcessorsUnicastProcessor *) nil_chk(up)) onComplete];
        }
        [lefts_ clear];
        [((id<JavaUtilMap>) nil_chk(rights_)) clear];
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) dispose];
        [((id<OrgReactivestreamsSubscriber>) nil_chk(a)) onComplete];
        return;
      }
      if (empty) {
        break;
      }
      id val = [q poll];
      if (mode == IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_VALUE) {
        id left = val;
        IoReactivexProcessorsUnicastProcessor *up = IoReactivexProcessorsUnicastProcessor_create();
        jint idx = leftIndex_++;
        [((id<JavaUtilMap>) nil_chk(lefts_)) putWithId:JavaLangInteger_valueOfWithInt_(idx) withId:up];
        id<OrgReactivestreamsPublisher> p;
        @try {
          p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(leftEnd_)) applyWithId:left], @"The leftEnd returned a null Publisher");
        }
        @catch (NSException *exc) {
          [self failWithNSException:exc withOrgReactivestreamsSubscriber:a withIoReactivexInternalFuseableSimpleQueue:q];
          return;
        }
        IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *end = create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_(self, true, idx);
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) addWithIoReactivexDisposablesDisposable:end];
        [((id<OrgReactivestreamsPublisher>) nil_chk(p)) subscribeWithOrgReactivestreamsSubscriber:end];
        ex = [error_ get];
        if (ex != nil) {
          [q clear];
          [self cancelAll];
          [self errorAllWithOrgReactivestreamsSubscriber:a];
          return;
        }
        id w;
        @try {
          w = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsBiFunction>) nil_chk(resultSelector_)) applyWithId:left withId:up], @"The resultSelector returned a null value");
        }
        @catch (NSException *exc) {
          [self failWithNSException:exc withOrgReactivestreamsSubscriber:a withIoReactivexInternalFuseableSimpleQueue:q];
          return;
        }
        if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(requested_)) get] != 0LL) {
          [((id<OrgReactivestreamsSubscriber>) nil_chk(a)) onNextWithId:w];
          IoReactivexInternalUtilBackpressureHelper_producedWithJavaUtilConcurrentAtomicAtomicLong_withLong_(requested_, 1);
        }
        else {
          [self failWithNSException:create_IoReactivexExceptionsMissingBackpressureException_initWithNSString_(@"Could not emit value due to lack of requests") withOrgReactivestreamsSubscriber:a withIoReactivexInternalFuseableSimpleQueue:q];
          return;
        }
        for (id __strong right in nil_chk([((id<JavaUtilMap>) nil_chk(rights_)) values])) {
          [((IoReactivexProcessorsUnicastProcessor *) nil_chk(up)) onNextWithId:right];
        }
      }
      else if (mode == IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_VALUE) {
        id right = val;
        jint idx = rightIndex_++;
        [((id<JavaUtilMap>) nil_chk(rights_)) putWithId:JavaLangInteger_valueOfWithInt_(idx) withId:right];
        id<OrgReactivestreamsPublisher> p;
        @try {
          p = IoReactivexInternalFunctionsObjectHelper_requireNonNullWithId_withNSString_([((id<IoReactivexFunctionsFunction>) nil_chk(rightEnd_)) applyWithId:right], @"The rightEnd returned a null Publisher");
        }
        @catch (NSException *exc) {
          [self failWithNSException:exc withOrgReactivestreamsSubscriber:a withIoReactivexInternalFuseableSimpleQueue:q];
          return;
        }
        IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *end = create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_(self, false, idx);
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) addWithIoReactivexDisposablesDisposable:end];
        [((id<OrgReactivestreamsPublisher>) nil_chk(p)) subscribeWithOrgReactivestreamsSubscriber:end];
        ex = [error_ get];
        if (ex != nil) {
          [q clear];
          [self cancelAll];
          [self errorAllWithOrgReactivestreamsSubscriber:a];
          return;
        }
        for (IoReactivexProcessorsUnicastProcessor * __strong up in nil_chk([((id<JavaUtilMap>) nil_chk(lefts_)) values])) {
          [((IoReactivexProcessorsUnicastProcessor *) nil_chk(up)) onNextWithId:right];
        }
      }
      else if (mode == IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_CLOSE) {
        IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *end = (IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *) cast_chk(val, [IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber class]);
        IoReactivexProcessorsUnicastProcessor *up = [((id<JavaUtilMap>) nil_chk(lefts_)) removeWithId:JavaLangInteger_valueOfWithInt_(((IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *) nil_chk(end))->index_)];
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) removeWithIoReactivexDisposablesDisposable:end];
        if (up != nil) {
          [up onComplete];
        }
      }
      else if (mode == IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_CLOSE) {
        IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *end = (IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *) cast_chk(val, [IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber class]);
        [((id<JavaUtilMap>) nil_chk(rights_)) removeWithId:JavaLangInteger_valueOfWithInt_(((IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *) nil_chk(end))->index_)];
        [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) removeWithIoReactivexDisposablesDisposable:end];
      }
    }
    missed = [self addAndGetWithInt:-missed];
    if (missed == 0) {
      break;
    }
  }
}

- (void)innerErrorWithNSException:(NSException *)ex {
  if (IoReactivexInternalUtilExceptionHelper_addThrowableWithJavaUtilConcurrentAtomicAtomicReference_withNSException_(error_, ex)) {
    [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(active_)) decrementAndGet];
    [self drain];
  }
  else {
    IoReactivexPluginsRxJavaPlugins_onErrorWithNSException_(ex);
  }
}

- (void)innerCompleteWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber:(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber *)sender {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(disposables_)) delete__WithIoReactivexDisposablesDisposable:sender];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(active_)) decrementAndGet];
  [self drain];
}

- (void)innerValueWithBoolean:(jboolean)isLeft
                       withId:(id)o {
  @synchronized(self) {
    [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(queue_)) offerWithId:isLeft ? IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_VALUE : IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_VALUE withId:o];
  }
  [self drain];
}

- (void)innerCloseWithBoolean:(jboolean)isLeft
withIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber:(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *)index {
  @synchronized(self) {
    [((IoReactivexInternalQueueSpscLinkedArrayQueue *) nil_chk(queue_)) offerWithId:isLeft ? IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_CLOSE : IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_CLOSE withId:index];
  }
  [self drain];
}

- (void)innerCloseErrorWithNSException:(NSException *)ex {
  if (IoReactivexInternalUtilExceptionHelper_addThrowableWithJavaUtilConcurrentAtomicAtomicReference_withNSException_(error_, ex)) {
    [self drain];
  }
  else {
    IoReactivexPluginsRxJavaPlugins_onErrorWithNSException_(ex);
  }
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(requested_);
  RELEASE_(queue_);
  RELEASE_(disposables_);
  RELEASE_(lefts_);
  RELEASE_(rights_);
  RELEASE_(error_);
  RELEASE_(leftEnd_);
  RELEASE_(rightEnd_);
  RELEASE_(resultSelector_);
  RELEASE_(active_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, 9, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscriber:withIoReactivexFunctionsFunction:withIoReactivexFunctionsFunction:withIoReactivexFunctionsBiFunction:);
  methods[1].selector = @selector(requestWithLong:);
  methods[2].selector = @selector(cancel);
  methods[3].selector = @selector(cancelAll);
  methods[4].selector = @selector(errorAllWithOrgReactivestreamsSubscriber:);
  methods[5].selector = @selector(failWithNSException:withOrgReactivestreamsSubscriber:withIoReactivexInternalFuseableSimpleQueue:);
  methods[6].selector = @selector(drain);
  methods[7].selector = @selector(innerErrorWithNSException:);
  methods[8].selector = @selector(innerCompleteWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber:);
  methods[9].selector = @selector(innerValueWithBoolean:withId:);
  methods[10].selector = @selector(innerCloseWithBoolean:withIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber:);
  methods[11].selector = @selector(innerCloseErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x10, -1, -1, 19, -1 },
    { "requested_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "queue_", "LIoReactivexInternalQueueSpscLinkedArrayQueue;", .constantValue.asLong = 0, 0x10, -1, -1, 20, -1 },
    { "disposables_", "LIoReactivexDisposablesCompositeDisposable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "lefts_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 21, -1 },
    { "rights_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 22, -1 },
    { "error_", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x10, -1, -1, 23, -1 },
    { "leftEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 24, -1 },
    { "rightEnd_", "LIoReactivexFunctionsFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 25, -1 },
    { "resultSelector_", "LIoReactivexFunctionsBiFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 26, -1 },
    { "active_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "leftIndex_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "rightIndex_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cancelled_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "LEFT_VALUE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 27, -1, -1 },
    { "RIGHT_VALUE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 28, -1, -1 },
    { "LEFT_CLOSE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 29, -1, -1 },
    { "RIGHT_CLOSE", "LJavaLangInteger;", .constantValue.asLong = 0, 0x18, -1, 30, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsSubscriber;LIoReactivexFunctionsFunction;LIoReactivexFunctionsFunction;LIoReactivexFunctionsBiFunction;", "(Lorg/reactivestreams/Subscriber<-TR;>;Lio/reactivex/functions/Function<-TTLeft;+Lorg/reactivestreams/Publisher<TTLeftEnd;>;>;Lio/reactivex/functions/Function<-TTRight;+Lorg/reactivestreams/Publisher<TTRightEnd;>;>;Lio/reactivex/functions/BiFunction<-TTLeft;-Lio/reactivex/Flowable<TTRight;>;+TR;>;)V", "request", "J", "errorAll", "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<*>;)V", "fail", "LNSException;LOrgReactivestreamsSubscriber;LIoReactivexInternalFuseableSimpleQueue;", "(Ljava/lang/Throwable;Lorg/reactivestreams/Subscriber<*>;Lio/reactivex/internal/fuseable/SimpleQueue<*>;)V", "innerError", "LNSException;", "innerComplete", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber;", "innerValue", "ZLNSObject;", "innerClose", "ZLIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber;", "innerCloseError", "Lorg/reactivestreams/Subscriber<-TR;>;", "Lio/reactivex/internal/queue/SpscLinkedArrayQueue<Ljava/lang/Object;>;", "Ljava/util/Map<Ljava/lang/Integer;Lio/reactivex/processors/UnicastProcessor<TTRight;>;>;", "Ljava/util/Map<Ljava/lang/Integer;TTRight;>;", "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Throwable;>;", "Lio/reactivex/functions/Function<-TTLeft;+Lorg/reactivestreams/Publisher<TTLeftEnd;>;>;", "Lio/reactivex/functions/Function<-TTRight;+Lorg/reactivestreams/Publisher<TTRightEnd;>;>;", "Lio/reactivex/functions/BiFunction<-TTLeft;-Lio/reactivex/Flowable<TTRight;>;+TR;>;", &IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_VALUE, &IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_VALUE, &IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_CLOSE, &IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_CLOSE, "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin;", "<TLeft:Ljava/lang/Object;TRight:Ljava/lang/Object;TLeftEnd:Ljava/lang/Object;TRightEnd:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicInteger;Lorg/reactivestreams/Subscription;Lio/reactivex/internal/operators/flowable/FlowableGroupJoin$JoinSupport;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription = { "GroupJoinSubscription", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 12, 19, 31, -1, -1, 32, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription;
}

+ (void)initialize {
  if (self == [IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription class]) {
    JreStrongAssign(&IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_VALUE, JavaLangInteger_valueOfWithInt_(1));
    JreStrongAssign(&IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_VALUE, JavaLangInteger_valueOfWithInt_(2));
    JreStrongAssign(&IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_LEFT_CLOSE, JavaLangInteger_valueOfWithInt_(3));
    JreStrongAssign(&IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_RIGHT_CLOSE, JavaLangInteger_valueOfWithInt_(4));
    J2OBJC_SET_INITIALIZED(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription)
  }
}

@end

void IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  JavaUtilConcurrentAtomicAtomicInteger_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssignAndConsume(&self->requested_, new_JavaUtilConcurrentAtomicAtomicLong_init());
  JreStrongAssignAndConsume(&self->disposables_, new_IoReactivexDisposablesCompositeDisposable_init());
  JreStrongAssignAndConsume(&self->queue_, new_IoReactivexInternalQueueSpscLinkedArrayQueue_initWithInt_(IoReactivexFlowable_bufferSize()));
  JreStrongAssignAndConsume(&self->lefts_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssignAndConsume(&self->rights_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssignAndConsume(&self->error_, new_JavaUtilConcurrentAtomicAtomicReference_init());
  JreStrongAssign(&self->leftEnd_, leftEnd);
  JreStrongAssign(&self->rightEnd_, rightEnd);
  JreStrongAssign(&self->resultSelector_, resultSelector);
  JreStrongAssignAndConsume(&self->active_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(2));
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription *new_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, actual, leftEnd, rightEnd, resultSelector)
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription *create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> leftEnd, id<IoReactivexFunctionsFunction> rightEnd, id<IoReactivexFunctionsBiFunction> resultSelector) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription, initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withIoReactivexFunctionsFunction_withIoReactivexFunctionsBiFunction_, actual, leftEnd, rightEnd, resultSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_GroupJoinSubscription)

@implementation IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport:(id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>)parent
                                                                              withBoolean:(jboolean)isLeft {
  IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_(self, parent, isLeft);
  return self;
}

- (void)dispose {
  IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(self);
}

- (jboolean)isDisposed {
  return IoReactivexInternalSubscriptionsSubscriptionHelper_isCancelledWithOrgReactivestreamsSubscription_([self get]);
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withOrgReactivestreamsSubscription_(self, s)) {
    [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
  }
}

- (void)onNextWithId:(id)t {
  [((id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>) nil_chk(parent_)) innerValueWithBoolean:isLeft_ withId:t];
}

- (void)onErrorWithNSException:(NSException *)t {
  [((id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>) nil_chk(parent_)) innerErrorWithNSException:t];
}

- (void)onComplete {
  [((id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>) nil_chk(parent_)) innerCompleteWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber:self];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport:withBoolean:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[4].selector = @selector(onNextWithId:);
  methods[5].selector = @selector(onErrorWithNSException:);
  methods[6].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "parent_", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "isLeft_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport;Z", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "onError", "LNSException;", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin;", "Ljava/util/concurrent/atomic/AtomicReference<Lorg/reactivestreams/Subscription;>;Lorg/reactivestreams/Subscriber<Ljava/lang/Object;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber = { "LeftRightSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 7, 3, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber *self, id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport> parent, jboolean isLeft) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->isLeft_ = isLeft;
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_(id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport> parent, jboolean isLeft) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_, parent, isLeft)
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_(id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport> parent, jboolean isLeft) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_, parent, isLeft)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightSubscriber)

@implementation IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport:(id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>)parent
                                                                              withBoolean:(jboolean)isLeft
                                                                                  withInt:(jint)index {
  IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_(self, parent, isLeft, index);
  return self;
}

- (void)dispose {
  IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(self);
}

- (jboolean)isDisposed {
  return IoReactivexInternalSubscriptionsSubscriptionHelper_isCancelledWithOrgReactivestreamsSubscription_([self get]);
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_setOnceWithJavaUtilConcurrentAtomicAtomicReference_withOrgReactivestreamsSubscription_(self, s)) {
    [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
  }
}

- (void)onNextWithId:(id)t {
  if (IoReactivexInternalSubscriptionsSubscriptionHelper_cancelWithJavaUtilConcurrentAtomicAtomicReference_(self)) {
    [((id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>) nil_chk(parent_)) innerCloseWithBoolean:isLeft_ withIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber:self];
  }
}

- (void)onErrorWithNSException:(NSException *)t {
  [((id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>) nil_chk(parent_)) innerCloseErrorWithNSException:t];
}

- (void)onComplete {
  [((id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport>) nil_chk(parent_)) innerCloseWithBoolean:isLeft_ withIoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber:self];
}

- (void)dealloc {
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport:withBoolean:withInt:);
  methods[1].selector = @selector(dispose);
  methods[2].selector = @selector(isDisposed);
  methods[3].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[4].selector = @selector(onNextWithId:);
  methods[5].selector = @selector(onErrorWithNSException:);
  methods[6].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "parent_", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "isLeft_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport;ZI", "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "onError", "LNSException;", "LIoReactivexInternalOperatorsFlowableFlowableGroupJoin;", "Ljava/util/concurrent/atomic/AtomicReference<Lorg/reactivestreams/Subscription;>;Lorg/reactivestreams/Subscriber<Ljava/lang/Object;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber = { "LeftRightEndSubscriber", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x18, 7, 4, 7, -1, -1, 8, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *self, id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport> parent, jboolean isLeft, jint index) {
  JavaUtilConcurrentAtomicAtomicReference_init(self);
  JreStrongAssign(&self->parent_, parent);
  self->isLeft_ = isLeft;
  self->index_ = index;
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_(id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport> parent, jboolean isLeft, jint index) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_, parent, isLeft, index)
}

IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_(id<IoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport> parent, jboolean isLeft, jint index) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber, initWithIoReactivexInternalOperatorsFlowableFlowableGroupJoin_JoinSupport_withBoolean_withInt_, parent, isLeft, index)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableGroupJoin_LeftRightEndSubscriber)
