//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/Flowable.h"
#include "io/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther.h"
#include "io/reactivex/internal/subscriptions/SubscriptionArbiter.h"
#include "io/reactivex/plugins/RxJavaPlugins.h"
#include "java/lang/Long.h"
#include "org/reactivestreams/Publisher.h"
#include "org/reactivestreams/Subscriber.h"
#include "org/reactivestreams/Subscription.h"

@interface IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 : NSObject < OrgReactivestreamsSubscriber > {
 @public
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *this$0_;
  IoReactivexInternalSubscriptionsSubscriptionArbiter *val$serial_;
  id<OrgReactivestreamsSubscriber> val$child_;
  jboolean done_;
}

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther:(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *)outer$
                                   withIoReactivexInternalSubscriptionsSubscriptionArbiter:(IoReactivexInternalSubscriptionsSubscriptionArbiter *)capture$0
                                                          withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)capture$1;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onComplete;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *self, IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *capture$0, id<OrgReactivestreamsSubscriber> capture$1);

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *capture$0, id<OrgReactivestreamsSubscriber> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *capture$0, id<OrgReactivestreamsSubscriber> capture$1);

@interface IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 : NSObject < OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscription> val$s_;
}

- (instancetype)initWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)capture$0;

- (void)requestWithLong:(jlong)n;

- (void)cancel;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 *self, id<OrgReactivestreamsSubscription> capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> capture$0);

@interface IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 : NSObject < OrgReactivestreamsSubscriber > {
 @public
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *this$0_;
}

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1:(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *)outer$;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onComplete;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2)

__attribute__((unused)) static void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 *self, IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *outer$);

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *outer$);

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)main
                    withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)other {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(self, main, other);
  return self;
}

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)child {
  IoReactivexInternalSubscriptionsSubscriptionArbiter *serial = create_IoReactivexInternalSubscriptionsSubscriptionArbiter_init();
  [((id<OrgReactivestreamsSubscriber>) nil_chk(child)) onSubscribeWithOrgReactivestreamsSubscription:serial];
  id<OrgReactivestreamsSubscriber> otherSubscriber = create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(self, serial, child);
  [((id<OrgReactivestreamsPublisher>) nil_chk(other_)) subscribeWithOrgReactivestreamsSubscriber:otherSubscriber];
}

- (void)dealloc {
  RELEASE_(main_);
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsPublisher:withOrgReactivestreamsPublisher:);
  methods[1].selector = @selector(subscribeActualWithOrgReactivestreamsSubscriber:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "main_", "LOrgReactivestreamsPublisher;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "other_", "LOrgReactivestreamsPublisher;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LOrgReactivestreamsPublisher;LOrgReactivestreamsPublisher;", "(Lorg/reactivestreams/Publisher<+TT;>;Lorg/reactivestreams/Publisher<TU;>;)V", "subscribeActual", "LOrgReactivestreamsSubscriber;", "(Lorg/reactivestreams/Subscriber<-TT;>;)V", "Lorg/reactivestreams/Publisher<+TT;>;", "Lorg/reactivestreams/Publisher<TU;>;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lio/reactivex/Flowable<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther = { "FlowableDelaySubscriptionOther", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, -1, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *self, id<OrgReactivestreamsPublisher> main, id<OrgReactivestreamsPublisher> other) {
  IoReactivexFlowable_init(self);
  JreStrongAssign(&self->main_, main);
  JreStrongAssign(&self->other_, other);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> main, id<OrgReactivestreamsPublisher> other) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther, initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_, main, other)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> main, id<OrgReactivestreamsPublisher> other) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther, initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_, main, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther)

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther:(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *)outer$
                                   withIoReactivexInternalSubscriptionsSubscriptionArbiter:(IoReactivexInternalSubscriptionsSubscriptionArbiter *)capture$0
                                                          withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)capture$1 {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  [((IoReactivexInternalSubscriptionsSubscriptionArbiter *) nil_chk(val$serial_)) setSubscriptionWithOrgReactivestreamsSubscription:create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(s)];
  [((id<OrgReactivestreamsSubscription>) nil_chk(s)) requestWithLong:JavaLangLong_MAX_VALUE];
}

- (void)onNextWithId:(id)t {
  [self onComplete];
}

- (void)onErrorWithNSException:(NSException *)e {
  if (done_) {
    IoReactivexPluginsRxJavaPlugins_onErrorWithNSException_(e);
    return;
  }
  done_ = true;
  [((id<OrgReactivestreamsSubscriber>) nil_chk(val$child_)) onErrorWithNSException:e];
}

- (void)onComplete {
  if (done_) {
    return;
  }
  done_ = true;
  [((id<OrgReactivestreamsPublisher>) nil_chk(this$0_->main_)) subscribeWithOrgReactivestreamsSubscriber:create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(self)];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$serial_);
  RELEASE_(val$child_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther:withIoReactivexInternalSubscriptionsSubscriptionArbiter:withOrgReactivestreamsSubscriber:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$serial_", "LIoReactivexInternalSubscriptionsSubscriptionArbiter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$child_", "LOrgReactivestreamsSubscriber;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
    { "done_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TU;)V", "onError", "LNSException;", "Lio/reactivex/internal/operators/flowable/FlowableDelaySubscriptionOther<TT;TU;>;", "Lorg/reactivestreams/Subscriber<-TT;>;", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther;", "subscribeActualWithOrgReactivestreamsSubscriber:", "Ljava/lang/Object;Lorg/reactivestreams/Subscriber<TU;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 = { "", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x8018, 5, 4, 9, -1, 10, 11, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *self, IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *capture$0, id<OrgReactivestreamsSubscriber> capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$serial_, capture$0);
  JreStrongAssign(&self->val$child_, capture$1);
  NSObject_init(self);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *capture$0, id<OrgReactivestreamsSubscriber> capture$1) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_, outer$, capture$0, capture$1)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther *outer$, IoReactivexInternalSubscriptionsSubscriptionArbiter *capture$0, id<OrgReactivestreamsSubscriber> capture$1) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_withIoReactivexInternalSubscriptionsSubscriptionArbiter_withOrgReactivestreamsSubscriber_, outer$, capture$0, capture$1)
}

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1

- (instancetype)initWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)capture$0 {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(self, capture$0);
  return self;
}

- (void)requestWithLong:(jlong)n {
}

- (void)cancel {
  [((id<OrgReactivestreamsSubscription>) nil_chk(val$s_)) cancel];
}

- (void)dealloc {
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgReactivestreamsSubscription:);
  methods[1].selector = @selector(requestWithLong:);
  methods[2].selector = @selector(cancel);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$s_", "LOrgReactivestreamsSubscription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "request", "J", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1;", "onSubscribeWithOrgReactivestreamsSubscription:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 = { "", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x8018, 3, 1, 2, -1, 3, -1, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 *self, id<OrgReactivestreamsSubscription> capture$0) {
  JreStrongAssign(&self->val$s_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1, initWithOrgReactivestreamsSubscription_, capture$0)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1 *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1_initWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_1, initWithOrgReactivestreamsSubscription_, capture$0)
}

@implementation IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1:(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *)outer$ {
  IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(self, outer$);
  return self;
}

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s {
  [((IoReactivexInternalSubscriptionsSubscriptionArbiter *) nil_chk(this$0_->val$serial_)) setSubscriptionWithOrgReactivestreamsSubscription:s];
}

- (void)onNextWithId:(id)t {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(this$0_->val$child_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)t {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(this$0_->val$child_)) onErrorWithNSException:t];
}

- (void)onComplete {
  [((id<OrgReactivestreamsSubscriber>) nil_chk(this$0_->val$child_)) onComplete];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1:);
  methods[1].selector = @selector(onSubscribeWithOrgReactivestreamsSubscription:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LOrgReactivestreamsSubscription;", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "LIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1;", "onComplete", "Ljava/lang/Object;Lorg/reactivestreams/Subscriber<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 = { "", "io.reactivex.internal.operators.flowable", ptrTable, methods, fields, 7, 0x8018, 5, 1, 7, -1, 8, 9, -1 };
  return &_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2;
}

@end

void IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 *self, IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 *new_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_, outer$)
}

IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2 *create_IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2_initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1 *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_2, initWithIoReactivexInternalOperatorsFlowableFlowableDelaySubscriptionOther_1_, outer$)
}
