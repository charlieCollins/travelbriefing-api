//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableCombineLatest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCombineLatest")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableCombineLatest
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCombineLatest 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCombineLatest 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableCombineLatest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableCombineLatest_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCombineLatest || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableCombineLatest))
#define IoReactivexInternalOperatorsFlowableFlowableCombineLatest_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "io/reactivex/Flowable.h"

@class IOSObjectArray;
@protocol IoReactivexFunctionsFunction;
@protocol JavaLangIterable;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableCombineLatest : IoReactivexFlowable {
 @public
  IOSObjectArray *array_;
  id<JavaLangIterable> iterable_;
  id<IoReactivexFunctionsFunction> combiner_;
  jint bufferSize_;
  jboolean delayErrors_;
}

#pragma mark Public

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)iterable
        withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)combiner
                                 withInt:(jint)bufferSize
                             withBoolean:(jboolean)delayErrors;

- (instancetype)initWithOrgReactivestreamsPublisherArray:(IOSObjectArray *)array
                        withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)combiner
                                                 withInt:(jint)bufferSize
                                             withBoolean:(jboolean)delayErrors;

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableCombineLatest)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest, array_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest, iterable_, id<JavaLangIterable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest, combiner_, id<IoReactivexFunctionsFunction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableCombineLatest_initWithOrgReactivestreamsPublisherArray_withIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableCombineLatest *self, IOSObjectArray *array, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayErrors);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest *new_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_initWithOrgReactivestreamsPublisherArray_withIoReactivexFunctionsFunction_withInt_withBoolean_(IOSObjectArray *array, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayErrors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest *create_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_initWithOrgReactivestreamsPublisherArray_withIoReactivexFunctionsFunction_withInt_withBoolean_(IOSObjectArray *array, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayErrors);

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableCombineLatest_initWithJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableCombineLatest *self, id<JavaLangIterable> iterable, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayErrors);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest *new_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_initWithJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<JavaLangIterable> iterable, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayErrors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest *create_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_initWithJavaLangIterable_withIoReactivexFunctionsFunction_withInt_withBoolean_(id<JavaLangIterable> iterable, id<IoReactivexFunctionsFunction> combiner, jint bufferSize, jboolean delayErrors);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCombineLatest || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator))
#define IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_

#define RESTRICT_IoReactivexInternalSubscriptionsBasicIntQueueSubscription 1
#define INCLUDE_IoReactivexInternalSubscriptionsBasicIntQueueSubscription 1
#include "io/reactivex/internal/subscriptions/BasicIntQueueSubscription.h"

@class IOSObjectArray;
@class IoReactivexInternalQueueSpscLinkedArrayQueue;
@class JavaUtilConcurrentAtomicAtomicLong;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator : IoReactivexInternalSubscriptionsBasicIntQueueSubscription {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<IoReactivexFunctionsFunction> combiner_;
  IOSObjectArray *subscribers_;
  IoReactivexInternalQueueSpscLinkedArrayQueue *queue_;
  IOSObjectArray *latest_;
  jboolean delayErrors_;
  jboolean outputFused_;
  jint nonEmptySources_;
  jint completedSources_;
  volatile_jboolean cancelled_;
  JavaUtilConcurrentAtomicAtomicLong *requested_;
  volatile_jboolean done_;
  JavaUtilConcurrentAtomicAtomicReference *error_;
}

#pragma mark Public

- (void)cancel;

- (void)clear;

- (jboolean)isEmpty;

- (id)poll;

- (void)requestWithLong:(jlong)n;

- (jint)requestFusionWithInt:(jint)requestedMode;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)combiner
                                             withInt:(jint)n
                                             withInt:(jint)bufferSize
                                         withBoolean:(jboolean)delayErrors;

- (void)cancelAll;

- (jboolean)checkTerminatedWithBoolean:(jboolean)d
                           withBoolean:(jboolean)empty
      withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)a
withIoReactivexInternalQueueSpscLinkedArrayQueue:(IoReactivexInternalQueueSpscLinkedArrayQueue *)q;

- (void)drain;

- (void)drainAsync;

- (void)drainOutput;

- (void)innerCompleteWithInt:(jint)index;

- (void)innerErrorWithInt:(jint)index
          withNSException:(NSException *)e;

- (void)innerValueWithInt:(jint)index
                   withId:(id)value;

- (void)subscribeWithOrgReactivestreamsPublisherArray:(IOSObjectArray *)sources
                                              withInt:(jint)n;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator, combiner_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator, subscribers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator, queue_, IoReactivexInternalQueueSpscLinkedArrayQueue *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator, latest_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator, requested_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator, error_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> combiner, jint n, jint bufferSize, jboolean delayErrors);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *new_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> combiner, jint n, jint bufferSize, jboolean delayErrors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *create_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withInt_withInt_withBoolean_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> combiner, jint n, jint bufferSize, jboolean delayErrors);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCombineLatest || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

@class IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber : JavaUtilConcurrentAtomicAtomicReference < OrgReactivestreamsSubscriber > {
 @public
  IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *parent_;
  jint index_;
  jint prefetch_;
  jint limit_;
  jint produced_;
}

#pragma mark Public

- (void)cancel;

- (id<OrgReactivestreamsSubscription>)get;

- (id<OrgReactivestreamsSubscription>)getAndSetWithId:(id<OrgReactivestreamsSubscription>)arg0;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestOne;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator:(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *)parent
                                                                                                   withInt:(jint)index
                                                                                                   withInt:(jint)prefetch;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber, parent_, IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_withInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber *self, IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *parent, jint index, jint prefetch);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_withInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *parent, jint index, jint prefetch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator_withInt_withInt_(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestCoordinator *parent, jint index, jint prefetch);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableCombineLatest_CombineLatestInnerSubscriber)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCombineLatest")
