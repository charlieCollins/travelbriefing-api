//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableConcatMapEager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager

#if !defined (IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager))
#define IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "io/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream.h"

@class IoReactivexInternalUtilErrorMode;
@protocol IoReactivexFunctionsFunction;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableConcatMapEager : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<IoReactivexFunctionsFunction> mapper_;
  jint maxConcurrency_;
  jint prefetch_;
  IoReactivexInternalUtilErrorMode *errorMode_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                   withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                            withInt:(jint)maxConcurrency
                                            withInt:(jint)prefetch
               withIoReactivexInternalUtilErrorMode:(IoReactivexInternalUtilErrorMode *)errorMode;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager, errorMode_, IoReactivexInternalUtilErrorMode *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager *self, id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapEager *new_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapEager *create_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "org/reactivestreams/Subscription.h"

#define RESTRICT_IoReactivexInternalSubscribersInnerQueuedSubscriberSupport 1
#define INCLUDE_IoReactivexInternalSubscribersInnerQueuedSubscriberSupport 1
#include "io/reactivex/internal/subscribers/InnerQueuedSubscriberSupport.h"

@class IoReactivexInternalQueueSpscLinkedArrayQueue;
@class IoReactivexInternalSubscribersInnerQueuedSubscriber;
@class IoReactivexInternalUtilAtomicThrowable;
@class IoReactivexInternalUtilErrorMode;
@class JavaUtilConcurrentAtomicAtomicLong;
@protocol IoReactivexFunctionsFunction;

@interface IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber : JavaUtilConcurrentAtomicAtomicInteger < OrgReactivestreamsSubscriber, OrgReactivestreamsSubscription, IoReactivexInternalSubscribersInnerQueuedSubscriberSupport > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<IoReactivexFunctionsFunction> mapper_;
  jint maxConcurrency_;
  jint prefetch_;
  IoReactivexInternalUtilErrorMode *errorMode_;
  IoReactivexInternalUtilAtomicThrowable *errors_;
  JavaUtilConcurrentAtomicAtomicLong *requested_;
  IoReactivexInternalQueueSpscLinkedArrayQueue *subscribers_;
  id<OrgReactivestreamsSubscription> s_;
  volatile_jboolean cancelled_;
  volatile_jboolean done_;
  volatile_id current_;
}

#pragma mark Public

- (void)cancel;

- (void)drain;

- (void)innerCompleteWithIoReactivexInternalSubscribersInnerQueuedSubscriber:(IoReactivexInternalSubscribersInnerQueuedSubscriber *)inner;

- (void)innerErrorWithIoReactivexInternalSubscribersInnerQueuedSubscriber:(IoReactivexInternalSubscribersInnerQueuedSubscriber *)inner
                                                          withNSException:(NSException *)e;

- (void)innerNextWithIoReactivexInternalSubscribersInnerQueuedSubscriber:(IoReactivexInternalSubscribersInnerQueuedSubscriber *)inner
                                                                  withId:(id)value;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                    withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)mapper
                                             withInt:(jint)maxConcurrency
                                             withInt:(jint)prefetch
                withIoReactivexInternalUtilErrorMode:(IoReactivexInternalUtilErrorMode *)errorMode;

- (void)cancelAll;

- (void)drainAndCancel;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, mapper_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, errorMode_, IoReactivexInternalUtilErrorMode *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, errors_, IoReactivexInternalUtilAtomicThrowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, requested_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, subscribers_, IoReactivexInternalQueueSpscLinkedArrayQueue *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_VOLATILE_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber, current_, IoReactivexInternalSubscribersInnerQueuedSubscriber *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber_initWithOrgReactivestreamsSubscriber_withIoReactivexFunctionsFunction_withInt_withInt_withIoReactivexInternalUtilErrorMode_(id<OrgReactivestreamsSubscriber> actual, id<IoReactivexFunctionsFunction> mapper, jint maxConcurrency, jint prefetch, IoReactivexInternalUtilErrorMode *errorMode);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableConcatMapEager_ConcatMapEagerDelayErrorSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatMapEager")
