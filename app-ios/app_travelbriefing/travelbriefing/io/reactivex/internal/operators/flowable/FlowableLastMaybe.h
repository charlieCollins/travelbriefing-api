//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableLastMaybe.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableLastMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableLastMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableLastMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableLastMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableLastMaybe

#if !defined (IoReactivexInternalOperatorsFlowableFlowableLastMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableLastMaybe || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableLastMaybe))
#define IoReactivexInternalOperatorsFlowableFlowableLastMaybe_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "io/reactivex/Maybe.h"

@protocol IoReactivexMaybeObserver;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsFlowableFlowableLastMaybe : IoReactivexMaybe {
 @public
  id<OrgReactivestreamsPublisher> source_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)observer;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableLastMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableLastMaybe, source_, id<OrgReactivestreamsPublisher>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableLastMaybe_initWithOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableLastMaybe *self, id<OrgReactivestreamsPublisher> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableLastMaybe *new_IoReactivexInternalOperatorsFlowableFlowableLastMaybe_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableLastMaybe *create_IoReactivexInternalOperatorsFlowableFlowableLastMaybe_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableLastMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableLastMaybe || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber_

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexMaybeObserver;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber : NSObject < OrgReactivestreamsSubscriber, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  id<OrgReactivestreamsSubscription> s_;
  id item_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber, item_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber_initWithIoReactivexMaybeObserver_(IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber *self, id<IoReactivexMaybeObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber_initWithIoReactivexMaybeObserver_(id<IoReactivexMaybeObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableLastMaybe_LastSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableLastMaybe")
