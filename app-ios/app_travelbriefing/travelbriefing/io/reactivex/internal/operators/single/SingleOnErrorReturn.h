//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/single/SingleOnErrorReturn.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleOnErrorReturn")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleOnErrorReturn
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleOnErrorReturn 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleOnErrorReturn 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleOnErrorReturn

#if !defined (IoReactivexInternalOperatorsSingleSingleOnErrorReturn_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleOnErrorReturn || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleOnErrorReturn))
#define IoReactivexInternalOperatorsSingleSingleOnErrorReturn_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "io/reactivex/Single.h"

@protocol IoReactivexFunctionsFunction;
@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleOnErrorReturn : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexFunctionsFunction> valueSupplier_;
  id value_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
               withIoReactivexFunctionsFunction:(id<IoReactivexFunctionsFunction>)valueSupplier
                                         withId:(id)value;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleOnErrorReturn)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleOnErrorReturn, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleOnErrorReturn, valueSupplier_, id<IoReactivexFunctionsFunction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleOnErrorReturn, value_, id)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleOnErrorReturn_initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_(IoReactivexInternalOperatorsSingleSingleOnErrorReturn *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsFunction> valueSupplier, id value);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleOnErrorReturn *new_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsFunction> valueSupplier, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleOnErrorReturn *create_IoReactivexInternalOperatorsSingleSingleOnErrorReturn_initWithIoReactivexSingleSource_withIoReactivexFunctionsFunction_withId_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsFunction> valueSupplier, id value);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleOnErrorReturn)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleOnErrorReturn")
