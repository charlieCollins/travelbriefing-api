//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/single/SingleDelay.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/Scheduler.h"
#include "io/reactivex/Single.h"
#include "io/reactivex/SingleObserver.h"
#include "io/reactivex/SingleSource.h"
#include "io/reactivex/disposables/Disposable.h"
#include "io/reactivex/internal/disposables/SequentialDisposable.h"
#include "io/reactivex/internal/operators/single/SingleDelay.h"
#include "java/lang/Runnable.h"
#include "java/util/concurrent/TimeUnit.h"

@interface IoReactivexInternalOperatorsSingleSingleDelay_1 : NSObject < IoReactivexSingleObserver > {
 @public
  IoReactivexInternalOperatorsSingleSingleDelay *this$0_;
  IoReactivexInternalDisposablesSequentialDisposable *val$sd_;
  id<IoReactivexSingleObserver> val$s_;
}

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleDelay:(IoReactivexInternalOperatorsSingleSingleDelay *)outer$
               withIoReactivexInternalDisposablesSequentialDisposable:(IoReactivexInternalDisposablesSequentialDisposable *)capture$0
                                        withIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)capture$1;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

- (void)onErrorWithNSException:(NSException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDelay_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDelay_1 *self, IoReactivexInternalOperatorsSingleSingleDelay *outer$, IoReactivexInternalDisposablesSequentialDisposable *capture$0, id<IoReactivexSingleObserver> capture$1);

__attribute__((unused)) static IoReactivexInternalOperatorsSingleSingleDelay_1 *new_IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDelay *outer$, IoReactivexInternalDisposablesSequentialDisposable *capture$0, id<IoReactivexSingleObserver> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsSingleSingleDelay_1 *create_IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDelay *outer$, IoReactivexInternalDisposablesSequentialDisposable *capture$0, id<IoReactivexSingleObserver> capture$1);

@interface IoReactivexInternalOperatorsSingleSingleDelay_1_1 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsSingleSingleDelay_1 *this$0_;
  id val$value_;
}

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleDelay_1:(IoReactivexInternalOperatorsSingleSingleDelay_1 *)outer$
                                                                 withId:(id)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDelay_1_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(IoReactivexInternalOperatorsSingleSingleDelay_1_1 *self, IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, id capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsSingleSingleDelay_1_1 *new_IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsSingleSingleDelay_1_1 *create_IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, id capture$0);

@interface IoReactivexInternalOperatorsSingleSingleDelay_1_2 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsSingleSingleDelay_1 *this$0_;
  NSException *val$e_;
}

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleDelay_1:(IoReactivexInternalOperatorsSingleSingleDelay_1 *)outer$
                                                        withNSException:(NSException *)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDelay_1_2)

__attribute__((unused)) static void IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(IoReactivexInternalOperatorsSingleSingleDelay_1_2 *self, IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, NSException *capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsSingleSingleDelay_1_2 *new_IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsSingleSingleDelay_1_2 *create_IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, NSException *capture$0);

@implementation IoReactivexInternalOperatorsSingleSingleDelay

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
                                       withLong:(jlong)time
                 withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                       withIoReactivexScheduler:(IoReactivexScheduler *)scheduler {
  IoReactivexInternalOperatorsSingleSingleDelay_initWithIoReactivexSingleSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(self, source, time, unit, scheduler);
  return self;
}

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s {
  IoReactivexInternalDisposablesSequentialDisposable *sd = create_IoReactivexInternalDisposablesSequentialDisposable_init();
  [((id<IoReactivexSingleObserver>) nil_chk(s)) onSubscribeWithIoReactivexDisposablesDisposable:sd];
  [((id<IoReactivexSingleSource>) nil_chk(source_)) subscribeWithIoReactivexSingleObserver:create_IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(self, sd, s)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(unit_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexSingleSource:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexSingleObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexSingleSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
    { "time_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexSingleSource;JLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;", "(Lio/reactivex/SingleSource<+TT;>;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;)V", "subscribeActual", "LIoReactivexSingleObserver;", "(Lio/reactivex/SingleObserver<-TT;>;)V", "Lio/reactivex/SingleSource<+TT;>;", "<T:Ljava/lang/Object;>Lio/reactivex/Single<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDelay = { "SingleDelay", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x11, 2, 4, -1, -1, -1, 6, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDelay;
}

@end

void IoReactivexInternalOperatorsSingleSingleDelay_initWithIoReactivexSingleSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsSingleSingleDelay *self, id<IoReactivexSingleSource> source, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  IoReactivexSingle_init(self);
  JreStrongAssign(&self->source_, source);
  self->time_ = time;
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->scheduler_, scheduler);
}

IoReactivexInternalOperatorsSingleSingleDelay *new_IoReactivexInternalOperatorsSingleSingleDelay_initWithIoReactivexSingleSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<IoReactivexSingleSource> source, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDelay, initWithIoReactivexSingleSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, source, time, unit, scheduler)
}

IoReactivexInternalOperatorsSingleSingleDelay *create_IoReactivexInternalOperatorsSingleSingleDelay_initWithIoReactivexSingleSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<IoReactivexSingleSource> source, jlong time, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDelay, initWithIoReactivexSingleSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_, source, time, unit, scheduler)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsSingleSingleDelay)

@implementation IoReactivexInternalOperatorsSingleSingleDelay_1

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleDelay:(IoReactivexInternalOperatorsSingleSingleDelay *)outer$
               withIoReactivexInternalDisposablesSequentialDisposable:(IoReactivexInternalDisposablesSequentialDisposable *)capture$0
                                        withIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)capture$1 {
  IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  [((IoReactivexInternalDisposablesSequentialDisposable *) nil_chk(val$sd_)) replaceWithIoReactivexDisposablesDisposable:d];
}

- (void)onSuccessWithId:(id)value {
  [((IoReactivexInternalDisposablesSequentialDisposable *) nil_chk(val$sd_)) replaceWithIoReactivexDisposablesDisposable:[((IoReactivexScheduler *) nil_chk(this$0_->scheduler_)) scheduleDirectWithJavaLangRunnable:create_IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(self, value) withLong:this$0_->time_ withJavaUtilConcurrentTimeUnit:this$0_->unit_]];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((IoReactivexInternalDisposablesSequentialDisposable *) nil_chk(val$sd_)) replaceWithIoReactivexDisposablesDisposable:[((IoReactivexScheduler *) nil_chk(this$0_->scheduler_)) scheduleDirectWithJavaLangRunnable:create_IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(self, e) withLong:0 withJavaUtilConcurrentTimeUnit:this$0_->unit_]];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$sd_);
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsSingleSingleDelay:withIoReactivexInternalDisposablesSequentialDisposable:withIoReactivexSingleObserver:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onSuccessWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsSingleSingleDelay;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$sd_", "LIoReactivexInternalDisposablesSequentialDisposable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LIoReactivexSingleObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LIoReactivexDisposablesDisposable;", "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lio/reactivex/internal/operators/single/SingleDelay<TT;>;", "Lio/reactivex/SingleObserver<-TT;>;", "LIoReactivexInternalOperatorsSingleSingleDelay;", "subscribeActualWithIoReactivexSingleObserver:", "Ljava/lang/Object;Lio/reactivex/SingleObserver<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDelay_1 = { "", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x8018, 4, 3, 9, -1, 10, 11, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDelay_1;
}

@end

void IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDelay_1 *self, IoReactivexInternalOperatorsSingleSingleDelay *outer$, IoReactivexInternalDisposablesSequentialDisposable *capture$0, id<IoReactivexSingleObserver> capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$sd_, capture$0);
  JreStrongAssign(&self->val$s_, capture$1);
  NSObject_init(self);
}

IoReactivexInternalOperatorsSingleSingleDelay_1 *new_IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDelay *outer$, IoReactivexInternalDisposablesSequentialDisposable *capture$0, id<IoReactivexSingleObserver> capture$1) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDelay_1, initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_, outer$, capture$0, capture$1)
}

IoReactivexInternalOperatorsSingleSingleDelay_1 *create_IoReactivexInternalOperatorsSingleSingleDelay_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleDelay *outer$, IoReactivexInternalDisposablesSequentialDisposable *capture$0, id<IoReactivexSingleObserver> capture$1) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDelay_1, initWithIoReactivexInternalOperatorsSingleSingleDelay_withIoReactivexInternalDisposablesSequentialDisposable_withIoReactivexSingleObserver_, outer$, capture$0, capture$1)
}

@implementation IoReactivexInternalOperatorsSingleSingleDelay_1_1

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleDelay_1:(IoReactivexInternalOperatorsSingleSingleDelay_1 *)outer$
                                                                 withId:(id)capture$0 {
  IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(self, outer$, capture$0);
  return self;
}

- (void)run {
  [((id<IoReactivexSingleObserver>) nil_chk(this$0_->val$s_)) onSuccessWithId:val$value_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsSingleSingleDelay_1:withId:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsSingleSingleDelay_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$value_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "TT;", "LIoReactivexInternalOperatorsSingleSingleDelay_1;", "onSuccessWithId:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDelay_1_1 = { "", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDelay_1_1;
}

@end

void IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(IoReactivexInternalOperatorsSingleSingleDelay_1_1 *self, IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, id capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$value_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsSingleSingleDelay_1_1 *new_IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, id capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDelay_1_1, initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_, outer$, capture$0)
}

IoReactivexInternalOperatorsSingleSingleDelay_1_1 *create_IoReactivexInternalOperatorsSingleSingleDelay_1_1_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, id capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDelay_1_1, initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withId_, outer$, capture$0)
}

@implementation IoReactivexInternalOperatorsSingleSingleDelay_1_2

- (instancetype)initWithIoReactivexInternalOperatorsSingleSingleDelay_1:(IoReactivexInternalOperatorsSingleSingleDelay_1 *)outer$
                                                        withNSException:(NSException *)capture$0 {
  IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(self, outer$, capture$0);
  return self;
}

- (void)run {
  [((id<IoReactivexSingleObserver>) nil_chk(this$0_->val$s_)) onErrorWithNSException:val$e_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsSingleSingleDelay_1:withNSException:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsSingleSingleDelay_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$e_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsSingleSingleDelay_1;", "onErrorWithNSException:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsSingleSingleDelay_1_2 = { "", "io.reactivex.internal.operators.single", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
  return &_IoReactivexInternalOperatorsSingleSingleDelay_1_2;
}

@end

void IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(IoReactivexInternalOperatorsSingleSingleDelay_1_2 *self, IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, NSException *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsSingleSingleDelay_1_2 *new_IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, NSException *capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsSingleSingleDelay_1_2, initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_, outer$, capture$0)
}

IoReactivexInternalOperatorsSingleSingleDelay_1_2 *create_IoReactivexInternalOperatorsSingleSingleDelay_1_2_initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_(IoReactivexInternalOperatorsSingleSingleDelay_1 *outer$, NSException *capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsSingleSingleDelay_1_2, initWithIoReactivexInternalOperatorsSingleSingleDelay_1_withNSException_, outer$, capture$0)
}
