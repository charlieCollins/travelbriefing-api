//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/parallel/ParallelSortedJoin.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelSortedJoin")
#ifdef RESTRICT_IoReactivexInternalOperatorsParallelParallelSortedJoin
#define INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelSortedJoin 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelSortedJoin 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsParallelParallelSortedJoin

#if !defined (IoReactivexInternalOperatorsParallelParallelSortedJoin_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelSortedJoin || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelSortedJoin))
#define IoReactivexInternalOperatorsParallelParallelSortedJoin_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "io/reactivex/Flowable.h"

@class IoReactivexParallelParallelFlowable;
@protocol JavaUtilComparator;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsParallelParallelSortedJoin : IoReactivexFlowable {
 @public
  IoReactivexParallelParallelFlowable *source_;
  id<JavaUtilComparator> comparator_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexParallelParallelFlowable:(IoReactivexParallelParallelFlowable *)source
                                     withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelSortedJoin)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin, source_, IoReactivexParallelParallelFlowable *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin, comparator_, id<JavaUtilComparator>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelSortedJoin_initWithIoReactivexParallelParallelFlowable_withJavaUtilComparator_(IoReactivexInternalOperatorsParallelParallelSortedJoin *self, IoReactivexParallelParallelFlowable *source, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelSortedJoin *new_IoReactivexInternalOperatorsParallelParallelSortedJoin_initWithIoReactivexParallelParallelFlowable_withJavaUtilComparator_(IoReactivexParallelParallelFlowable *source, id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelSortedJoin *create_IoReactivexInternalOperatorsParallelParallelSortedJoin_initWithIoReactivexParallelParallelFlowable_withJavaUtilComparator_(IoReactivexParallelParallelFlowable *source, id<JavaUtilComparator> comparator);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelSortedJoin)

#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelSortedJoin || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription))
#define IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "org/reactivestreams/Subscription.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilConcurrentAtomicAtomicLong;
@class JavaUtilConcurrentAtomicAtomicReference;
@protocol JavaUtilComparator;
@protocol JavaUtilList;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription : JavaUtilConcurrentAtomicAtomicInteger < OrgReactivestreamsSubscription > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  IOSObjectArray *subscribers_;
  IOSObjectArray *lists_;
  IOSIntArray *indexes_;
  id<JavaUtilComparator> comparator_;
  JavaUtilConcurrentAtomicAtomicLong *requested_;
  volatile_jboolean cancelled_;
  JavaUtilConcurrentAtomicAtomicInteger *remaining_;
  JavaUtilConcurrentAtomicAtomicReference *error_;
}

#pragma mark Public

- (void)cancel;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                                             withInt:(jint)n
                              withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (void)cancelAll;

- (void)drain;

- (void)innerErrorWithNSException:(NSException *)e;

- (void)innerNextWithJavaUtilList:(id<JavaUtilList>)value
                          withInt:(jint)index;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, subscribers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, lists_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, indexes_, IOSIntArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, comparator_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, requested_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, remaining_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription, error_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_initWithOrgReactivestreamsSubscriber_withInt_withJavaUtilComparator_(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *self, id<OrgReactivestreamsSubscriber> actual, jint n, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *new_IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_initWithOrgReactivestreamsSubscriber_withInt_withJavaUtilComparator_(id<OrgReactivestreamsSubscriber> actual, jint n, id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *create_IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_initWithOrgReactivestreamsSubscriber_withInt_withJavaUtilComparator_(id<OrgReactivestreamsSubscriber> actual, jint n, id<JavaUtilComparator> comparator);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription)

#endif

#if !defined (IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelSortedJoin || defined(INCLUDE_IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber))
#define IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

@class IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription;
@protocol JavaUtilList;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber : JavaUtilConcurrentAtomicAtomicReference < OrgReactivestreamsSubscriber > {
 @public
  IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *parent_;
  jint index_;
}

#pragma mark Public

- (id<OrgReactivestreamsSubscription>)get;

- (id<OrgReactivestreamsSubscription>)getAndSetWithId:(id<OrgReactivestreamsSubscription>)arg0;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id<JavaUtilList>)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription:(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *)parent
                                                                                              withInt:(jint)index;

- (void)cancel;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber, parent_, IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber_initWithIoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_withInt_(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber *self, IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *parent, jint index);

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber *new_IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber_initWithIoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_withInt_(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *parent, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber *create_IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber_initWithIoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription_withInt_(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinSubscription *parent, jint index);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsParallelParallelSortedJoin_SortedJoinInnerSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsParallelParallelSortedJoin")
