//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/observers/CallbackCompletableObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversCallbackCompletableObserver")
#ifdef RESTRICT_IoReactivexInternalObserversCallbackCompletableObserver
#define INCLUDE_ALL_IoReactivexInternalObserversCallbackCompletableObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversCallbackCompletableObserver 1
#endif
#undef RESTRICT_IoReactivexInternalObserversCallbackCompletableObserver

#if !defined (IoReactivexInternalObserversCallbackCompletableObserver_) && (INCLUDE_ALL_IoReactivexInternalObserversCallbackCompletableObserver || defined(INCLUDE_IoReactivexInternalObserversCallbackCompletableObserver))
#define IoReactivexInternalObserversCallbackCompletableObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexCompletableObserver 1
#define INCLUDE_IoReactivexCompletableObserver 1
#include "io/reactivex/CompletableObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

#define RESTRICT_IoReactivexFunctionsConsumer 1
#define INCLUDE_IoReactivexFunctionsConsumer 1
#include "io/reactivex/functions/Consumer.h"

@protocol IoReactivexFunctionsAction;

@interface IoReactivexInternalObserversCallbackCompletableObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexCompletableObserver, IoReactivexDisposablesDisposable, IoReactivexFunctionsConsumer > {
 @public
  id<IoReactivexFunctionsConsumer> onError_;
  id<IoReactivexFunctionsAction> onComplete_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onComplete;

- (instancetype)initWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onError
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onComplete;

- (void)acceptWithId:(NSException *)e;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversCallbackCompletableObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalObserversCallbackCompletableObserver, onError_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversCallbackCompletableObserver, onComplete_, id<IoReactivexFunctionsAction>)

FOUNDATION_EXPORT void IoReactivexInternalObserversCallbackCompletableObserver_initWithIoReactivexFunctionsAction_(IoReactivexInternalObserversCallbackCompletableObserver *self, id<IoReactivexFunctionsAction> onComplete);

FOUNDATION_EXPORT IoReactivexInternalObserversCallbackCompletableObserver *new_IoReactivexInternalObserversCallbackCompletableObserver_initWithIoReactivexFunctionsAction_(id<IoReactivexFunctionsAction> onComplete) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversCallbackCompletableObserver *create_IoReactivexInternalObserversCallbackCompletableObserver_initWithIoReactivexFunctionsAction_(id<IoReactivexFunctionsAction> onComplete);

FOUNDATION_EXPORT void IoReactivexInternalObserversCallbackCompletableObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_(IoReactivexInternalObserversCallbackCompletableObserver *self, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete);

FOUNDATION_EXPORT IoReactivexInternalObserversCallbackCompletableObserver *new_IoReactivexInternalObserversCallbackCompletableObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_(id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversCallbackCompletableObserver *create_IoReactivexInternalObserversCallbackCompletableObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_(id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversCallbackCompletableObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversCallbackCompletableObserver")
