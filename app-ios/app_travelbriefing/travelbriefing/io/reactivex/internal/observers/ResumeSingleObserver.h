//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/observers/ResumeSingleObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversResumeSingleObserver")
#ifdef RESTRICT_IoReactivexInternalObserversResumeSingleObserver
#define INCLUDE_ALL_IoReactivexInternalObserversResumeSingleObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversResumeSingleObserver 1
#endif
#undef RESTRICT_IoReactivexInternalObserversResumeSingleObserver

#if !defined (IoReactivexInternalObserversResumeSingleObserver_) && (INCLUDE_ALL_IoReactivexInternalObserversResumeSingleObserver || defined(INCLUDE_IoReactivexInternalObserversResumeSingleObserver))
#define IoReactivexInternalObserversResumeSingleObserver_

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "io/reactivex/SingleObserver.h"

@class JavaUtilConcurrentAtomicAtomicReference;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalObserversResumeSingleObserver : NSObject < IoReactivexSingleObserver > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *parent_;
  id<IoReactivexSingleObserver> actual_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)parent
                                  withIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversResumeSingleObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalObserversResumeSingleObserver, parent_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversResumeSingleObserver, actual_, id<IoReactivexSingleObserver>)

FOUNDATION_EXPORT void IoReactivexInternalObserversResumeSingleObserver_initWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexSingleObserver_(IoReactivexInternalObserversResumeSingleObserver *self, JavaUtilConcurrentAtomicAtomicReference *parent, id<IoReactivexSingleObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalObserversResumeSingleObserver *new_IoReactivexInternalObserversResumeSingleObserver_initWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexSingleObserver_(JavaUtilConcurrentAtomicAtomicReference *parent, id<IoReactivexSingleObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversResumeSingleObserver *create_IoReactivexInternalObserversResumeSingleObserver_initWithJavaUtilConcurrentAtomicAtomicReference_withIoReactivexSingleObserver_(JavaUtilConcurrentAtomicAtomicReference *parent, id<IoReactivexSingleObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversResumeSingleObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversResumeSingleObserver")
