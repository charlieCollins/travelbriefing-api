//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/observers/FullArbiterObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversFullArbiterObserver")
#ifdef RESTRICT_IoReactivexInternalObserversFullArbiterObserver
#define INCLUDE_ALL_IoReactivexInternalObserversFullArbiterObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversFullArbiterObserver 1
#endif
#undef RESTRICT_IoReactivexInternalObserversFullArbiterObserver

#if !defined (IoReactivexInternalObserversFullArbiterObserver_) && (INCLUDE_ALL_IoReactivexInternalObserversFullArbiterObserver || defined(INCLUDE_IoReactivexInternalObserversFullArbiterObserver))
#define IoReactivexInternalObserversFullArbiterObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "io/reactivex/Observer.h"

@class IoReactivexInternalDisposablesObserverFullArbiter;
@protocol IoReactivexDisposablesDisposable;

@interface IoReactivexInternalObserversFullArbiterObserver : NSObject < IoReactivexObserver > {
 @public
  IoReactivexInternalDisposablesObserverFullArbiter *arbiter_;
  id<IoReactivexDisposablesDisposable> s_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexInternalDisposablesObserverFullArbiter:(IoReactivexInternalDisposablesObserverFullArbiter *)arbiter;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversFullArbiterObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalObserversFullArbiterObserver, arbiter_, IoReactivexInternalDisposablesObserverFullArbiter *)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversFullArbiterObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalObserversFullArbiterObserver_initWithIoReactivexInternalDisposablesObserverFullArbiter_(IoReactivexInternalObserversFullArbiterObserver *self, IoReactivexInternalDisposablesObserverFullArbiter *arbiter);

FOUNDATION_EXPORT IoReactivexInternalObserversFullArbiterObserver *new_IoReactivexInternalObserversFullArbiterObserver_initWithIoReactivexInternalDisposablesObserverFullArbiter_(IoReactivexInternalDisposablesObserverFullArbiter *arbiter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversFullArbiterObserver *create_IoReactivexInternalObserversFullArbiterObserver_initWithIoReactivexInternalDisposablesObserverFullArbiter_(IoReactivexInternalDisposablesObserverFullArbiter *arbiter);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversFullArbiterObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversFullArbiterObserver")
