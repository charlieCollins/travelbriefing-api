//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okio/BufferedSink.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OkioBufferedSink")
#ifdef RESTRICT_OkioBufferedSink
#define INCLUDE_ALL_OkioBufferedSink 0
#else
#define INCLUDE_ALL_OkioBufferedSink 1
#endif
#undef RESTRICT_OkioBufferedSink

#if !defined (OkioBufferedSink_) && (INCLUDE_ALL_OkioBufferedSink || defined(INCLUDE_OkioBufferedSink))
#define OkioBufferedSink_

#define RESTRICT_OkioSink 1
#define INCLUDE_OkioSink 1
#include "okio/Sink.h"

@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaNioCharsetCharset;
@class OkioBuffer;
@class OkioByteString;
@protocol OkioSource;

@protocol OkioBufferedSink < OkioSink, JavaObject >

- (OkioBuffer *)buffer;

- (id<OkioBufferedSink>)writeWithOkioByteString:(OkioByteString *)byteString;

- (id<OkioBufferedSink>)writeWithByteArray:(IOSByteArray *)source;

- (id<OkioBufferedSink>)writeWithByteArray:(IOSByteArray *)source
                                   withInt:(jint)offset
                                   withInt:(jint)byteCount;

- (jlong)writeAllWithOkioSource:(id<OkioSource>)source;

- (id<OkioBufferedSink>)writeWithOkioSource:(id<OkioSource>)source
                                   withLong:(jlong)byteCount;

- (id<OkioBufferedSink>)writeUtf8WithNSString:(NSString *)string;

- (id<OkioBufferedSink>)writeUtf8WithNSString:(NSString *)string
                                      withInt:(jint)beginIndex
                                      withInt:(jint)endIndex;

- (id<OkioBufferedSink>)writeUtf8CodePointWithInt:(jint)codePoint;

- (id<OkioBufferedSink>)writeStringWithNSString:(NSString *)string
                      withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (id<OkioBufferedSink>)writeStringWithNSString:(NSString *)string
                                        withInt:(jint)beginIndex
                                        withInt:(jint)endIndex
                      withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (id<OkioBufferedSink>)writeByteWithInt:(jint)b;

- (id<OkioBufferedSink>)writeShortWithInt:(jint)s;

- (id<OkioBufferedSink>)writeShortLeWithInt:(jint)s;

- (id<OkioBufferedSink>)writeIntWithInt:(jint)i;

- (id<OkioBufferedSink>)writeIntLeWithInt:(jint)i;

- (id<OkioBufferedSink>)writeLongWithLong:(jlong)v;

- (id<OkioBufferedSink>)writeLongLeWithLong:(jlong)v;

- (id<OkioBufferedSink>)writeDecimalLongWithLong:(jlong)v;

- (id<OkioBufferedSink>)writeHexadecimalUnsignedLongWithLong:(jlong)v;

- (void)flush;

- (id<OkioBufferedSink>)emit;

- (id<OkioBufferedSink>)emitCompleteSegments;

- (JavaIoOutputStream *)outputStream;

@end

J2OBJC_EMPTY_STATIC_INIT(OkioBufferedSink)

J2OBJC_TYPE_LITERAL_HEADER(OkioBufferedSink)

#endif

#pragma pop_macro("INCLUDE_ALL_OkioBufferedSink")
