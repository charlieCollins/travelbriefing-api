//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okio/Segment.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OkioSegment")
#ifdef RESTRICT_OkioSegment
#define INCLUDE_ALL_OkioSegment 0
#else
#define INCLUDE_ALL_OkioSegment 1
#endif
#undef RESTRICT_OkioSegment

#if !defined (OkioSegment_) && (INCLUDE_ALL_OkioSegment || defined(INCLUDE_OkioSegment))
#define OkioSegment_

@class IOSByteArray;

@interface OkioSegment : NSObject {
 @public
  IOSByteArray *data_;
  jint pos_;
  jint limit_;
  jboolean shared_;
  jboolean owner_;
  OkioSegment *next_;
  OkioSegment *prev_;
}

#pragma mark Public

- (void)compact;

- (OkioSegment *)pop;

- (OkioSegment *)pushWithOkioSegment:(OkioSegment *)segment;

- (OkioSegment *)splitWithInt:(jint)byteCount;

- (void)writeToWithOkioSegment:(OkioSegment *)sink
                       withInt:(jint)byteCount;

#pragma mark Package-Private

- (instancetype)init;

- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)pos
                          withInt:(jint)limit;

- (instancetype)initWithOkioSegment:(OkioSegment *)shareFrom;

@end

J2OBJC_EMPTY_STATIC_INIT(OkioSegment)

J2OBJC_FIELD_SETTER(OkioSegment, data_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OkioSegment, next_, OkioSegment *)
J2OBJC_FIELD_SETTER(OkioSegment, prev_, OkioSegment *)

inline jint OkioSegment_get_SIZE();
#define OkioSegment_SIZE 8192
J2OBJC_STATIC_FIELD_CONSTANT(OkioSegment, SIZE, jint)

inline jint OkioSegment_get_SHARE_MINIMUM();
#define OkioSegment_SHARE_MINIMUM 1024
J2OBJC_STATIC_FIELD_CONSTANT(OkioSegment, SHARE_MINIMUM, jint)

FOUNDATION_EXPORT void OkioSegment_init(OkioSegment *self);

FOUNDATION_EXPORT OkioSegment *new_OkioSegment_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OkioSegment *create_OkioSegment_init();

FOUNDATION_EXPORT void OkioSegment_initWithOkioSegment_(OkioSegment *self, OkioSegment *shareFrom);

FOUNDATION_EXPORT OkioSegment *new_OkioSegment_initWithOkioSegment_(OkioSegment *shareFrom) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OkioSegment *create_OkioSegment_initWithOkioSegment_(OkioSegment *shareFrom);

FOUNDATION_EXPORT void OkioSegment_initWithByteArray_withInt_withInt_(OkioSegment *self, IOSByteArray *data, jint pos, jint limit);

FOUNDATION_EXPORT OkioSegment *new_OkioSegment_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint pos, jint limit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OkioSegment *create_OkioSegment_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint pos, jint limit);

J2OBJC_TYPE_LITERAL_HEADER(OkioSegment)

#endif

#pragma pop_macro("INCLUDE_ALL_OkioSegment")
