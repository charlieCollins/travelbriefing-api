//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/BaseMatcher.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/hamcrest/BaseMatcher.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/StringDescription.h"

#pragma clang diagnostic ignored "-Wprotocol"

__attribute__((unused)) static IOSObjectArray *OrgHamcrestBaseMatcher__Annotations$0();

@implementation OrgHamcrestBaseMatcher

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgHamcrestBaseMatcher_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)_dont_implement_Matcher___instead_extend_BaseMatcher_ {
}

- (void)describeMismatchWithId:(id)item
    withOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk([((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:@"was "])) appendValueWithId:item];
}

- (NSString *)description {
  return OrgHamcrestStringDescription_toStringWithOrgHamcrestSelfDescribing_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(_dont_implement_Matcher___instead_extend_BaseMatcher_);
  methods[2].selector = @selector(describeMismatchWithId:withOrgHamcrestDescription:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&OrgHamcrestBaseMatcher__Annotations$0, "describeMismatch", "LNSObject;LOrgHamcrestDescription;", "toString", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/hamcrest/Matcher<TT;>;" };
  static const J2ObjcClassInfo _OrgHamcrestBaseMatcher = { "BaseMatcher", "org.hamcrest", ptrTable, methods, NULL, 7, 0x401, 4, 0, -1, -1, -1, 4, -1 };
  return &_OrgHamcrestBaseMatcher;
}

@end

void OrgHamcrestBaseMatcher_init(OrgHamcrestBaseMatcher *self) {
  NSObject_init(self);
}

IOSObjectArray *OrgHamcrestBaseMatcher__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestBaseMatcher)
