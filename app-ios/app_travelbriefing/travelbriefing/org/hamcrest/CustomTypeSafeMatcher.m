//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/CustomTypeSafeMatcher.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/hamcrest/CustomTypeSafeMatcher.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/TypeSafeMatcher.h"

@interface OrgHamcrestCustomTypeSafeMatcher () {
 @public
  NSString *fixedDescription_;
}

@end

J2OBJC_FIELD_SETTER(OrgHamcrestCustomTypeSafeMatcher, fixedDescription_, NSString *)

@implementation OrgHamcrestCustomTypeSafeMatcher

- (instancetype)initWithNSString:(NSString *)description_ {
  OrgHamcrestCustomTypeSafeMatcher_initWithNSString_(self, description_);
  return self;
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:fixedDescription_];
}

- (void)dealloc {
  RELEASE_(fixedDescription_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(describeToWithOrgHamcrestDescription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fixedDescription_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "describeTo", "LOrgHamcrestDescription;", "<T:Ljava/lang/Object;>Lorg/hamcrest/TypeSafeMatcher<TT;>;" };
  static const J2ObjcClassInfo _OrgHamcrestCustomTypeSafeMatcher = { "CustomTypeSafeMatcher", "org.hamcrest", ptrTable, methods, fields, 7, 0x401, 2, 1, -1, -1, -1, 3, -1 };
  return &_OrgHamcrestCustomTypeSafeMatcher;
}

@end

void OrgHamcrestCustomTypeSafeMatcher_initWithNSString_(OrgHamcrestCustomTypeSafeMatcher *self, NSString *description_) {
  OrgHamcrestTypeSafeMatcher_init(self);
  if (description_ == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Description must be non null!");
  }
  JreStrongAssign(&self->fixedDescription_, description_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestCustomTypeSafeMatcher)
