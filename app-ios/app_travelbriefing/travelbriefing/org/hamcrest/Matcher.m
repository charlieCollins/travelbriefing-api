//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/Matcher.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/hamcrest/Matcher.h"

@interface OrgHamcrestMatcher : NSObject

@end

__attribute__((unused)) static IOSObjectArray *OrgHamcrestMatcher__Annotations$0();

@implementation OrgHamcrestMatcher

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, 4, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(matchesWithId:);
  methods[1].selector = @selector(describeMismatchWithId:withOrgHamcrestDescription:);
  methods[2].selector = @selector(_dont_implement_Matcher___instead_extend_BaseMatcher_);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "matches", "LNSObject;", "describeMismatch", "LNSObject;LOrgHamcrestDescription;", (void *)&OrgHamcrestMatcher__Annotations$0, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/hamcrest/SelfDescribing;" };
  static const J2ObjcClassInfo _OrgHamcrestMatcher = { "Matcher", "org.hamcrest", ptrTable, methods, NULL, 7, 0x609, 3, 0, -1, -1, -1, 5, -1 };
  return &_OrgHamcrestMatcher;
}

@end

IOSObjectArray *OrgHamcrestMatcher__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgHamcrestMatcher)
