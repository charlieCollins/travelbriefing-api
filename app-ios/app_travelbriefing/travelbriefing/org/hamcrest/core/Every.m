//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/core/Every.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/lang/annotation/Annotation.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Factory.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/TypeSafeDiagnosingMatcher.h"
#include "org/hamcrest/core/Every.h"

@interface OrgHamcrestCoreEvery () {
 @public
  id<OrgHamcrestMatcher> matcher_;
}

@end

J2OBJC_FIELD_SETTER(OrgHamcrestCoreEvery, matcher_, id<OrgHamcrestMatcher>)

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreEvery__Annotations$0();

@implementation OrgHamcrestCoreEvery

- (instancetype)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher {
  OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(self, matcher);
  return self;
}

- (jboolean)matchesSafelyWithId:(id<JavaLangIterable>)collection
     withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatchDescription {
  for (id __strong t in nil_chk(collection)) {
    if (![((id<OrgHamcrestMatcher>) nil_chk(matcher_)) matchesWithId:t]) {
      [((id<OrgHamcrestDescription>) nil_chk(mismatchDescription)) appendTextWithNSString:@"an item "];
      [matcher_ describeMismatchWithId:t withOrgHamcrestDescription:mismatchDescription];
      return false;
    }
  }
  return true;
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk([((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:@"every item is "])) appendDescriptionOfWithOrgHamcrestSelfDescribing:matcher_];
}

+ (id<OrgHamcrestMatcher>)everyItemWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)itemMatcher {
  return OrgHamcrestCoreEvery_everyItemWithOrgHamcrestMatcher_(itemMatcher);
}

- (void)dealloc {
  RELEASE_(matcher_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 7, 0, -1, 8, 9, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgHamcrestMatcher:);
  methods[1].selector = @selector(matchesSafelyWithId:withOrgHamcrestDescription:);
  methods[2].selector = @selector(describeToWithOrgHamcrestDescription:);
  methods[3].selector = @selector(everyItemWithOrgHamcrestMatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "matcher_", "LOrgHamcrestMatcher;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LOrgHamcrestMatcher;", "(Lorg/hamcrest/Matcher<-TT;>;)V", "matchesSafely", "LJavaLangIterable;LOrgHamcrestDescription;", "(Ljava/lang/Iterable<TT;>;Lorg/hamcrest/Description;)Z", "describeTo", "LOrgHamcrestDescription;", "everyItem", "<U:Ljava/lang/Object;>(Lorg/hamcrest/Matcher<TU;>;)Lorg/hamcrest/Matcher<Ljava/lang/Iterable<TU;>;>;", (void *)&OrgHamcrestCoreEvery__Annotations$0, "Lorg/hamcrest/Matcher<-TT;>;", "<T:Ljava/lang/Object;>Lorg/hamcrest/TypeSafeDiagnosingMatcher<Ljava/lang/Iterable<TT;>;>;" };
  static const J2ObjcClassInfo _OrgHamcrestCoreEvery = { "Every", "org.hamcrest.core", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, 11, -1 };
  return &_OrgHamcrestCoreEvery;
}

@end

void OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(OrgHamcrestCoreEvery *self, id<OrgHamcrestMatcher> matcher) {
  OrgHamcrestTypeSafeDiagnosingMatcher_init(self);
  JreStrongAssign(&self->matcher_, matcher);
}

OrgHamcrestCoreEvery *new_OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher) {
  J2OBJC_NEW_IMPL(OrgHamcrestCoreEvery, initWithOrgHamcrestMatcher_, matcher)
}

OrgHamcrestCoreEvery *create_OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher) {
  J2OBJC_CREATE_IMPL(OrgHamcrestCoreEvery, initWithOrgHamcrestMatcher_, matcher)
}

id<OrgHamcrestMatcher> OrgHamcrestCoreEvery_everyItemWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> itemMatcher) {
  OrgHamcrestCoreEvery_initialize();
  return create_OrgHamcrestCoreEvery_initWithOrgHamcrestMatcher_(itemMatcher);
}

IOSObjectArray *OrgHamcrestCoreEvery__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestCoreEvery)
