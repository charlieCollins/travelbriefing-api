//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/core/IsInstanceOf.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/annotation/Annotation.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/DiagnosingMatcher.h"
#include "org/hamcrest/Factory.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/core/IsInstanceOf.h"

@interface OrgHamcrestCoreIsInstanceOf () {
 @public
  IOSClass *expectedClass_;
  IOSClass *matchableClass_;
}

+ (IOSClass *)matchableClassWithIOSClass:(IOSClass *)expectedClass;

@end

J2OBJC_FIELD_SETTER(OrgHamcrestCoreIsInstanceOf, expectedClass_, IOSClass *)
J2OBJC_FIELD_SETTER(OrgHamcrestCoreIsInstanceOf, matchableClass_, IOSClass *)

__attribute__((unused)) static IOSClass *OrgHamcrestCoreIsInstanceOf_matchableClassWithIOSClass_(IOSClass *expectedClass);

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsInstanceOf__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsInstanceOf__Annotations$1();

@implementation OrgHamcrestCoreIsInstanceOf

- (instancetype)initWithIOSClass:(IOSClass *)expectedClass {
  OrgHamcrestCoreIsInstanceOf_initWithIOSClass_(self, expectedClass);
  return self;
}

+ (IOSClass *)matchableClassWithIOSClass:(IOSClass *)expectedClass {
  return OrgHamcrestCoreIsInstanceOf_matchableClassWithIOSClass_(expectedClass);
}

- (jboolean)matchesWithId:(id)item
withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatch {
  if (nil == item) {
    [((id<OrgHamcrestDescription>) nil_chk(mismatch)) appendTextWithNSString:@"null"];
    return false;
  }
  if (![((IOSClass *) nil_chk(matchableClass_)) isInstance:item]) {
    [((id<OrgHamcrestDescription>) nil_chk([((id<OrgHamcrestDescription>) nil_chk(mismatch)) appendValueWithId:item])) appendTextWithNSString:JreStrcat("$$", @" is a ", [[item java_getClass] getName])];
    return false;
  }
  return true;
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk([((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:@"an instance of "])) appendTextWithNSString:[((IOSClass *) nil_chk(expectedClass_)) getName]];
}

+ (id<OrgHamcrestMatcher>)instanceOfWithIOSClass:(IOSClass *)type {
  return OrgHamcrestCoreIsInstanceOf_instanceOfWithIOSClass_(type);
}

+ (id<OrgHamcrestMatcher>)anyWithIOSClass:(IOSClass *)type {
  return OrgHamcrestCoreIsInstanceOf_anyWithIOSClass_(type);
}

- (void)dealloc {
  RELEASE_(expectedClass_);
  RELEASE_(matchableClass_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LIOSClass;", 0xa, 2, 0, -1, 3, -1, -1 },
    { NULL, "Z", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 8, 0, -1, 9, 10, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 11, 0, -1, 12, 13, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(matchableClassWithIOSClass:);
  methods[2].selector = @selector(matchesWithId:withOrgHamcrestDescription:);
  methods[3].selector = @selector(describeToWithOrgHamcrestDescription:);
  methods[4].selector = @selector(instanceOfWithIOSClass:);
  methods[5].selector = @selector(anyWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "expectedClass_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
    { "matchableClass_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "matchableClass", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", "matches", "LNSObject;LOrgHamcrestDescription;", "describeTo", "LOrgHamcrestDescription;", "instanceOf", "<T:Ljava/lang/Object;>(Ljava/lang/Class<*>;)Lorg/hamcrest/Matcher<TT;>;", (void *)&OrgHamcrestCoreIsInstanceOf__Annotations$0, "any", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Lorg/hamcrest/Matcher<TT;>;", (void *)&OrgHamcrestCoreIsInstanceOf__Annotations$1, "Ljava/lang/Class<*>;", "Lorg/hamcrest/DiagnosingMatcher<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgHamcrestCoreIsInstanceOf = { "IsInstanceOf", "org.hamcrest.core", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, 15, -1 };
  return &_OrgHamcrestCoreIsInstanceOf;
}

@end

void OrgHamcrestCoreIsInstanceOf_initWithIOSClass_(OrgHamcrestCoreIsInstanceOf *self, IOSClass *expectedClass) {
  OrgHamcrestDiagnosingMatcher_init(self);
  JreStrongAssign(&self->expectedClass_, expectedClass);
  JreStrongAssign(&self->matchableClass_, OrgHamcrestCoreIsInstanceOf_matchableClassWithIOSClass_(expectedClass));
}

OrgHamcrestCoreIsInstanceOf *new_OrgHamcrestCoreIsInstanceOf_initWithIOSClass_(IOSClass *expectedClass) {
  J2OBJC_NEW_IMPL(OrgHamcrestCoreIsInstanceOf, initWithIOSClass_, expectedClass)
}

OrgHamcrestCoreIsInstanceOf *create_OrgHamcrestCoreIsInstanceOf_initWithIOSClass_(IOSClass *expectedClass) {
  J2OBJC_CREATE_IMPL(OrgHamcrestCoreIsInstanceOf, initWithIOSClass_, expectedClass)
}

IOSClass *OrgHamcrestCoreIsInstanceOf_matchableClassWithIOSClass_(IOSClass *expectedClass) {
  OrgHamcrestCoreIsInstanceOf_initialize();
  if ([[IOSClass booleanClass] isEqual:expectedClass]) return JavaLangBoolean_class_();
  if ([[IOSClass byteClass] isEqual:expectedClass]) return JavaLangByte_class_();
  if ([[IOSClass charClass] isEqual:expectedClass]) return JavaLangCharacter_class_();
  if ([[IOSClass doubleClass] isEqual:expectedClass]) return JavaLangDouble_class_();
  if ([[IOSClass floatClass] isEqual:expectedClass]) return JavaLangFloat_class_();
  if ([[IOSClass intClass] isEqual:expectedClass]) return JavaLangInteger_class_();
  if ([[IOSClass longClass] isEqual:expectedClass]) return JavaLangLong_class_();
  if ([[IOSClass shortClass] isEqual:expectedClass]) return JavaLangShort_class_();
  return expectedClass;
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsInstanceOf_instanceOfWithIOSClass_(IOSClass *type) {
  OrgHamcrestCoreIsInstanceOf_initialize();
  return create_OrgHamcrestCoreIsInstanceOf_initWithIOSClass_(type);
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsInstanceOf_anyWithIOSClass_(IOSClass *type) {
  OrgHamcrestCoreIsInstanceOf_initialize();
  return create_OrgHamcrestCoreIsInstanceOf_initWithIOSClass_(type);
}

IOSObjectArray *OrgHamcrestCoreIsInstanceOf__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIsInstanceOf__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestCoreIsInstanceOf)
