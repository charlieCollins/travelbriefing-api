//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/AssumptionViolatedException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitAssumptionViolatedException")
#ifdef RESTRICT_OrgJunitAssumptionViolatedException
#define INCLUDE_ALL_OrgJunitAssumptionViolatedException 0
#else
#define INCLUDE_ALL_OrgJunitAssumptionViolatedException 1
#endif
#undef RESTRICT_OrgJunitAssumptionViolatedException

#if !defined (OrgJunitAssumptionViolatedException_) && (INCLUDE_ALL_OrgJunitAssumptionViolatedException || defined(INCLUDE_OrgJunitAssumptionViolatedException))
#define OrgJunitAssumptionViolatedException_

#define RESTRICT_OrgJunitInternalAssumptionViolatedException 1
#define INCLUDE_OrgJunitInternalAssumptionViolatedException 1
#include "org/junit/internal/AssumptionViolatedException.h"

@protocol OrgHamcrestMatcher;

@interface OrgJunitAssumptionViolatedException : OrgJunitInternalAssumptionViolatedException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
                          withId:(id)expected
          withOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

- (instancetype)initWithNSString:(NSString *)assumption
                 withNSException:(NSException *)t;

- (instancetype)initWithId:(id)actual
    withOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitAssumptionViolatedException)

FOUNDATION_EXPORT void OrgJunitAssumptionViolatedException_initWithId_withOrgHamcrestMatcher_(OrgJunitAssumptionViolatedException *self, id actual, id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *new_OrgJunitAssumptionViolatedException_initWithId_withOrgHamcrestMatcher_(id actual, id<OrgHamcrestMatcher> matcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *create_OrgJunitAssumptionViolatedException_initWithId_withOrgHamcrestMatcher_(id actual, id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT void OrgJunitAssumptionViolatedException_initWithNSString_withId_withOrgHamcrestMatcher_(OrgJunitAssumptionViolatedException *self, NSString *message, id expected, id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *new_OrgJunitAssumptionViolatedException_initWithNSString_withId_withOrgHamcrestMatcher_(NSString *message, id expected, id<OrgHamcrestMatcher> matcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *create_OrgJunitAssumptionViolatedException_initWithNSString_withId_withOrgHamcrestMatcher_(NSString *message, id expected, id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT void OrgJunitAssumptionViolatedException_initWithNSString_(OrgJunitAssumptionViolatedException *self, NSString *message);

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *new_OrgJunitAssumptionViolatedException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *create_OrgJunitAssumptionViolatedException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void OrgJunitAssumptionViolatedException_initWithNSString_withNSException_(OrgJunitAssumptionViolatedException *self, NSString *assumption, NSException *t);

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *new_OrgJunitAssumptionViolatedException_initWithNSString_withNSException_(NSString *assumption, NSException *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitAssumptionViolatedException *create_OrgJunitAssumptionViolatedException_initWithNSString_withNSException_(NSString *assumption, NSException *t);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitAssumptionViolatedException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitAssumptionViolatedException")
