//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/validator/AnnotationsValidator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/junit/runners/model/Annotatable.h"
#include "org/junit/runners/model/FrameworkField.h"
#include "org/junit/runners/model/FrameworkMethod.h"
#include "org/junit/runners/model/TestClass.h"
#include "org/junit/validator/AnnotationValidator.h"
#include "org/junit/validator/AnnotationValidatorFactory.h"
#include "org/junit/validator/AnnotationsValidator.h"
#include "org/junit/validator/ValidateWith.h"

inline id<JavaUtilList> OrgJunitValidatorAnnotationsValidator_get_VALIDATORS();
static id<JavaUtilList> OrgJunitValidatorAnnotationsValidator_VALIDATORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJunitValidatorAnnotationsValidator, VALIDATORS, id<JavaUtilList>)

@interface OrgJunitValidatorAnnotationsValidator_AnnotatableValidator : NSObject

- (instancetype)init;

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass;

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(id<OrgJunitRunnersModelAnnotatable>)annotatable;

- (id<JavaUtilList>)validateTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass;

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitRunnersModelAnnotatable:(id<OrgJunitRunnersModelAnnotatable>)annotatable;

@end

J2OBJC_STATIC_INIT(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator)

inline OrgJunitValidatorAnnotationValidatorFactory *OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_get_ANNOTATION_VALIDATOR_FACTORY();
static OrgJunitValidatorAnnotationValidatorFactory *OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_ANNOTATION_VALIDATOR_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator, ANNOTATION_VALIDATOR_FACTORY, OrgJunitValidatorAnnotationValidatorFactory *)

__attribute__((unused)) static void OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_init(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator *self);

__attribute__((unused)) static id<JavaUtilList> OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_validateAnnotatableWithOrgJunitRunnersModelAnnotatable_(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator *self, id<OrgJunitRunnersModelAnnotatable> annotatable);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator)

@interface OrgJunitValidatorAnnotationsValidator_ClassValidator : OrgJunitValidatorAnnotationsValidator_AnnotatableValidator

- (instancetype)init;

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass;

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(OrgJunitRunnersModelTestClass *)testClass;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitValidatorAnnotationsValidator_ClassValidator)

__attribute__((unused)) static void OrgJunitValidatorAnnotationsValidator_ClassValidator_init(OrgJunitValidatorAnnotationsValidator_ClassValidator *self);

__attribute__((unused)) static OrgJunitValidatorAnnotationsValidator_ClassValidator *new_OrgJunitValidatorAnnotationsValidator_ClassValidator_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitValidatorAnnotationsValidator_ClassValidator *create_OrgJunitValidatorAnnotationsValidator_ClassValidator_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitValidatorAnnotationsValidator_ClassValidator)

@interface OrgJunitValidatorAnnotationsValidator_MethodValidator : OrgJunitValidatorAnnotationsValidator_AnnotatableValidator

- (instancetype)init;

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass;

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(OrgJunitRunnersModelFrameworkMethod *)method;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitValidatorAnnotationsValidator_MethodValidator)

__attribute__((unused)) static void OrgJunitValidatorAnnotationsValidator_MethodValidator_init(OrgJunitValidatorAnnotationsValidator_MethodValidator *self);

__attribute__((unused)) static OrgJunitValidatorAnnotationsValidator_MethodValidator *new_OrgJunitValidatorAnnotationsValidator_MethodValidator_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitValidatorAnnotationsValidator_MethodValidator *create_OrgJunitValidatorAnnotationsValidator_MethodValidator_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitValidatorAnnotationsValidator_MethodValidator)

@interface OrgJunitValidatorAnnotationsValidator_FieldValidator : OrgJunitValidatorAnnotationsValidator_AnnotatableValidator

- (instancetype)init;

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass;

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(OrgJunitRunnersModelFrameworkField *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitValidatorAnnotationsValidator_FieldValidator)

__attribute__((unused)) static void OrgJunitValidatorAnnotationsValidator_FieldValidator_init(OrgJunitValidatorAnnotationsValidator_FieldValidator *self);

__attribute__((unused)) static OrgJunitValidatorAnnotationsValidator_FieldValidator *new_OrgJunitValidatorAnnotationsValidator_FieldValidator_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitValidatorAnnotationsValidator_FieldValidator *create_OrgJunitValidatorAnnotationsValidator_FieldValidator_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitValidatorAnnotationsValidator_FieldValidator)

J2OBJC_INITIALIZED_DEFN(OrgJunitValidatorAnnotationsValidator)

@implementation OrgJunitValidatorAnnotationsValidator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitValidatorAnnotationsValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)validateTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass {
  id<JavaUtilList> validationErrors = create_JavaUtilArrayList_init();
  for (OrgJunitValidatorAnnotationsValidator_AnnotatableValidator * __strong validator in nil_chk(OrgJunitValidatorAnnotationsValidator_VALIDATORS)) {
    id<JavaUtilList> additionalErrors = [((OrgJunitValidatorAnnotationsValidator_AnnotatableValidator *) nil_chk(validator)) validateTestClassWithOrgJunitRunnersModelTestClass:testClass];
    [validationErrors addAllWithJavaUtilCollection:additionalErrors];
  }
  return validationErrors;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(validateTestClassWithOrgJunitRunnersModelTestClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VALIDATORS", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 3, 4, -1 },
  };
  static const void *ptrTable[] = { "validateTestClass", "LOrgJunitRunnersModelTestClass;", "(Lorg/junit/runners/model/TestClass;)Ljava/util/List<Ljava/lang/Exception;>;", &OrgJunitValidatorAnnotationsValidator_VALIDATORS, "Ljava/util/List<Lorg/junit/validator/AnnotationsValidator$AnnotatableValidator<*>;>;", "LOrgJunitValidatorAnnotationsValidator_AnnotatableValidator;LOrgJunitValidatorAnnotationsValidator_ClassValidator;LOrgJunitValidatorAnnotationsValidator_MethodValidator;LOrgJunitValidatorAnnotationsValidator_FieldValidator;" };
  static const J2ObjcClassInfo _OrgJunitValidatorAnnotationsValidator = { "AnnotationsValidator", "org.junit.validator", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 5, -1, -1, -1 };
  return &_OrgJunitValidatorAnnotationsValidator;
}

+ (void)initialize {
  if (self == [OrgJunitValidatorAnnotationsValidator class]) {
    JreStrongAssign(&OrgJunitValidatorAnnotationsValidator_VALIDATORS, JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitValidatorAnnotationsValidator_ClassValidator_init(), create_OrgJunitValidatorAnnotationsValidator_MethodValidator_init(), create_OrgJunitValidatorAnnotationsValidator_FieldValidator_init() } count:3 type:OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_class_()]));
    J2OBJC_SET_INITIALIZED(OrgJunitValidatorAnnotationsValidator)
  }
}

@end

void OrgJunitValidatorAnnotationsValidator_init(OrgJunitValidatorAnnotationsValidator *self) {
  NSObject_init(self);
}

OrgJunitValidatorAnnotationsValidator *new_OrgJunitValidatorAnnotationsValidator_init() {
  J2OBJC_NEW_IMPL(OrgJunitValidatorAnnotationsValidator, init)
}

OrgJunitValidatorAnnotationsValidator *create_OrgJunitValidatorAnnotationsValidator_init() {
  J2OBJC_CREATE_IMPL(OrgJunitValidatorAnnotationsValidator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitValidatorAnnotationsValidator)

J2OBJC_INITIALIZED_DEFN(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator)

@implementation OrgJunitValidatorAnnotationsValidator_AnnotatableValidator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(id<OrgJunitRunnersModelAnnotatable>)annotatable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilList>)validateTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass {
  id<JavaUtilList> validationErrors = create_JavaUtilArrayList_init();
  for (id<OrgJunitRunnersModelAnnotatable> __strong annotatable in nil_chk([self getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:testClass])) {
    id<JavaUtilList> additionalErrors = OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_validateAnnotatableWithOrgJunitRunnersModelAnnotatable_(self, annotatable);
    [validationErrors addAllWithJavaUtilCollection:additionalErrors];
  }
  return validationErrors;
}

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitRunnersModelAnnotatable:(id<OrgJunitRunnersModelAnnotatable>)annotatable {
  return OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_validateAnnotatableWithOrgJunitRunnersModelAnnotatable_(self, annotatable);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x400, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x400, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 6, 1, -1, 7, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 3, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:);
  methods[2].selector = @selector(validateAnnotatableWithOrgJunitValidatorAnnotationValidator:withOrgJunitRunnersModelAnnotatable:);
  methods[3].selector = @selector(validateTestClassWithOrgJunitRunnersModelTestClass:);
  methods[4].selector = @selector(validateAnnotatableWithOrgJunitRunnersModelAnnotatable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ANNOTATION_VALIDATOR_FACTORY", "LOrgJunitValidatorAnnotationValidatorFactory;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "getAnnotatablesForTestClass", "LOrgJunitRunnersModelTestClass;", "(Lorg/junit/runners/model/TestClass;)Ljava/lang/Iterable<TT;>;", "validateAnnotatable", "LOrgJunitValidatorAnnotationValidator;LOrgJunitRunnersModelAnnotatable;", "(Lorg/junit/validator/AnnotationValidator;TT;)Ljava/util/List<Ljava/lang/Exception;>;", "validateTestClass", "(Lorg/junit/runners/model/TestClass;)Ljava/util/List<Ljava/lang/Exception;>;", "LOrgJunitRunnersModelAnnotatable;", "(TT;)Ljava/util/List<Ljava/lang/Exception;>;", &OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_ANNOTATION_VALIDATOR_FACTORY, "LOrgJunitValidatorAnnotationsValidator;", "<T::Lorg/junit/runners/model/Annotatable;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgJunitValidatorAnnotationsValidator_AnnotatableValidator = { "AnnotatableValidator", "org.junit.validator", ptrTable, methods, fields, 7, 0x40a, 5, 1, 11, -1, -1, 12, -1 };
  return &_OrgJunitValidatorAnnotationsValidator_AnnotatableValidator;
}

+ (void)initialize {
  if (self == [OrgJunitValidatorAnnotationsValidator_AnnotatableValidator class]) {
    JreStrongAssignAndConsume(&OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_ANNOTATION_VALIDATOR_FACTORY, new_OrgJunitValidatorAnnotationValidatorFactory_init());
    J2OBJC_SET_INITIALIZED(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator)
  }
}

@end

void OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_init(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator *self) {
  NSObject_init(self);
}

id<JavaUtilList> OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_validateAnnotatableWithOrgJunitRunnersModelAnnotatable_(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator *self, id<OrgJunitRunnersModelAnnotatable> annotatable) {
  id<JavaUtilList> validationErrors = create_JavaUtilArrayList_init();
  {
    IOSObjectArray *a__ = [((id<OrgJunitRunnersModelAnnotatable>) nil_chk(annotatable)) getAnnotations];
    id<JavaLangAnnotationAnnotation> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangAnnotationAnnotation> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangAnnotationAnnotation> annotation = *b__++;
      IOSClass *annotationType = [((id<JavaLangAnnotationAnnotation>) nil_chk(annotation)) annotationType];
      id<OrgJunitValidatorValidateWith> validateWith = ((id<OrgJunitValidatorValidateWith>) [((IOSClass *) nil_chk(annotationType)) getAnnotationWithIOSClass:OrgJunitValidatorValidateWith_class_()]);
      if (validateWith != nil) {
        OrgJunitValidatorAnnotationValidator *annotationValidator = [((OrgJunitValidatorAnnotationValidatorFactory *) nil_chk(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_ANNOTATION_VALIDATOR_FACTORY)) createAnnotationValidatorWithOrgJunitValidatorValidateWith:validateWith];
        id<JavaUtilList> errors = [self validateAnnotatableWithOrgJunitValidatorAnnotationValidator:annotationValidator withOrgJunitRunnersModelAnnotatable:annotatable];
        [validationErrors addAllWithJavaUtilCollection:errors];
      }
    }
  }
  return validationErrors;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitValidatorAnnotationsValidator_AnnotatableValidator)

@implementation OrgJunitValidatorAnnotationsValidator_ClassValidator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitValidatorAnnotationsValidator_ClassValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass {
  return JavaUtilCollections_singletonListWithId_(testClass);
}

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(OrgJunitRunnersModelTestClass *)testClass {
  return [((OrgJunitValidatorAnnotationValidator *) nil_chk(validator)) validateAnnotatedClassWithOrgJunitRunnersModelTestClass:testClass];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:);
  methods[2].selector = @selector(validateAnnotatableWithOrgJunitValidatorAnnotationValidator:withOrgJunitRunnersModelAnnotatable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getAnnotatablesForTestClass", "LOrgJunitRunnersModelTestClass;", "(Lorg/junit/runners/model/TestClass;)Ljava/lang/Iterable<Lorg/junit/runners/model/TestClass;>;", "validateAnnotatable", "LOrgJunitValidatorAnnotationValidator;LOrgJunitRunnersModelTestClass;", "(Lorg/junit/validator/AnnotationValidator;Lorg/junit/runners/model/TestClass;)Ljava/util/List<Ljava/lang/Exception;>;", "LOrgJunitValidatorAnnotationsValidator;", "Lorg/junit/validator/AnnotationsValidator$AnnotatableValidator<Lorg/junit/runners/model/TestClass;>;" };
  static const J2ObjcClassInfo _OrgJunitValidatorAnnotationsValidator_ClassValidator = { "ClassValidator", "org.junit.validator", ptrTable, methods, NULL, 7, 0xa, 3, 0, 6, -1, -1, 7, -1 };
  return &_OrgJunitValidatorAnnotationsValidator_ClassValidator;
}

@end

void OrgJunitValidatorAnnotationsValidator_ClassValidator_init(OrgJunitValidatorAnnotationsValidator_ClassValidator *self) {
  OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_init(self);
}

OrgJunitValidatorAnnotationsValidator_ClassValidator *new_OrgJunitValidatorAnnotationsValidator_ClassValidator_init() {
  J2OBJC_NEW_IMPL(OrgJunitValidatorAnnotationsValidator_ClassValidator, init)
}

OrgJunitValidatorAnnotationsValidator_ClassValidator *create_OrgJunitValidatorAnnotationsValidator_ClassValidator_init() {
  J2OBJC_CREATE_IMPL(OrgJunitValidatorAnnotationsValidator_ClassValidator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitValidatorAnnotationsValidator_ClassValidator)

@implementation OrgJunitValidatorAnnotationsValidator_MethodValidator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitValidatorAnnotationsValidator_MethodValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass {
  return [((OrgJunitRunnersModelTestClass *) nil_chk(testClass)) getAnnotatedMethods];
}

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(OrgJunitRunnersModelFrameworkMethod *)method {
  return [((OrgJunitValidatorAnnotationValidator *) nil_chk(validator)) validateAnnotatedMethodWithOrgJunitRunnersModelFrameworkMethod:method];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:);
  methods[2].selector = @selector(validateAnnotatableWithOrgJunitValidatorAnnotationValidator:withOrgJunitRunnersModelAnnotatable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getAnnotatablesForTestClass", "LOrgJunitRunnersModelTestClass;", "(Lorg/junit/runners/model/TestClass;)Ljava/lang/Iterable<Lorg/junit/runners/model/FrameworkMethod;>;", "validateAnnotatable", "LOrgJunitValidatorAnnotationValidator;LOrgJunitRunnersModelFrameworkMethod;", "(Lorg/junit/validator/AnnotationValidator;Lorg/junit/runners/model/FrameworkMethod;)Ljava/util/List<Ljava/lang/Exception;>;", "LOrgJunitValidatorAnnotationsValidator;", "Lorg/junit/validator/AnnotationsValidator$AnnotatableValidator<Lorg/junit/runners/model/FrameworkMethod;>;" };
  static const J2ObjcClassInfo _OrgJunitValidatorAnnotationsValidator_MethodValidator = { "MethodValidator", "org.junit.validator", ptrTable, methods, NULL, 7, 0xa, 3, 0, 6, -1, -1, 7, -1 };
  return &_OrgJunitValidatorAnnotationsValidator_MethodValidator;
}

@end

void OrgJunitValidatorAnnotationsValidator_MethodValidator_init(OrgJunitValidatorAnnotationsValidator_MethodValidator *self) {
  OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_init(self);
}

OrgJunitValidatorAnnotationsValidator_MethodValidator *new_OrgJunitValidatorAnnotationsValidator_MethodValidator_init() {
  J2OBJC_NEW_IMPL(OrgJunitValidatorAnnotationsValidator_MethodValidator, init)
}

OrgJunitValidatorAnnotationsValidator_MethodValidator *create_OrgJunitValidatorAnnotationsValidator_MethodValidator_init() {
  J2OBJC_CREATE_IMPL(OrgJunitValidatorAnnotationsValidator_MethodValidator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitValidatorAnnotationsValidator_MethodValidator)

@implementation OrgJunitValidatorAnnotationsValidator_FieldValidator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitValidatorAnnotationsValidator_FieldValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaLangIterable>)getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass {
  return [((OrgJunitRunnersModelTestClass *) nil_chk(testClass)) getAnnotatedFields];
}

- (id<JavaUtilList>)validateAnnotatableWithOrgJunitValidatorAnnotationValidator:(OrgJunitValidatorAnnotationValidator *)validator
                                            withOrgJunitRunnersModelAnnotatable:(OrgJunitRunnersModelFrameworkField *)field {
  return [((OrgJunitValidatorAnnotationValidator *) nil_chk(validator)) validateAnnotatedFieldWithOrgJunitRunnersModelFrameworkField:field];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAnnotatablesForTestClassWithOrgJunitRunnersModelTestClass:);
  methods[2].selector = @selector(validateAnnotatableWithOrgJunitValidatorAnnotationValidator:withOrgJunitRunnersModelAnnotatable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getAnnotatablesForTestClass", "LOrgJunitRunnersModelTestClass;", "(Lorg/junit/runners/model/TestClass;)Ljava/lang/Iterable<Lorg/junit/runners/model/FrameworkField;>;", "validateAnnotatable", "LOrgJunitValidatorAnnotationValidator;LOrgJunitRunnersModelFrameworkField;", "(Lorg/junit/validator/AnnotationValidator;Lorg/junit/runners/model/FrameworkField;)Ljava/util/List<Ljava/lang/Exception;>;", "LOrgJunitValidatorAnnotationsValidator;", "Lorg/junit/validator/AnnotationsValidator$AnnotatableValidator<Lorg/junit/runners/model/FrameworkField;>;" };
  static const J2ObjcClassInfo _OrgJunitValidatorAnnotationsValidator_FieldValidator = { "FieldValidator", "org.junit.validator", ptrTable, methods, NULL, 7, 0xa, 3, 0, 6, -1, -1, 7, -1 };
  return &_OrgJunitValidatorAnnotationsValidator_FieldValidator;
}

@end

void OrgJunitValidatorAnnotationsValidator_FieldValidator_init(OrgJunitValidatorAnnotationsValidator_FieldValidator *self) {
  OrgJunitValidatorAnnotationsValidator_AnnotatableValidator_init(self);
}

OrgJunitValidatorAnnotationsValidator_FieldValidator *new_OrgJunitValidatorAnnotationsValidator_FieldValidator_init() {
  J2OBJC_NEW_IMPL(OrgJunitValidatorAnnotationsValidator_FieldValidator, init)
}

OrgJunitValidatorAnnotationsValidator_FieldValidator *create_OrgJunitValidatorAnnotationsValidator_FieldValidator_init() {
  J2OBJC_CREATE_IMPL(OrgJunitValidatorAnnotationsValidator_FieldValidator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitValidatorAnnotationsValidator_FieldValidator)
