//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParametersFactory.java
//

#include "J2ObjC_source.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParameters.h"
#include "org/junit/runners/parameterized/BlockJUnit4ClassRunnerWithParametersFactory.h"
#include "org/junit/runners/parameterized/TestWithParameters.h"

@implementation OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJunitRunnerRunner *)createRunnerForTestWithParametersWithOrgJunitRunnersParameterizedTestWithParameters:(OrgJunitRunnersParameterizedTestWithParameters *)test {
  return create_OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParameters_initWithOrgJunitRunnersParameterizedTestWithParameters_(test);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerRunner;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createRunnerForTestWithParametersWithOrgJunitRunnersParameterizedTestWithParameters:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createRunnerForTestWithParameters", "LOrgJunitRunnersParameterizedTestWithParameters;", "LOrgJunitRunnersModelInitializationError;" };
  static const J2ObjcClassInfo _OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory = { "BlockJUnit4ClassRunnerWithParametersFactory", "org.junit.runners.parameterized", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory;
}

@end

void OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory_init(OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory *self) {
  NSObject_init(self);
}

OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory *new_OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory_init() {
  J2OBJC_NEW_IMPL(OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory, init)
}

OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory *create_OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory_init() {
  J2OBJC_CREATE_IMPL(OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRunnersParameterizedBlockJUnit4ClassRunnerWithParametersFactory)
