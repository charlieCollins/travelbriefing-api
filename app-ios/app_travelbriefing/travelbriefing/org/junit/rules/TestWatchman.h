//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/rules/TestWatchman.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRulesTestWatchman")
#ifdef RESTRICT_OrgJunitRulesTestWatchman
#define INCLUDE_ALL_OrgJunitRulesTestWatchman 0
#else
#define INCLUDE_ALL_OrgJunitRulesTestWatchman 1
#endif
#undef RESTRICT_OrgJunitRulesTestWatchman

#if !defined (OrgJunitRulesTestWatchman_) && (INCLUDE_ALL_OrgJunitRulesTestWatchman || defined(INCLUDE_OrgJunitRulesTestWatchman))
#define OrgJunitRulesTestWatchman_

#define RESTRICT_OrgJunitRulesMethodRule 1
#define INCLUDE_OrgJunitRulesMethodRule 1
#include "org/junit/rules/MethodRule.h"

@class OrgJunitRunnersModelFrameworkMethod;
@class OrgJunitRunnersModelStatement;

@interface OrgJunitRulesTestWatchman : NSObject < OrgJunitRulesMethodRule >

#pragma mark Public

- (instancetype)init;

- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
                                  withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method
                                                                   withId:(id)target;

- (void)failedWithNSException:(NSException *)e
withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method;

- (void)finishedWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method;

- (void)startingWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method;

- (void)succeededWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRulesTestWatchman)

FOUNDATION_EXPORT void OrgJunitRulesTestWatchman_init(OrgJunitRulesTestWatchman *self);

FOUNDATION_EXPORT OrgJunitRulesTestWatchman *new_OrgJunitRulesTestWatchman_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRulesTestWatchman *create_OrgJunitRulesTestWatchman_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRulesTestWatchman)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitRulesTestWatchman")
