//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/rules/TestWatcher.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/junit/AssumptionViolatedException.h"
#include "org/junit/internal/AssumptionViolatedException.h"
#include "org/junit/rules/TestWatcher.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runners/model/MultipleFailureException.h"
#include "org/junit/runners/model/Statement.h"

@interface OrgJunitRulesTestWatcher ()

- (void)succeededQuietlyWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                     withJavaUtilList:(id<JavaUtilList>)errors;

- (void)failedQuietlyWithNSException:(NSException *)e
       withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                    withJavaUtilList:(id<JavaUtilList>)errors;

- (void)skippedQuietlyWithOrgJunitInternalAssumptionViolatedException:(OrgJunitInternalAssumptionViolatedException *)e
                                        withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                                     withJavaUtilList:(id<JavaUtilList>)errors;

- (void)startingQuietlyWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                    withJavaUtilList:(id<JavaUtilList>)errors;

- (void)finishedQuietlyWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                    withJavaUtilList:(id<JavaUtilList>)errors;

@end

__attribute__((unused)) static void OrgJunitRulesTestWatcher_succeededQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitRulesTestWatcher_failedQuietlyWithNSException_withOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, NSException *e, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitRulesTestWatcher_skippedQuietlyWithOrgJunitInternalAssumptionViolatedException_withOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitInternalAssumptionViolatedException *e, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitRulesTestWatcher_startingQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitRulesTestWatcher_finishedQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors);

__attribute__((unused)) static IOSObjectArray *OrgJunitRulesTestWatcher__Annotations$0();

@interface OrgJunitRulesTestWatcher_1 : OrgJunitRunnersModelStatement {
 @public
  OrgJunitRulesTestWatcher *this$0_;
  OrgJunitRunnerDescription *val$description_;
  OrgJunitRunnersModelStatement *val$base_;
}

- (instancetype)initWithOrgJunitRulesTestWatcher:(OrgJunitRulesTestWatcher *)outer$
                   withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)capture$0
               withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$1;

- (void)evaluate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRulesTestWatcher_1)

__attribute__((unused)) static void OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatcher_1 *self, OrgJunitRulesTestWatcher *outer$, OrgJunitRunnerDescription *capture$0, OrgJunitRunnersModelStatement *capture$1);

__attribute__((unused)) static OrgJunitRulesTestWatcher_1 *new_OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatcher *outer$, OrgJunitRunnerDescription *capture$0, OrgJunitRunnersModelStatement *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRulesTestWatcher_1 *create_OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatcher *outer$, OrgJunitRunnerDescription *capture$0, OrgJunitRunnersModelStatement *capture$1);

@implementation OrgJunitRulesTestWatcher

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitRulesTestWatcher_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
                                            withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return create_OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(self, description_, base);
}

- (void)succeededQuietlyWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                     withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRulesTestWatcher_succeededQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(self, description_, errors);
}

- (void)failedQuietlyWithNSException:(NSException *)e
       withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                    withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRulesTestWatcher_failedQuietlyWithNSException_withOrgJunitRunnerDescription_withJavaUtilList_(self, e, description_, errors);
}

- (void)skippedQuietlyWithOrgJunitInternalAssumptionViolatedException:(OrgJunitInternalAssumptionViolatedException *)e
                                        withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                                     withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRulesTestWatcher_skippedQuietlyWithOrgJunitInternalAssumptionViolatedException_withOrgJunitRunnerDescription_withJavaUtilList_(self, e, description_, errors);
}

- (void)startingQuietlyWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                    withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRulesTestWatcher_startingQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(self, description_, errors);
}

- (void)finishedQuietlyWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                                    withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRulesTestWatcher_finishedQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(self, description_, errors);
}

- (void)succeededWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
}

- (void)failedWithNSException:(NSException *)e
withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
}

- (void)skippedWithOrgJunitAssumptionViolatedException:(OrgJunitAssumptionViolatedException *)e
                         withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  OrgJunitInternalAssumptionViolatedException *asInternalException = e;
  [self skippedWithOrgJunitInternalAssumptionViolatedException:asInternalException withOrgJunitRunnerDescription:description_];
}

- (void)skippedWithOrgJunitInternalAssumptionViolatedException:(OrgJunitInternalAssumptionViolatedException *)e
                                 withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
}

- (void)startingWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
}

- (void)finishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnersModelStatement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x2, 8, 9, -1, 10, -1, -1 },
    { NULL, "V", 0x2, 11, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x2, 12, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 17, 19, -1, -1, 20, -1 },
    { NULL, "V", 0x4, 21, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 22, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithOrgJunitRunnersModelStatement:withOrgJunitRunnerDescription:);
  methods[2].selector = @selector(succeededQuietlyWithOrgJunitRunnerDescription:withJavaUtilList:);
  methods[3].selector = @selector(failedQuietlyWithNSException:withOrgJunitRunnerDescription:withJavaUtilList:);
  methods[4].selector = @selector(skippedQuietlyWithOrgJunitInternalAssumptionViolatedException:withOrgJunitRunnerDescription:withJavaUtilList:);
  methods[5].selector = @selector(startingQuietlyWithOrgJunitRunnerDescription:withJavaUtilList:);
  methods[6].selector = @selector(finishedQuietlyWithOrgJunitRunnerDescription:withJavaUtilList:);
  methods[7].selector = @selector(succeededWithOrgJunitRunnerDescription:);
  methods[8].selector = @selector(failedWithNSException:withOrgJunitRunnerDescription:);
  methods[9].selector = @selector(skippedWithOrgJunitAssumptionViolatedException:withOrgJunitRunnerDescription:);
  methods[10].selector = @selector(skippedWithOrgJunitInternalAssumptionViolatedException:withOrgJunitRunnerDescription:);
  methods[11].selector = @selector(startingWithOrgJunitRunnerDescription:);
  methods[12].selector = @selector(finishedWithOrgJunitRunnerDescription:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LOrgJunitRunnersModelStatement;LOrgJunitRunnerDescription;", "succeededQuietly", "LOrgJunitRunnerDescription;LJavaUtilList;", "(Lorg/junit/runner/Description;Ljava/util/List<Ljava/lang/Throwable;>;)V", "failedQuietly", "LNSException;LOrgJunitRunnerDescription;LJavaUtilList;", "(Ljava/lang/Throwable;Lorg/junit/runner/Description;Ljava/util/List<Ljava/lang/Throwable;>;)V", "skippedQuietly", "LOrgJunitInternalAssumptionViolatedException;LOrgJunitRunnerDescription;LJavaUtilList;", "(Lorg/junit/internal/AssumptionViolatedException;Lorg/junit/runner/Description;Ljava/util/List<Ljava/lang/Throwable;>;)V", "startingQuietly", "finishedQuietly", "succeeded", "LOrgJunitRunnerDescription;", "failed", "LNSException;LOrgJunitRunnerDescription;", "skipped", "LOrgJunitAssumptionViolatedException;LOrgJunitRunnerDescription;", "LOrgJunitInternalAssumptionViolatedException;LOrgJunitRunnerDescription;", (void *)&OrgJunitRulesTestWatcher__Annotations$0, "starting", "finished" };
  static const J2ObjcClassInfo _OrgJunitRulesTestWatcher = { "TestWatcher", "org.junit.rules", ptrTable, methods, NULL, 7, 0x401, 13, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitRulesTestWatcher;
}

@end

void OrgJunitRulesTestWatcher_init(OrgJunitRulesTestWatcher *self) {
  NSObject_init(self);
}

void OrgJunitRulesTestWatcher_succeededQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors) {
  @try {
    [self succeededWithOrgJunitRunnerDescription:description_];
  }
  @catch (NSException *e) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:e];
  }
}

void OrgJunitRulesTestWatcher_failedQuietlyWithNSException_withOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, NSException *e, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors) {
  @try {
    [self failedWithNSException:e withOrgJunitRunnerDescription:description_];
  }
  @catch (NSException *e1) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:e1];
  }
}

void OrgJunitRulesTestWatcher_skippedQuietlyWithOrgJunitInternalAssumptionViolatedException_withOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitInternalAssumptionViolatedException *e, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors) {
  @try {
    if ([e isKindOfClass:[OrgJunitAssumptionViolatedException class]]) {
      [self skippedWithOrgJunitAssumptionViolatedException:(OrgJunitAssumptionViolatedException *) cast_chk(e, [OrgJunitAssumptionViolatedException class]) withOrgJunitRunnerDescription:description_];
    }
    else {
      [self skippedWithOrgJunitInternalAssumptionViolatedException:e withOrgJunitRunnerDescription:description_];
    }
  }
  @catch (NSException *e1) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:e1];
  }
}

void OrgJunitRulesTestWatcher_startingQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors) {
  @try {
    [self startingWithOrgJunitRunnerDescription:description_];
  }
  @catch (NSException *e) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:e];
  }
}

void OrgJunitRulesTestWatcher_finishedQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitRulesTestWatcher *self, OrgJunitRunnerDescription *description_, id<JavaUtilList> errors) {
  @try {
    [self finishedWithOrgJunitRunnerDescription:description_];
  }
  @catch (NSException *e) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:e];
  }
}

IOSObjectArray *OrgJunitRulesTestWatcher__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRulesTestWatcher)

@implementation OrgJunitRulesTestWatcher_1

- (instancetype)initWithOrgJunitRulesTestWatcher:(OrgJunitRulesTestWatcher *)outer$
                   withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)capture$0
               withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$1 {
  OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)evaluate {
  id<JavaUtilList> errors = create_JavaUtilArrayList_init();
  OrgJunitRulesTestWatcher_startingQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(this$0_, val$description_, errors);
  @try {
    [((OrgJunitRunnersModelStatement *) nil_chk(val$base_)) evaluate];
    OrgJunitRulesTestWatcher_succeededQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(this$0_, val$description_, errors);
  }
  @catch (OrgJunitInternalAssumptionViolatedException *e) {
    [errors addWithId:e];
    OrgJunitRulesTestWatcher_skippedQuietlyWithOrgJunitInternalAssumptionViolatedException_withOrgJunitRunnerDescription_withJavaUtilList_(this$0_, e, val$description_, errors);
  }
  @catch (NSException *e) {
    [errors addWithId:e];
    OrgJunitRulesTestWatcher_failedQuietlyWithNSException_withOrgJunitRunnerDescription_withJavaUtilList_(this$0_, e, val$description_, errors);
  }
  @finally {
    OrgJunitRulesTestWatcher_finishedQuietlyWithOrgJunitRunnerDescription_withJavaUtilList_(this$0_, val$description_, errors);
  }
  OrgJunitRunnersModelMultipleFailureException_assertEmptyWithJavaUtilList_(errors);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$description_);
  RELEASE_(val$base_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRulesTestWatcher:withOrgJunitRunnerDescription:withOrgJunitRunnersModelStatement:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitRulesTestWatcher;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$description_", "LOrgJunitRunnerDescription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$base_", "LOrgJunitRunnersModelStatement;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSException;", "LOrgJunitRulesTestWatcher;", "applyWithOrgJunitRunnersModelStatement:withOrgJunitRunnerDescription:" };
  static const J2ObjcClassInfo _OrgJunitRulesTestWatcher_1 = { "", "org.junit.rules", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, -1, -1 };
  return &_OrgJunitRulesTestWatcher_1;
}

@end

void OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatcher_1 *self, OrgJunitRulesTestWatcher *outer$, OrgJunitRunnerDescription *capture$0, OrgJunitRunnersModelStatement *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$description_, capture$0);
  JreStrongAssign(&self->val$base_, capture$1);
  OrgJunitRunnersModelStatement_init(self);
}

OrgJunitRulesTestWatcher_1 *new_OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatcher *outer$, OrgJunitRunnerDescription *capture$0, OrgJunitRunnersModelStatement *capture$1) {
  J2OBJC_NEW_IMPL(OrgJunitRulesTestWatcher_1, initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_, outer$, capture$0, capture$1)
}

OrgJunitRulesTestWatcher_1 *create_OrgJunitRulesTestWatcher_1_initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatcher *outer$, OrgJunitRunnerDescription *capture$0, OrgJunitRunnersModelStatement *capture$1) {
  J2OBJC_CREATE_IMPL(OrgJunitRulesTestWatcher_1, initWithOrgJunitRulesTestWatcher_withOrgJunitRunnerDescription_withOrgJunitRunnersModelStatement_, outer$, capture$0, capture$1)
}
