//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/rules/RuleChain.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/junit/rules/RuleChain.h"
#include "org/junit/rules/TestRule.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runners/model/Statement.h"

@interface OrgJunitRulesRuleChain () {
 @public
  id<JavaUtilList> rulesStartingWithInnerMost_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)rules;

@end

J2OBJC_FIELD_SETTER(OrgJunitRulesRuleChain, rulesStartingWithInnerMost_, id<JavaUtilList>)

inline OrgJunitRulesRuleChain *OrgJunitRulesRuleChain_get_EMPTY_CHAIN();
static OrgJunitRulesRuleChain *OrgJunitRulesRuleChain_EMPTY_CHAIN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJunitRulesRuleChain, EMPTY_CHAIN, OrgJunitRulesRuleChain *)

__attribute__((unused)) static void OrgJunitRulesRuleChain_initWithJavaUtilList_(OrgJunitRulesRuleChain *self, id<JavaUtilList> rules);

__attribute__((unused)) static OrgJunitRulesRuleChain *new_OrgJunitRulesRuleChain_initWithJavaUtilList_(id<JavaUtilList> rules) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRulesRuleChain *create_OrgJunitRulesRuleChain_initWithJavaUtilList_(id<JavaUtilList> rules);

J2OBJC_INITIALIZED_DEFN(OrgJunitRulesRuleChain)

@implementation OrgJunitRulesRuleChain

+ (OrgJunitRulesRuleChain *)emptyRuleChain {
  return OrgJunitRulesRuleChain_emptyRuleChain();
}

+ (OrgJunitRulesRuleChain *)outerRuleWithOrgJunitRulesTestRule:(id<OrgJunitRulesTestRule>)outerRule {
  return OrgJunitRulesRuleChain_outerRuleWithOrgJunitRulesTestRule_(outerRule);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)rules {
  OrgJunitRulesRuleChain_initWithJavaUtilList_(self, rules);
  return self;
}

- (OrgJunitRulesRuleChain *)aroundWithOrgJunitRulesTestRule:(id<OrgJunitRulesTestRule>)enclosedRule {
  id<JavaUtilList> rulesOfNewChain = create_JavaUtilArrayList_init();
  [rulesOfNewChain addWithId:enclosedRule];
  [rulesOfNewChain addAllWithJavaUtilCollection:rulesStartingWithInnerMost_];
  return create_OrgJunitRulesRuleChain_initWithJavaUtilList_(rulesOfNewChain);
}

- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
                                            withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  for (id<OrgJunitRulesTestRule> __strong each in nil_chk(rulesStartingWithInnerMost_)) {
    base = [((id<OrgJunitRulesTestRule>) nil_chk(each)) applyWithOrgJunitRunnersModelStatement:base withOrgJunitRunnerDescription:description_];
  }
  return base;
}

- (void)dealloc {
  RELEASE_(rulesStartingWithInnerMost_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJunitRulesRuleChain;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRulesRuleChain;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, 3, -1, -1 },
    { NULL, "LOrgJunitRulesRuleChain;", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnersModelStatement;", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(emptyRuleChain);
  methods[1].selector = @selector(outerRuleWithOrgJunitRulesTestRule:);
  methods[2].selector = @selector(initWithJavaUtilList:);
  methods[3].selector = @selector(aroundWithOrgJunitRulesTestRule:);
  methods[4].selector = @selector(applyWithOrgJunitRunnersModelStatement:withOrgJunitRunnerDescription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_CHAIN", "LOrgJunitRulesRuleChain;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "rulesStartingWithInnerMost_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "outerRule", "LOrgJunitRulesTestRule;", "LJavaUtilList;", "(Ljava/util/List<Lorg/junit/rules/TestRule;>;)V", "around", "apply", "LOrgJunitRunnersModelStatement;LOrgJunitRunnerDescription;", &OrgJunitRulesRuleChain_EMPTY_CHAIN, "Ljava/util/List<Lorg/junit/rules/TestRule;>;" };
  static const J2ObjcClassInfo _OrgJunitRulesRuleChain = { "RuleChain", "org.junit.rules", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgJunitRulesRuleChain;
}

+ (void)initialize {
  if (self == [OrgJunitRulesRuleChain class]) {
    JreStrongAssignAndConsume(&OrgJunitRulesRuleChain_EMPTY_CHAIN, new_OrgJunitRulesRuleChain_initWithJavaUtilList_(JavaUtilCollections_emptyList()));
    J2OBJC_SET_INITIALIZED(OrgJunitRulesRuleChain)
  }
}

@end

OrgJunitRulesRuleChain *OrgJunitRulesRuleChain_emptyRuleChain() {
  OrgJunitRulesRuleChain_initialize();
  return OrgJunitRulesRuleChain_EMPTY_CHAIN;
}

OrgJunitRulesRuleChain *OrgJunitRulesRuleChain_outerRuleWithOrgJunitRulesTestRule_(id<OrgJunitRulesTestRule> outerRule) {
  OrgJunitRulesRuleChain_initialize();
  return [((OrgJunitRulesRuleChain *) nil_chk(OrgJunitRulesRuleChain_emptyRuleChain())) aroundWithOrgJunitRulesTestRule:outerRule];
}

void OrgJunitRulesRuleChain_initWithJavaUtilList_(OrgJunitRulesRuleChain *self, id<JavaUtilList> rules) {
  NSObject_init(self);
  JreStrongAssign(&self->rulesStartingWithInnerMost_, rules);
}

OrgJunitRulesRuleChain *new_OrgJunitRulesRuleChain_initWithJavaUtilList_(id<JavaUtilList> rules) {
  J2OBJC_NEW_IMPL(OrgJunitRulesRuleChain, initWithJavaUtilList_, rules)
}

OrgJunitRulesRuleChain *create_OrgJunitRulesRuleChain_initWithJavaUtilList_(id<JavaUtilList> rules) {
  J2OBJC_CREATE_IMPL(OrgJunitRulesRuleChain, initWithJavaUtilList_, rules)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRulesRuleChain)
