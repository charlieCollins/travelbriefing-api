//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/rules/TestName.java
//

#include "J2ObjC_source.h"
#include "org/junit/rules/TestName.h"
#include "org/junit/rules/TestWatcher.h"
#include "org/junit/runner/Description.h"

@interface OrgJunitRulesTestName () {
 @public
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitRulesTestName, name_, NSString *)

@implementation OrgJunitRulesTestName

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitRulesTestName_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)startingWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)d {
  JreStrongAssign(&name_, [((OrgJunitRunnerDescription *) nil_chk(d)) getMethodName]);
}

- (NSString *)getMethodName {
  return name_;
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(startingWithOrgJunitRunnerDescription:);
  methods[2].selector = @selector(getMethodName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "starting", "LOrgJunitRunnerDescription;" };
  static const J2ObjcClassInfo _OrgJunitRulesTestName = { "TestName", "org.junit.rules", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgJunitRulesTestName;
}

@end

void OrgJunitRulesTestName_init(OrgJunitRulesTestName *self) {
  OrgJunitRulesTestWatcher_init(self);
}

OrgJunitRulesTestName *new_OrgJunitRulesTestName_init() {
  J2OBJC_NEW_IMPL(OrgJunitRulesTestName, init)
}

OrgJunitRulesTestName *create_OrgJunitRulesTestName_init() {
  J2OBJC_CREATE_IMPL(OrgJunitRulesTestName, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRulesTestName)
