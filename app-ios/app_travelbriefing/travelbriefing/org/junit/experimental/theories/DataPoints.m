//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/theories/DataPoints.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"
#include "org/junit/experimental/theories/DataPoints.h"

__attribute__((unused)) static IOSObjectArray *OrgJunitExperimentalTheoriesDataPoints__Annotations$0();

@implementation OrgJunitExperimentalTheoriesDataPoints

@synthesize value = value_;
@synthesize ignoredExceptions = ignoredExceptions_;

+ (IOSObjectArray *)valueDefault {
  return [IOSObjectArray arrayWithLength:0 type:NSString_class_()];
}

+ (IOSObjectArray *)ignoredExceptionsDefault {
  return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
}

- (IOSClass *)annotationType {
  return OrgJunitExperimentalTheoriesDataPoints_class_();
}

- (NSString *)description {
  return @"@org.junit.experimental.theories.DataPoints()";
}

- (void)dealloc {
  RELEASE_(value_);
  RELEASE_(ignoredExceptions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(ignoredExceptions);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "[LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "ignoredExceptions_", "[LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "[Ljava/lang/Class<+Ljava/lang/Throwable;>;", (void *)&OrgJunitExperimentalTheoriesDataPoints__Annotations$0 };
  static const J2ObjcClassInfo _OrgJunitExperimentalTheoriesDataPoints = { "DataPoints", "org.junit.experimental.theories", ptrTable, methods, fields, 7, 0x2609, 2, 2, -1, -1, -1, -1, 1 };
  return &_OrgJunitExperimentalTheoriesDataPoints;
}

@end

id<OrgJunitExperimentalTheoriesDataPoints> create_OrgJunitExperimentalTheoriesDataPoints(IOSObjectArray *ignoredExceptions, IOSObjectArray *value) {
  OrgJunitExperimentalTheoriesDataPoints *self = AUTORELEASE([[OrgJunitExperimentalTheoriesDataPoints alloc] init]);
  self->ignoredExceptions_ = RETAIN_(ignoredExceptions);
  self->value_ = RETAIN_(value);
  return self;
}

IOSObjectArray *OrgJunitExperimentalTheoriesDataPoints__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:2 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJunitExperimentalTheoriesDataPoints)
