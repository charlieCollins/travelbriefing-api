//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/results/ResultMatchers.java
//

#include "J2ObjC_source.h"
#include "org/hamcrest/BaseMatcher.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/TypeSafeMatcher.h"
#include "org/junit/experimental/results/PrintableResult.h"
#include "org/junit/experimental/results/ResultMatchers.h"

@interface OrgJunitExperimentalResultsResultMatchers_1 : OrgHamcrestTypeSafeMatcher {
 @public
  jint val$count_;
}

- (instancetype)initWithInt:(jint)capture$0;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

- (jboolean)matchesSafelyWithId:(OrgJunitExperimentalResultsPrintableResult *)item;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalResultsResultMatchers_1)

__attribute__((unused)) static void OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(OrgJunitExperimentalResultsResultMatchers_1 *self, jint capture$0);

__attribute__((unused)) static OrgJunitExperimentalResultsResultMatchers_1 *new_OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalResultsResultMatchers_1 *create_OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(jint capture$0);

@interface OrgJunitExperimentalResultsResultMatchers_2 : OrgHamcrestBaseMatcher {
 @public
  NSString *val$string_;
}

- (instancetype)initWithNSString:(NSString *)capture$0;

- (jboolean)matchesWithId:(id)item;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalResultsResultMatchers_2)

__attribute__((unused)) static void OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(OrgJunitExperimentalResultsResultMatchers_2 *self, NSString *capture$0);

__attribute__((unused)) static OrgJunitExperimentalResultsResultMatchers_2 *new_OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalResultsResultMatchers_2 *create_OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(NSString *capture$0);

@interface OrgJunitExperimentalResultsResultMatchers_3 : OrgHamcrestBaseMatcher {
 @public
  NSString *val$string_;
}

- (instancetype)initWithNSString:(NSString *)capture$0;

- (jboolean)matchesWithId:(id)item;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalResultsResultMatchers_3)

__attribute__((unused)) static void OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(OrgJunitExperimentalResultsResultMatchers_3 *self, NSString *capture$0);

__attribute__((unused)) static OrgJunitExperimentalResultsResultMatchers_3 *new_OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalResultsResultMatchers_3 *create_OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(NSString *capture$0);

@implementation OrgJunitExperimentalResultsResultMatchers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitExperimentalResultsResultMatchers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<OrgHamcrestMatcher>)isSuccessful {
  return OrgJunitExperimentalResultsResultMatchers_isSuccessful();
}

+ (id<OrgHamcrestMatcher>)failureCountIsWithInt:(jint)count {
  return OrgJunitExperimentalResultsResultMatchers_failureCountIsWithInt_(count);
}

+ (id<OrgHamcrestMatcher>)hasSingleFailureContainingWithNSString:(NSString *)string {
  return OrgJunitExperimentalResultsResultMatchers_hasSingleFailureContainingWithNSString_(string);
}

+ (id<OrgHamcrestMatcher>)hasFailureContainingWithNSString:(NSString *)string {
  return OrgJunitExperimentalResultsResultMatchers_hasFailureContainingWithNSString_(string);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 4, 5, -1, 6, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 7, 5, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isSuccessful);
  methods[2].selector = @selector(failureCountIsWithInt:);
  methods[3].selector = @selector(hasSingleFailureContainingWithNSString:);
  methods[4].selector = @selector(hasFailureContainingWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Lorg/hamcrest/Matcher<Lorg/junit/experimental/results/PrintableResult;>;", "failureCountIs", "I", "(I)Lorg/hamcrest/Matcher<Lorg/junit/experimental/results/PrintableResult;>;", "hasSingleFailureContaining", "LNSString;", "(Ljava/lang/String;)Lorg/hamcrest/Matcher<Ljava/lang/Object;>;", "hasFailureContaining", "(Ljava/lang/String;)Lorg/hamcrest/Matcher<Lorg/junit/experimental/results/PrintableResult;>;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalResultsResultMatchers = { "ResultMatchers", "org.junit.experimental.results", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalResultsResultMatchers;
}

@end

void OrgJunitExperimentalResultsResultMatchers_init(OrgJunitExperimentalResultsResultMatchers *self) {
  NSObject_init(self);
}

OrgJunitExperimentalResultsResultMatchers *new_OrgJunitExperimentalResultsResultMatchers_init() {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalResultsResultMatchers, init)
}

OrgJunitExperimentalResultsResultMatchers *create_OrgJunitExperimentalResultsResultMatchers_init() {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalResultsResultMatchers, init)
}

id<OrgHamcrestMatcher> OrgJunitExperimentalResultsResultMatchers_isSuccessful() {
  OrgJunitExperimentalResultsResultMatchers_initialize();
  return OrgJunitExperimentalResultsResultMatchers_failureCountIsWithInt_(0);
}

id<OrgHamcrestMatcher> OrgJunitExperimentalResultsResultMatchers_failureCountIsWithInt_(jint count) {
  OrgJunitExperimentalResultsResultMatchers_initialize();
  return create_OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(count);
}

id<OrgHamcrestMatcher> OrgJunitExperimentalResultsResultMatchers_hasSingleFailureContainingWithNSString_(NSString *string) {
  OrgJunitExperimentalResultsResultMatchers_initialize();
  return create_OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(string);
}

id<OrgHamcrestMatcher> OrgJunitExperimentalResultsResultMatchers_hasFailureContainingWithNSString_(NSString *string) {
  OrgJunitExperimentalResultsResultMatchers_initialize();
  return create_OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(string);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalResultsResultMatchers)

@implementation OrgJunitExperimentalResultsResultMatchers_1

- (instancetype)initWithInt:(jint)capture$0 {
  OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(self, capture$0);
  return self;
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:JreStrcat("$I$", @"has ", val$count_, @" failures")];
}

- (jboolean)matchesSafelyWithId:(OrgJunitExperimentalResultsPrintableResult *)item {
  return [((OrgJunitExperimentalResultsPrintableResult *) nil_chk(item)) failureCount] == val$count_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(describeToWithOrgHamcrestDescription:);
  methods[2].selector = @selector(matchesSafelyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$count_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "describeTo", "LOrgHamcrestDescription;", "matchesSafely", "LOrgJunitExperimentalResultsPrintableResult;", "LOrgJunitExperimentalResultsResultMatchers;", "failureCountIsWithInt:", "Lorg/hamcrest/TypeSafeMatcher<Lorg/junit/experimental/results/PrintableResult;>;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalResultsResultMatchers_1 = { "", "org.junit.experimental.results", ptrTable, methods, fields, 7, 0x8018, 3, 1, 4, -1, 5, 6, -1 };
  return &_OrgJunitExperimentalResultsResultMatchers_1;
}

@end

void OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(OrgJunitExperimentalResultsResultMatchers_1 *self, jint capture$0) {
  self->val$count_ = capture$0;
  OrgHamcrestTypeSafeMatcher_init(self);
}

OrgJunitExperimentalResultsResultMatchers_1 *new_OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(jint capture$0) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalResultsResultMatchers_1, initWithInt_, capture$0)
}

OrgJunitExperimentalResultsResultMatchers_1 *create_OrgJunitExperimentalResultsResultMatchers_1_initWithInt_(jint capture$0) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalResultsResultMatchers_1, initWithInt_, capture$0)
}

@implementation OrgJunitExperimentalResultsResultMatchers_2

- (instancetype)initWithNSString:(NSString *)capture$0 {
  OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(self, capture$0);
  return self;
}

- (jboolean)matchesWithId:(id)item {
  return [((NSString *) nil_chk([nil_chk(item) description])) java_contains:val$string_] && [((id<OrgHamcrestMatcher>) nil_chk(OrgJunitExperimentalResultsResultMatchers_failureCountIsWithInt_(1))) matchesWithId:item];
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:JreStrcat("$$", @"has single failure containing ", val$string_)];
}

- (void)dealloc {
  RELEASE_(val$string_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(matchesWithId:);
  methods[2].selector = @selector(describeToWithOrgHamcrestDescription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$string_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "matches", "LNSObject;", "describeTo", "LOrgHamcrestDescription;", "LOrgJunitExperimentalResultsResultMatchers;", "hasSingleFailureContainingWithNSString:", "Lorg/hamcrest/BaseMatcher<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalResultsResultMatchers_2 = { "", "org.junit.experimental.results", ptrTable, methods, fields, 7, 0x8018, 3, 1, 4, -1, 5, 6, -1 };
  return &_OrgJunitExperimentalResultsResultMatchers_2;
}

@end

void OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(OrgJunitExperimentalResultsResultMatchers_2 *self, NSString *capture$0) {
  JreStrongAssign(&self->val$string_, capture$0);
  OrgHamcrestBaseMatcher_init(self);
}

OrgJunitExperimentalResultsResultMatchers_2 *new_OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalResultsResultMatchers_2, initWithNSString_, capture$0)
}

OrgJunitExperimentalResultsResultMatchers_2 *create_OrgJunitExperimentalResultsResultMatchers_2_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalResultsResultMatchers_2, initWithNSString_, capture$0)
}

@implementation OrgJunitExperimentalResultsResultMatchers_3

- (instancetype)initWithNSString:(NSString *)capture$0 {
  OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(self, capture$0);
  return self;
}

- (jboolean)matchesWithId:(id)item {
  return [((NSString *) nil_chk([nil_chk(item) description])) java_contains:val$string_];
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:JreStrcat("$$", @"has failure containing ", val$string_)];
}

- (void)dealloc {
  RELEASE_(val$string_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(matchesWithId:);
  methods[2].selector = @selector(describeToWithOrgHamcrestDescription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$string_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "matches", "LNSObject;", "describeTo", "LOrgHamcrestDescription;", "LOrgJunitExperimentalResultsResultMatchers;", "hasFailureContainingWithNSString:", "Lorg/hamcrest/BaseMatcher<Lorg/junit/experimental/results/PrintableResult;>;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalResultsResultMatchers_3 = { "", "org.junit.experimental.results", ptrTable, methods, fields, 7, 0x8018, 3, 1, 4, -1, 5, 6, -1 };
  return &_OrgJunitExperimentalResultsResultMatchers_3;
}

@end

void OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(OrgJunitExperimentalResultsResultMatchers_3 *self, NSString *capture$0) {
  JreStrongAssign(&self->val$string_, capture$0);
  OrgHamcrestBaseMatcher_init(self);
}

OrgJunitExperimentalResultsResultMatchers_3 *new_OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalResultsResultMatchers_3, initWithNSString_, capture$0)
}

OrgJunitExperimentalResultsResultMatchers_3 *create_OrgJunitExperimentalResultsResultMatchers_3_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalResultsResultMatchers_3, initWithNSString_, capture$0)
}
