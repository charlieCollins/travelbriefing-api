//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/max/CouldNotReadCoreException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitExperimentalMaxCouldNotReadCoreException")
#ifdef RESTRICT_OrgJunitExperimentalMaxCouldNotReadCoreException
#define INCLUDE_ALL_OrgJunitExperimentalMaxCouldNotReadCoreException 0
#else
#define INCLUDE_ALL_OrgJunitExperimentalMaxCouldNotReadCoreException 1
#endif
#undef RESTRICT_OrgJunitExperimentalMaxCouldNotReadCoreException

#if !defined (OrgJunitExperimentalMaxCouldNotReadCoreException_) && (INCLUDE_ALL_OrgJunitExperimentalMaxCouldNotReadCoreException || defined(INCLUDE_OrgJunitExperimentalMaxCouldNotReadCoreException))
#define OrgJunitExperimentalMaxCouldNotReadCoreException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@interface OrgJunitExperimentalMaxCouldNotReadCoreException : JavaLangException

#pragma mark Public

- (instancetype)initWithNSException:(NSException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalMaxCouldNotReadCoreException)

FOUNDATION_EXPORT void OrgJunitExperimentalMaxCouldNotReadCoreException_initWithNSException_(OrgJunitExperimentalMaxCouldNotReadCoreException *self, NSException *e);

FOUNDATION_EXPORT OrgJunitExperimentalMaxCouldNotReadCoreException *new_OrgJunitExperimentalMaxCouldNotReadCoreException_initWithNSException_(NSException *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitExperimentalMaxCouldNotReadCoreException *create_OrgJunitExperimentalMaxCouldNotReadCoreException_initWithNSException_(NSException *e);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalMaxCouldNotReadCoreException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitExperimentalMaxCouldNotReadCoreException")
