//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/runner/manipulation/Filter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/manipulation/Filter.h"
#include "org/junit/runner/manipulation/Filterable.h"

@interface OrgJunitRunnerManipulationFilter_1 : OrgJunitRunnerManipulationFilter

- (instancetype)init;

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (NSString *)describe;

- (void)applyWithId:(id)child;

- (OrgJunitRunnerManipulationFilter *)intersectWithOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)second;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerManipulationFilter_1)

__attribute__((unused)) static void OrgJunitRunnerManipulationFilter_1_init(OrgJunitRunnerManipulationFilter_1 *self);

__attribute__((unused)) static OrgJunitRunnerManipulationFilter_1 *new_OrgJunitRunnerManipulationFilter_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRunnerManipulationFilter_1 *create_OrgJunitRunnerManipulationFilter_1_init();

@interface OrgJunitRunnerManipulationFilter_2 : OrgJunitRunnerManipulationFilter {
 @public
  OrgJunitRunnerDescription *val$desiredDescription_;
}

- (instancetype)initWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)capture$0;

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (NSString *)describe;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerManipulationFilter_2)

__attribute__((unused)) static void OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(OrgJunitRunnerManipulationFilter_2 *self, OrgJunitRunnerDescription *capture$0);

__attribute__((unused)) static OrgJunitRunnerManipulationFilter_2 *new_OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRunnerManipulationFilter_2 *create_OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *capture$0);

@interface OrgJunitRunnerManipulationFilter_3 : OrgJunitRunnerManipulationFilter {
 @public
  OrgJunitRunnerManipulationFilter *val$first_;
  OrgJunitRunnerManipulationFilter *val$second_;
}

- (instancetype)initWithOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)capture$0
                    withOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)capture$1;

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (NSString *)describe;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerManipulationFilter_3)

__attribute__((unused)) static void OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerManipulationFilter_3 *self, OrgJunitRunnerManipulationFilter *capture$0, OrgJunitRunnerManipulationFilter *capture$1);

__attribute__((unused)) static OrgJunitRunnerManipulationFilter_3 *new_OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerManipulationFilter *capture$0, OrgJunitRunnerManipulationFilter *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRunnerManipulationFilter_3 *create_OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerManipulationFilter *capture$0, OrgJunitRunnerManipulationFilter *capture$1);

J2OBJC_INITIALIZED_DEFN(OrgJunitRunnerManipulationFilter)

OrgJunitRunnerManipulationFilter *OrgJunitRunnerManipulationFilter_ALL;

@implementation OrgJunitRunnerManipulationFilter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitRunnerManipulationFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgJunitRunnerManipulationFilter *)matchMethodDescriptionWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)desiredDescription {
  return OrgJunitRunnerManipulationFilter_matchMethodDescriptionWithOrgJunitRunnerDescription_(desiredDescription);
}

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)describe {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)applyWithId:(id)child {
  if (!([OrgJunitRunnerManipulationFilterable_class_() isInstance:child])) {
    return;
  }
  id<OrgJunitRunnerManipulationFilterable> filterable = (id<OrgJunitRunnerManipulationFilterable>) cast_check(child, OrgJunitRunnerManipulationFilterable_class_());
  [((id<OrgJunitRunnerManipulationFilterable>) nil_chk(filterable)) filterWithOrgJunitRunnerManipulationFilter:self];
}

- (OrgJunitRunnerManipulationFilter *)intersectWithOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)second {
  if (second == self || second == OrgJunitRunnerManipulationFilter_ALL) {
    return self;
  }
  OrgJunitRunnerManipulationFilter *first = self;
  return create_OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(first, second);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(matchMethodDescriptionWithOrgJunitRunnerDescription:);
  methods[2].selector = @selector(shouldRunWithOrgJunitRunnerDescription:);
  methods[3].selector = @selector(describe);
  methods[4].selector = @selector(applyWithId:);
  methods[5].selector = @selector(intersectWithOrgJunitRunnerManipulationFilter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ALL", "LOrgJunitRunnerManipulationFilter;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "matchMethodDescription", "LOrgJunitRunnerDescription;", "shouldRun", "apply", "LNSObject;", "LOrgJunitRunnerManipulationNoTestsRemainException;", "intersect", "LOrgJunitRunnerManipulationFilter;", &OrgJunitRunnerManipulationFilter_ALL };
  static const J2ObjcClassInfo _OrgJunitRunnerManipulationFilter = { "Filter", "org.junit.runner.manipulation", ptrTable, methods, fields, 7, 0x401, 6, 1, -1, -1, -1, -1, -1 };
  return &_OrgJunitRunnerManipulationFilter;
}

+ (void)initialize {
  if (self == [OrgJunitRunnerManipulationFilter class]) {
    JreStrongAssignAndConsume(&OrgJunitRunnerManipulationFilter_ALL, new_OrgJunitRunnerManipulationFilter_1_init());
    J2OBJC_SET_INITIALIZED(OrgJunitRunnerManipulationFilter)
  }
}

@end

void OrgJunitRunnerManipulationFilter_init(OrgJunitRunnerManipulationFilter *self) {
  NSObject_init(self);
}

OrgJunitRunnerManipulationFilter *OrgJunitRunnerManipulationFilter_matchMethodDescriptionWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *desiredDescription) {
  OrgJunitRunnerManipulationFilter_initialize();
  return create_OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(desiredDescription);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRunnerManipulationFilter)

@implementation OrgJunitRunnerManipulationFilter_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitRunnerManipulationFilter_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return true;
}

- (NSString *)describe {
  return @"all tests";
}

- (void)applyWithId:(id)child {
}

- (OrgJunitRunnerManipulationFilter *)intersectWithOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)second {
  return second;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(shouldRunWithOrgJunitRunnerDescription:);
  methods[2].selector = @selector(describe);
  methods[3].selector = @selector(applyWithId:);
  methods[4].selector = @selector(intersectWithOrgJunitRunnerManipulationFilter:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "shouldRun", "LOrgJunitRunnerDescription;", "apply", "LNSObject;", "LOrgJunitRunnerManipulationNoTestsRemainException;", "intersect", "LOrgJunitRunnerManipulationFilter;" };
  static const J2ObjcClassInfo _OrgJunitRunnerManipulationFilter_1 = { "", "org.junit.runner.manipulation", ptrTable, methods, NULL, 7, 0x8018, 5, 0, 6, -1, -1, -1, -1 };
  return &_OrgJunitRunnerManipulationFilter_1;
}

@end

void OrgJunitRunnerManipulationFilter_1_init(OrgJunitRunnerManipulationFilter_1 *self) {
  OrgJunitRunnerManipulationFilter_init(self);
}

OrgJunitRunnerManipulationFilter_1 *new_OrgJunitRunnerManipulationFilter_1_init() {
  J2OBJC_NEW_IMPL(OrgJunitRunnerManipulationFilter_1, init)
}

OrgJunitRunnerManipulationFilter_1 *create_OrgJunitRunnerManipulationFilter_1_init() {
  J2OBJC_CREATE_IMPL(OrgJunitRunnerManipulationFilter_1, init)
}

@implementation OrgJunitRunnerManipulationFilter_2

- (instancetype)initWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)capture$0 {
  OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(self, capture$0);
  return self;
}

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  if ([((OrgJunitRunnerDescription *) nil_chk(description_)) isTest]) {
    return [((OrgJunitRunnerDescription *) nil_chk(val$desiredDescription_)) isEqual:description_];
  }
  for (OrgJunitRunnerDescription * __strong each in nil_chk([description_ getChildren])) {
    if ([self shouldRunWithOrgJunitRunnerDescription:each]) {
      return true;
    }
  }
  return false;
}

- (NSString *)describe {
  return NSString_java_formatWithNSString_withNSObjectArray_(@"Method %s", [IOSObjectArray arrayWithObjects:(id[]){ [((OrgJunitRunnerDescription *) nil_chk(val$desiredDescription_)) getDisplayName] } count:1 type:NSObject_class_()]);
}

- (void)dealloc {
  RELEASE_(val$desiredDescription_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnerDescription:);
  methods[1].selector = @selector(shouldRunWithOrgJunitRunnerDescription:);
  methods[2].selector = @selector(describe);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$desiredDescription_", "LOrgJunitRunnerDescription;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "shouldRun", "LOrgJunitRunnerDescription;", "LOrgJunitRunnerManipulationFilter;", "matchMethodDescriptionWithOrgJunitRunnerDescription:" };
  static const J2ObjcClassInfo _OrgJunitRunnerManipulationFilter_2 = { "", "org.junit.runner.manipulation", ptrTable, methods, fields, 7, 0x8018, 3, 1, 2, -1, 3, -1, -1 };
  return &_OrgJunitRunnerManipulationFilter_2;
}

@end

void OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(OrgJunitRunnerManipulationFilter_2 *self, OrgJunitRunnerDescription *capture$0) {
  JreStrongAssign(&self->val$desiredDescription_, capture$0);
  OrgJunitRunnerManipulationFilter_init(self);
}

OrgJunitRunnerManipulationFilter_2 *new_OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *capture$0) {
  J2OBJC_NEW_IMPL(OrgJunitRunnerManipulationFilter_2, initWithOrgJunitRunnerDescription_, capture$0)
}

OrgJunitRunnerManipulationFilter_2 *create_OrgJunitRunnerManipulationFilter_2_initWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *capture$0) {
  J2OBJC_CREATE_IMPL(OrgJunitRunnerManipulationFilter_2, initWithOrgJunitRunnerDescription_, capture$0)
}

@implementation OrgJunitRunnerManipulationFilter_3

- (instancetype)initWithOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)capture$0
                    withOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)capture$1 {
  OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(self, capture$0, capture$1);
  return self;
}

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return [((OrgJunitRunnerManipulationFilter *) nil_chk(val$first_)) shouldRunWithOrgJunitRunnerDescription:description_] && [((OrgJunitRunnerManipulationFilter *) nil_chk(val$second_)) shouldRunWithOrgJunitRunnerDescription:description_];
}

- (NSString *)describe {
  return JreStrcat("$$$", [((OrgJunitRunnerManipulationFilter *) nil_chk(val$first_)) describe], @" and ", [((OrgJunitRunnerManipulationFilter *) nil_chk(val$second_)) describe]);
}

- (void)dealloc {
  RELEASE_(val$first_);
  RELEASE_(val$second_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnerManipulationFilter:withOrgJunitRunnerManipulationFilter:);
  methods[1].selector = @selector(shouldRunWithOrgJunitRunnerDescription:);
  methods[2].selector = @selector(describe);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$first_", "LOrgJunitRunnerManipulationFilter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$second_", "LOrgJunitRunnerManipulationFilter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "shouldRun", "LOrgJunitRunnerDescription;", "LOrgJunitRunnerManipulationFilter;", "intersectWithOrgJunitRunnerManipulationFilter:" };
  static const J2ObjcClassInfo _OrgJunitRunnerManipulationFilter_3 = { "", "org.junit.runner.manipulation", ptrTable, methods, fields, 7, 0x8018, 3, 2, 2, -1, 3, -1, -1 };
  return &_OrgJunitRunnerManipulationFilter_3;
}

@end

void OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerManipulationFilter_3 *self, OrgJunitRunnerManipulationFilter *capture$0, OrgJunitRunnerManipulationFilter *capture$1) {
  JreStrongAssign(&self->val$first_, capture$0);
  JreStrongAssign(&self->val$second_, capture$1);
  OrgJunitRunnerManipulationFilter_init(self);
}

OrgJunitRunnerManipulationFilter_3 *new_OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerManipulationFilter *capture$0, OrgJunitRunnerManipulationFilter *capture$1) {
  J2OBJC_NEW_IMPL(OrgJunitRunnerManipulationFilter_3, initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_, capture$0, capture$1)
}

OrgJunitRunnerManipulationFilter_3 *create_OrgJunitRunnerManipulationFilter_3_initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerManipulationFilter *capture$0, OrgJunitRunnerManipulationFilter *capture$1) {
  J2OBJC_CREATE_IMPL(OrgJunitRunnerManipulationFilter_3, initWithOrgJunitRunnerManipulationFilter_withOrgJunitRunnerManipulationFilter_, capture$0, capture$1)
}
