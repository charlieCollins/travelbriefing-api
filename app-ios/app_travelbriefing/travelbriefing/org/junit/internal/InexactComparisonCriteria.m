//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/InexactComparisonCriteria.java
//

#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "org/junit/Assert.h"
#include "org/junit/internal/ComparisonCriteria.h"
#include "org/junit/internal/InexactComparisonCriteria.h"

@implementation OrgJunitInternalInexactComparisonCriteria

- (instancetype)initWithDouble:(jdouble)delta {
  OrgJunitInternalInexactComparisonCriteria_initWithDouble_(self, delta);
  return self;
}

- (instancetype)initWithFloat:(jfloat)delta {
  OrgJunitInternalInexactComparisonCriteria_initWithFloat_(self, delta);
  return self;
}

- (void)assertElementsEqualWithId:(id)expected
                           withId:(id)actual {
  if ([expected isKindOfClass:[JavaLangDouble class]]) {
    OrgJunitAssert_assertEqualsWithDouble_withDouble_withDouble_([((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(expected, [JavaLangDouble class]))) doubleValue], [((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(actual, [JavaLangDouble class]))) doubleValue], [((JavaLangDouble *) nil_chk((JavaLangDouble *) cast_chk(fDelta_, [JavaLangDouble class]))) doubleValue]);
  }
  else {
    OrgJunitAssert_assertEqualsWithFloat_withFloat_withFloat_([((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(expected, [JavaLangFloat class]))) floatValue], [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(actual, [JavaLangFloat class]))) floatValue], [((JavaLangFloat *) nil_chk((JavaLangFloat *) cast_chk(fDelta_, [JavaLangFloat class]))) floatValue]);
  }
}

- (void)dealloc {
  RELEASE_(fDelta_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDouble:);
  methods[1].selector = @selector(initWithFloat:);
  methods[2].selector = @selector(assertElementsEqualWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fDelta_", "LNSObject;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "D", "F", "assertElementsEqual", "LNSObject;LNSObject;" };
  static const J2ObjcClassInfo _OrgJunitInternalInexactComparisonCriteria = { "InexactComparisonCriteria", "org.junit.internal", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalInexactComparisonCriteria;
}

@end

void OrgJunitInternalInexactComparisonCriteria_initWithDouble_(OrgJunitInternalInexactComparisonCriteria *self, jdouble delta) {
  OrgJunitInternalComparisonCriteria_init(self);
  JreStrongAssign(&self->fDelta_, JavaLangDouble_valueOfWithDouble_(delta));
}

OrgJunitInternalInexactComparisonCriteria *new_OrgJunitInternalInexactComparisonCriteria_initWithDouble_(jdouble delta) {
  J2OBJC_NEW_IMPL(OrgJunitInternalInexactComparisonCriteria, initWithDouble_, delta)
}

OrgJunitInternalInexactComparisonCriteria *create_OrgJunitInternalInexactComparisonCriteria_initWithDouble_(jdouble delta) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalInexactComparisonCriteria, initWithDouble_, delta)
}

void OrgJunitInternalInexactComparisonCriteria_initWithFloat_(OrgJunitInternalInexactComparisonCriteria *self, jfloat delta) {
  OrgJunitInternalComparisonCriteria_init(self);
  JreStrongAssign(&self->fDelta_, JavaLangFloat_valueOfWithFloat_(delta));
}

OrgJunitInternalInexactComparisonCriteria *new_OrgJunitInternalInexactComparisonCriteria_initWithFloat_(jfloat delta) {
  J2OBJC_NEW_IMPL(OrgJunitInternalInexactComparisonCriteria, initWithFloat_, delta)
}

OrgJunitInternalInexactComparisonCriteria *create_OrgJunitInternalInexactComparisonCriteria_initWithFloat_(jfloat delta) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalInexactComparisonCriteria, initWithFloat_, delta)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalInexactComparisonCriteria)
