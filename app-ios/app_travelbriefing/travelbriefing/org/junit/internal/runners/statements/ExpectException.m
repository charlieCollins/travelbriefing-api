//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/runners/statements/ExpectException.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Exception.h"
#include "org/junit/internal/AssumptionViolatedException.h"
#include "org/junit/internal/runners/statements/ExpectException.h"
#include "org/junit/runners/model/Statement.h"

@interface OrgJunitInternalRunnersStatementsExpectException () {
 @public
  OrgJunitRunnersModelStatement *next_;
  IOSClass *expected_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsExpectException, next_, OrgJunitRunnersModelStatement *)
J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsExpectException, expected_, IOSClass *)

@implementation OrgJunitInternalRunnersStatementsExpectException

- (instancetype)initWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)next
                                         withIOSClass:(IOSClass *)expected {
  OrgJunitInternalRunnersStatementsExpectException_initWithOrgJunitRunnersModelStatement_withIOSClass_(self, next, expected);
  return self;
}

- (void)evaluate {
  jboolean complete = false;
  @try {
    [((OrgJunitRunnersModelStatement *) nil_chk(next_)) evaluate];
    complete = true;
  }
  @catch (OrgJunitInternalAssumptionViolatedException *e) {
    @throw e;
  }
  @catch (NSException *e) {
    if (![((IOSClass *) nil_chk(expected_)) isAssignableFrom:[((NSException *) nil_chk(e)) java_getClass]]) {
      NSString *message = JreStrcat("$$$$C", @"Unexpected exception, expected<", [expected_ getName], @"> but was<", [[e java_getClass] getName], '>');
      @throw create_JavaLangException_initWithNSString_withNSException_(message, e);
    }
  }
  if (complete) {
    @throw create_JavaLangAssertionError_initWithId_(JreStrcat("$$", @"Expected exception: ", [((IOSClass *) nil_chk(expected_)) getName]));
  }
}

- (void)dealloc {
  RELEASE_(next_);
  RELEASE_(expected_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnersModelStatement:withIOSClass:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "next_", "LOrgJunitRunnersModelStatement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "expected_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitRunnersModelStatement;LIOSClass;", "(Lorg/junit/runners/model/Statement;Ljava/lang/Class<+Ljava/lang/Throwable;>;)V", "LJavaLangException;", "Ljava/lang/Class<+Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersStatementsExpectException = { "ExpectException", "org.junit.internal.runners.statements", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalRunnersStatementsExpectException;
}

@end

void OrgJunitInternalRunnersStatementsExpectException_initWithOrgJunitRunnersModelStatement_withIOSClass_(OrgJunitInternalRunnersStatementsExpectException *self, OrgJunitRunnersModelStatement *next, IOSClass *expected) {
  OrgJunitRunnersModelStatement_init(self);
  JreStrongAssign(&self->next_, next);
  JreStrongAssign(&self->expected_, expected);
}

OrgJunitInternalRunnersStatementsExpectException *new_OrgJunitInternalRunnersStatementsExpectException_initWithOrgJunitRunnersModelStatement_withIOSClass_(OrgJunitRunnersModelStatement *next, IOSClass *expected) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersStatementsExpectException, initWithOrgJunitRunnersModelStatement_withIOSClass_, next, expected)
}

OrgJunitInternalRunnersStatementsExpectException *create_OrgJunitInternalRunnersStatementsExpectException_initWithOrgJunitRunnersModelStatement_withIOSClass_(OrgJunitRunnersModelStatement *next, IOSClass *expected) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersStatementsExpectException, initWithOrgJunitRunnersModelStatement_withIOSClass_, next, expected)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersStatementsExpectException)
