//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/runners/statements/InvokeMethod.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/junit/internal/runners/statements/InvokeMethod.h"
#include "org/junit/runners/model/FrameworkMethod.h"
#include "org/junit/runners/model/Statement.h"

@interface OrgJunitInternalRunnersStatementsInvokeMethod () {
 @public
  OrgJunitRunnersModelFrameworkMethod *testMethod_;
  id target_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsInvokeMethod, testMethod_, OrgJunitRunnersModelFrameworkMethod *)
J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsInvokeMethod, target_, id)

@implementation OrgJunitInternalRunnersStatementsInvokeMethod

- (instancetype)initWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)testMethod
                                                     withId:(id)target {
  OrgJunitInternalRunnersStatementsInvokeMethod_initWithOrgJunitRunnersModelFrameworkMethod_withId_(self, testMethod, target);
  return self;
}

- (void)evaluate {
  [((OrgJunitRunnersModelFrameworkMethod *) nil_chk(testMethod_)) invokeExplosivelyWithId:target_ withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
}

- (void)dealloc {
  RELEASE_(testMethod_);
  RELEASE_(target_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnersModelFrameworkMethod:withId:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "testMethod_", "LOrgJunitRunnersModelFrameworkMethod;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "target_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitRunnersModelFrameworkMethod;LNSObject;", "LNSException;" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersStatementsInvokeMethod = { "InvokeMethod", "org.junit.internal.runners.statements", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalRunnersStatementsInvokeMethod;
}

@end

void OrgJunitInternalRunnersStatementsInvokeMethod_initWithOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitInternalRunnersStatementsInvokeMethod *self, OrgJunitRunnersModelFrameworkMethod *testMethod, id target) {
  OrgJunitRunnersModelStatement_init(self);
  JreStrongAssign(&self->testMethod_, testMethod);
  JreStrongAssign(&self->target_, target);
}

OrgJunitInternalRunnersStatementsInvokeMethod *new_OrgJunitInternalRunnersStatementsInvokeMethod_initWithOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitRunnersModelFrameworkMethod *testMethod, id target) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersStatementsInvokeMethod, initWithOrgJunitRunnersModelFrameworkMethod_withId_, testMethod, target)
}

OrgJunitInternalRunnersStatementsInvokeMethod *create_OrgJunitInternalRunnersStatementsInvokeMethod_initWithOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitRunnersModelFrameworkMethod *testMethod, id target) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersStatementsInvokeMethod, initWithOrgJunitRunnersModelFrameworkMethod_withId_, testMethod, target)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersStatementsInvokeMethod)
