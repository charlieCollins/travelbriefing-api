//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/cache2/FileOperator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalCache2FileOperator")
#ifdef RESTRICT_Okhttp3InternalCache2FileOperator
#define INCLUDE_ALL_Okhttp3InternalCache2FileOperator 0
#else
#define INCLUDE_ALL_Okhttp3InternalCache2FileOperator 1
#endif
#undef RESTRICT_Okhttp3InternalCache2FileOperator

#if !defined (Okhttp3InternalCache2FileOperator_) && (INCLUDE_ALL_Okhttp3InternalCache2FileOperator || defined(INCLUDE_Okhttp3InternalCache2FileOperator))
#define Okhttp3InternalCache2FileOperator_

@class JavaNioChannelsFileChannel;
@class OkioBuffer;

@interface Okhttp3InternalCache2FileOperator : NSObject

#pragma mark Public

- (instancetype)initWithJavaNioChannelsFileChannel:(JavaNioChannelsFileChannel *)fileChannel;

- (void)readWithLong:(jlong)pos
      withOkioBuffer:(OkioBuffer *)sink
            withLong:(jlong)byteCount;

- (void)writeWithLong:(jlong)pos
       withOkioBuffer:(OkioBuffer *)source
             withLong:(jlong)byteCount;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalCache2FileOperator)

FOUNDATION_EXPORT void Okhttp3InternalCache2FileOperator_initWithJavaNioChannelsFileChannel_(Okhttp3InternalCache2FileOperator *self, JavaNioChannelsFileChannel *fileChannel);

FOUNDATION_EXPORT Okhttp3InternalCache2FileOperator *new_Okhttp3InternalCache2FileOperator_initWithJavaNioChannelsFileChannel_(JavaNioChannelsFileChannel *fileChannel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalCache2FileOperator *create_Okhttp3InternalCache2FileOperator_initWithJavaNioChannelsFileChannel_(JavaNioChannelsFileChannel *fileChannel);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalCache2FileOperator)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalCache2FileOperator")
