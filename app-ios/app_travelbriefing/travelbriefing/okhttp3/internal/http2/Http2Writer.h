//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/http2/Http2Writer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttp2Http2Writer")
#ifdef RESTRICT_Okhttp3InternalHttp2Http2Writer
#define INCLUDE_ALL_Okhttp3InternalHttp2Http2Writer 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttp2Http2Writer 1
#endif
#undef RESTRICT_Okhttp3InternalHttp2Http2Writer

#if !defined (Okhttp3InternalHttp2Http2Writer_) && (INCLUDE_ALL_Okhttp3InternalHttp2Http2Writer || defined(INCLUDE_Okhttp3InternalHttp2Http2Writer))
#define Okhttp3InternalHttp2Http2Writer_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class IOSByteArray;
@class Okhttp3InternalHttp2ErrorCode;
@class Okhttp3InternalHttp2Hpack_Writer;
@class Okhttp3InternalHttp2Settings;
@class OkioBuffer;
@protocol JavaUtilList;
@protocol OkioBufferedSink;

@interface Okhttp3InternalHttp2Http2Writer : NSObject < JavaIoCloseable > {
 @public
  Okhttp3InternalHttp2Hpack_Writer *hpackWriter_;
}

#pragma mark Public

- (instancetype)initWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                             withBoolean:(jboolean)client;

- (void)applyAndAckSettingsWithOkhttp3InternalHttp2Settings:(Okhttp3InternalHttp2Settings *)peerSettings;

- (void)close;

- (void)connectionPreface;

- (void)dataWithBoolean:(jboolean)outFinished
                withInt:(jint)streamId
         withOkioBuffer:(OkioBuffer *)source
                withInt:(jint)byteCount;

- (void)flush;

- (void)frameHeaderWithInt:(jint)streamId
                   withInt:(jint)length
                  withByte:(jbyte)type
                  withByte:(jbyte)flags;

- (void)goAwayWithInt:(jint)lastGoodStreamId
withOkhttp3InternalHttp2ErrorCode:(Okhttp3InternalHttp2ErrorCode *)errorCode
        withByteArray:(IOSByteArray *)debugData;

- (void)headersWithInt:(jint)streamId
      withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (jint)maxDataLength;

- (void)pingWithBoolean:(jboolean)ack
                withInt:(jint)payload1
                withInt:(jint)payload2;

- (void)pushPromiseWithInt:(jint)streamId
                   withInt:(jint)promisedStreamId
          withJavaUtilList:(id<JavaUtilList>)requestHeaders;

- (void)rstStreamWithInt:(jint)streamId
withOkhttp3InternalHttp2ErrorCode:(Okhttp3InternalHttp2ErrorCode *)errorCode;

- (void)settingsWithOkhttp3InternalHttp2Settings:(Okhttp3InternalHttp2Settings *)settings;

- (void)synReplyWithBoolean:(jboolean)outFinished
                    withInt:(jint)streamId
           withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (void)synStreamWithBoolean:(jboolean)outFinished
                     withInt:(jint)streamId
                     withInt:(jint)associatedStreamId
            withJavaUtilList:(id<JavaUtilList>)headerBlock;

- (void)windowUpdateWithInt:(jint)streamId
                   withLong:(jlong)windowSizeIncrement;

#pragma mark Package-Private

- (void)dataFrameWithInt:(jint)streamId
                withByte:(jbyte)flags
          withOkioBuffer:(OkioBuffer *)buffer
                 withInt:(jint)byteCount;

- (void)headersWithBoolean:(jboolean)outFinished
                   withInt:(jint)streamId
          withJavaUtilList:(id<JavaUtilList>)headerBlock;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalHttp2Http2Writer)

J2OBJC_FIELD_SETTER(Okhttp3InternalHttp2Http2Writer, hpackWriter_, Okhttp3InternalHttp2Hpack_Writer *)

FOUNDATION_EXPORT void Okhttp3InternalHttp2Http2Writer_initWithOkioBufferedSink_withBoolean_(Okhttp3InternalHttp2Http2Writer *self, id<OkioBufferedSink> sink, jboolean client);

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Writer *new_Okhttp3InternalHttp2Http2Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Writer *create_Okhttp3InternalHttp2Http2Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp2Http2Writer)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttp2Http2Writer")
