//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okio/HashingSink.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OkioHashingSink")
#ifdef RESTRICT_OkioHashingSink
#define INCLUDE_ALL_OkioHashingSink 0
#else
#define INCLUDE_ALL_OkioHashingSink 1
#endif
#undef RESTRICT_OkioHashingSink

#if !defined (OkioHashingSink_) && (INCLUDE_ALL_OkioHashingSink || defined(INCLUDE_OkioHashingSink))
#define OkioHashingSink_

#define RESTRICT_OkioForwardingSink 1
#define INCLUDE_OkioForwardingSink 1
#include "okio/ForwardingSink.h"

@class OkioBuffer;
@class OkioByteString;
@protocol OkioSink;

@interface OkioHashingSink : OkioForwardingSink

#pragma mark Public

- (OkioByteString *)hash__;

+ (OkioHashingSink *)hmacSha1WithOkioSink:(id<OkioSink>)sink
                       withOkioByteString:(OkioByteString *)key;

+ (OkioHashingSink *)hmacSha256WithOkioSink:(id<OkioSink>)sink
                         withOkioByteString:(OkioByteString *)key;

+ (OkioHashingSink *)md5WithOkioSink:(id<OkioSink>)sink;

+ (OkioHashingSink *)sha1WithOkioSink:(id<OkioSink>)sink;

+ (OkioHashingSink *)sha256WithOkioSink:(id<OkioSink>)sink;

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount;

@end

J2OBJC_EMPTY_STATIC_INIT(OkioHashingSink)

FOUNDATION_EXPORT OkioHashingSink *OkioHashingSink_md5WithOkioSink_(id<OkioSink> sink);

FOUNDATION_EXPORT OkioHashingSink *OkioHashingSink_sha1WithOkioSink_(id<OkioSink> sink);

FOUNDATION_EXPORT OkioHashingSink *OkioHashingSink_sha256WithOkioSink_(id<OkioSink> sink);

FOUNDATION_EXPORT OkioHashingSink *OkioHashingSink_hmacSha1WithOkioSink_withOkioByteString_(id<OkioSink> sink, OkioByteString *key);

FOUNDATION_EXPORT OkioHashingSink *OkioHashingSink_hmacSha256WithOkioSink_withOkioByteString_(id<OkioSink> sink, OkioByteString *key);

J2OBJC_TYPE_LITERAL_HEADER(OkioHashingSink)

#endif

#pragma pop_macro("INCLUDE_ALL_OkioHashingSink")
