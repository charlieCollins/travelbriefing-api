//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okio/BufferedSource.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OkioBufferedSource")
#ifdef RESTRICT_OkioBufferedSource
#define INCLUDE_ALL_OkioBufferedSource 0
#else
#define INCLUDE_ALL_OkioBufferedSource 1
#endif
#undef RESTRICT_OkioBufferedSource

#if !defined (OkioBufferedSource_) && (INCLUDE_ALL_OkioBufferedSource || defined(INCLUDE_OkioBufferedSource))
#define OkioBufferedSource_

#define RESTRICT_OkioSource 1
#define INCLUDE_OkioSource 1
#include "okio/Source.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaNioCharsetCharset;
@class OkioBuffer;
@class OkioByteString;
@class OkioOptions;
@protocol OkioSink;

@protocol OkioBufferedSource < OkioSource, JavaObject >

- (OkioBuffer *)buffer;

- (jboolean)exhausted;

- (void)requireWithLong:(jlong)byteCount;

- (jboolean)requestWithLong:(jlong)byteCount;

- (jbyte)readByte;

- (jshort)readShort;

- (jshort)readShortLe;

- (jint)readInt;

- (jint)readIntLe;

- (jlong)readLong;

- (jlong)readLongLe;

- (jlong)readDecimalLong;

- (jlong)readHexadecimalUnsignedLong;

- (void)skipWithLong:(jlong)byteCount;

- (OkioByteString *)readByteString;

- (OkioByteString *)readByteStringWithLong:(jlong)byteCount;

- (jint)selectWithOkioOptions:(OkioOptions *)options;

- (IOSByteArray *)readByteArray;

- (IOSByteArray *)readByteArrayWithLong:(jlong)byteCount;

- (jint)readWithByteArray:(IOSByteArray *)sink;

- (void)readFullyWithByteArray:(IOSByteArray *)sink;

- (jint)readWithByteArray:(IOSByteArray *)sink
                  withInt:(jint)offset
                  withInt:(jint)byteCount;

- (void)readFullyWithOkioBuffer:(OkioBuffer *)sink
                       withLong:(jlong)byteCount;

- (jlong)readAllWithOkioSink:(id<OkioSink>)sink;

- (NSString *)readUtf8;

- (NSString *)readUtf8WithLong:(jlong)byteCount;

- (NSString *)readUtf8Line;

- (NSString *)readUtf8LineStrict;

- (jint)readUtf8CodePoint;

- (NSString *)readStringWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (NSString *)readStringWithLong:(jlong)byteCount
       withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (jlong)indexOfWithByte:(jbyte)b;

- (jlong)indexOfWithByte:(jbyte)b
                withLong:(jlong)fromIndex;

- (jlong)indexOfWithOkioByteString:(OkioByteString *)bytes;

- (jlong)indexOfWithOkioByteString:(OkioByteString *)bytes
                          withLong:(jlong)fromIndex;

- (jlong)indexOfElementWithOkioByteString:(OkioByteString *)targetBytes;

- (jlong)indexOfElementWithOkioByteString:(OkioByteString *)targetBytes
                                 withLong:(jlong)fromIndex;

- (jboolean)rangeEqualsWithLong:(jlong)offset
             withOkioByteString:(OkioByteString *)bytes;

- (jboolean)rangeEqualsWithLong:(jlong)offset
             withOkioByteString:(OkioByteString *)bytes
                        withInt:(jint)bytesOffset
                        withInt:(jint)byteCount;

- (JavaIoInputStream *)inputStream;

@end

J2OBJC_EMPTY_STATIC_INIT(OkioBufferedSource)

J2OBJC_TYPE_LITERAL_HEADER(OkioBufferedSource)

#endif

#pragma pop_macro("INCLUDE_ALL_OkioBufferedSource")
