//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/categories/Categories.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "org/junit/experimental/categories/Categories.h"
#include "org/junit/experimental/categories/Category.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/manipulation/Filter.h"
#include "org/junit/runner/manipulation/NoTestsRemainException.h"
#include "org/junit/runners/Suite.h"
#include "org/junit/runners/model/InitializationError.h"
#include "org/junit/runners/model/RunnerBuilder.h"

@interface OrgJunitExperimentalCategoriesCategories ()

+ (id<JavaUtilSet>)getIncludedCategoryWithIOSClass:(IOSClass *)klass;

+ (jboolean)isAnyIncludedWithIOSClass:(IOSClass *)klass;

+ (id<JavaUtilSet>)getExcludedCategoryWithIOSClass:(IOSClass *)klass;

+ (jboolean)isAnyExcludedWithIOSClass:(IOSClass *)klass;

+ (void)assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

+ (void)assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

+ (jboolean)canHaveCategorizedChildrenWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

+ (jboolean)hasAssignableToWithJavaUtilSet:(id<JavaUtilSet>)assigns
                              withIOSClass:(IOSClass *)to;

+ (id<JavaUtilSet>)createSetWithIOSClassArray:(IOSObjectArray *)t;

@end

__attribute__((unused)) static id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_getIncludedCategoryWithIOSClass_(IOSClass *klass);

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_isAnyIncludedWithIOSClass_(IOSClass *klass);

__attribute__((unused)) static id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_getExcludedCategoryWithIOSClass_(IOSClass *klass);

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_isAnyExcludedWithIOSClass_(IOSClass *klass);

__attribute__((unused)) static void OrgJunitExperimentalCategoriesCategories_assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_);

__attribute__((unused)) static void OrgJunitExperimentalCategoriesCategories_assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_);

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_canHaveCategorizedChildrenWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_);

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_hasAssignableToWithJavaUtilSet_withIOSClass_(id<JavaUtilSet> assigns, IOSClass *to);

__attribute__((unused)) static id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_createSetWithIOSClassArray_(IOSObjectArray *t);

__attribute__((unused)) static IOSObjectArray *OrgJunitExperimentalCategoriesCategories_IncludeCategory__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgJunitExperimentalCategoriesCategories_ExcludeCategory__Annotations$0();

@interface OrgJunitExperimentalCategoriesCategories_CategoryFilter () {
 @public
  id<JavaUtilSet> included_;
  id<JavaUtilSet> excluded_;
  jboolean includedAny_;
  jboolean excludedAny_;
}

- (jboolean)hasCorrectCategoryAnnotationWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (jboolean)matchesAnyParentCategoriesWithJavaUtilSet:(id<JavaUtilSet>)childCategories
                                      withJavaUtilSet:(id<JavaUtilSet>)parentCategories;

- (jboolean)matchesAllParentCategoriesWithJavaUtilSet:(id<JavaUtilSet>)childCategories
                                      withJavaUtilSet:(id<JavaUtilSet>)parentCategories;

+ (id<JavaUtilSet>)categoriesWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

+ (OrgJunitRunnerDescription *)parentDescriptionWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

+ (IOSObjectArray *)directCategoriesWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

+ (id<JavaUtilSet>)copyAndRefineWithJavaUtilSet:(id<JavaUtilSet>)classes OBJC_METHOD_FAMILY_NONE;

+ (jboolean)hasNullWithIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_FIELD_SETTER(OrgJunitExperimentalCategoriesCategories_CategoryFilter, included_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgJunitExperimentalCategoriesCategories_CategoryFilter, excluded_, id<JavaUtilSet>)

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasCorrectCategoryAnnotationWithOrgJunitRunnerDescription_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, OrgJunitRunnerDescription *description_);

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAnyParentCategoriesWithJavaUtilSet_withJavaUtilSet_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, id<JavaUtilSet> childCategories, id<JavaUtilSet> parentCategories);

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAllParentCategoriesWithJavaUtilSet_withJavaUtilSet_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, id<JavaUtilSet> childCategories, id<JavaUtilSet> parentCategories);

__attribute__((unused)) static id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoriesWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_);

__attribute__((unused)) static OrgJunitRunnerDescription *OrgJunitExperimentalCategoriesCategories_CategoryFilter_parentDescriptionWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_);

__attribute__((unused)) static IOSObjectArray *OrgJunitExperimentalCategoriesCategories_CategoryFilter_directCategoriesWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_);

__attribute__((unused)) static id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_CategoryFilter_copyAndRefineWithJavaUtilSet_(id<JavaUtilSet> classes);

__attribute__((unused)) static jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasNullWithIOSClassArray_(IOSObjectArray *classes);

@implementation OrgJunitExperimentalCategoriesCategories

- (instancetype)initWithIOSClass:(IOSClass *)klass
withOrgJunitRunnersModelRunnerBuilder:(OrgJunitRunnersModelRunnerBuilder *)builder {
  OrgJunitExperimentalCategoriesCategories_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(self, klass, builder);
  return self;
}

+ (id<JavaUtilSet>)getIncludedCategoryWithIOSClass:(IOSClass *)klass {
  return OrgJunitExperimentalCategoriesCategories_getIncludedCategoryWithIOSClass_(klass);
}

+ (jboolean)isAnyIncludedWithIOSClass:(IOSClass *)klass {
  return OrgJunitExperimentalCategoriesCategories_isAnyIncludedWithIOSClass_(klass);
}

+ (id<JavaUtilSet>)getExcludedCategoryWithIOSClass:(IOSClass *)klass {
  return OrgJunitExperimentalCategoriesCategories_getExcludedCategoryWithIOSClass_(klass);
}

+ (jboolean)isAnyExcludedWithIOSClass:(IOSClass *)klass {
  return OrgJunitExperimentalCategoriesCategories_isAnyExcludedWithIOSClass_(klass);
}

+ (void)assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  OrgJunitExperimentalCategoriesCategories_assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription_(description_);
}

+ (void)assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  OrgJunitExperimentalCategoriesCategories_assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription_(description_);
}

+ (jboolean)canHaveCategorizedChildrenWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return OrgJunitExperimentalCategoriesCategories_canHaveCategorizedChildrenWithOrgJunitRunnerDescription_(description_);
}

+ (jboolean)hasAssignableToWithJavaUtilSet:(id<JavaUtilSet>)assigns
                              withIOSClass:(IOSClass *)to {
  return OrgJunitExperimentalCategoriesCategories_hasAssignableToWithJavaUtilSet_withIOSClass_(assigns, to);
}

+ (id<JavaUtilSet>)createSetWithIOSClassArray:(IOSObjectArray *)t {
  return OrgJunitExperimentalCategoriesCategories_createSetWithIOSClassArray_(t);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
    { NULL, "LJavaUtilSet;", 0xa, 3, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0xa, 6, 4, -1, 7, -1, -1 },
    { NULL, "LJavaUtilSet;", 0xa, 8, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0xa, 9, 4, -1, 7, -1, -1 },
    { NULL, "V", 0xa, 10, 11, 1, -1, -1, -1 },
    { NULL, "V", 0xa, 12, 11, 1, -1, -1, -1 },
    { NULL, "Z", 0xa, 13, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 14, 15, -1, 16, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x8a, 17, 18, -1, 19, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withOrgJunitRunnersModelRunnerBuilder:);
  methods[1].selector = @selector(getIncludedCategoryWithIOSClass:);
  methods[2].selector = @selector(isAnyIncludedWithIOSClass:);
  methods[3].selector = @selector(getExcludedCategoryWithIOSClass:);
  methods[4].selector = @selector(isAnyExcludedWithIOSClass:);
  methods[5].selector = @selector(assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription:);
  methods[6].selector = @selector(assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription:);
  methods[7].selector = @selector(canHaveCategorizedChildrenWithOrgJunitRunnerDescription:);
  methods[8].selector = @selector(hasAssignableToWithJavaUtilSet:withIOSClass:);
  methods[9].selector = @selector(createSetWithIOSClassArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;LOrgJunitRunnersModelRunnerBuilder;", "LOrgJunitRunnersModelInitializationError;", "(Ljava/lang/Class<*>;Lorg/junit/runners/model/RunnerBuilder;)V", "getIncludedCategory", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/util/Set<Ljava/lang/Class<*>;>;", "isAnyIncluded", "(Ljava/lang/Class<*>;)Z", "getExcludedCategory", "isAnyExcluded", "assertNoCategorizedDescendentsOfUncategorizeableParents", "LOrgJunitRunnerDescription;", "assertNoDescendantsHaveCategoryAnnotations", "canHaveCategorizedChildren", "hasAssignableTo", "LJavaUtilSet;LIOSClass;", "(Ljava/util/Set<Ljava/lang/Class<*>;>;Ljava/lang/Class<*>;)Z", "createSet", "[LIOSClass;", "([Ljava/lang/Class<*>;)Ljava/util/Set<Ljava/lang/Class<*>;>;", "LOrgJunitExperimentalCategoriesCategories_IncludeCategory;LOrgJunitExperimentalCategoriesCategories_ExcludeCategory;LOrgJunitExperimentalCategoriesCategories_CategoryFilter;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalCategoriesCategories = { "Categories", "org.junit.experimental.categories", ptrTable, methods, NULL, 7, 0x1, 10, 0, -1, 20, -1, -1, -1 };
  return &_OrgJunitExperimentalCategoriesCategories;
}

@end

void OrgJunitExperimentalCategoriesCategories_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(OrgJunitExperimentalCategoriesCategories *self, IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder) {
  OrgJunitRunnersSuite_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(self, klass, builder);
  @try {
    id<JavaUtilSet> included = OrgJunitExperimentalCategoriesCategories_getIncludedCategoryWithIOSClass_(klass);
    id<JavaUtilSet> excluded = OrgJunitExperimentalCategoriesCategories_getExcludedCategoryWithIOSClass_(klass);
    jboolean isAnyIncluded = OrgJunitExperimentalCategoriesCategories_isAnyIncludedWithIOSClass_(klass);
    jboolean isAnyExcluded = OrgJunitExperimentalCategoriesCategories_isAnyExcludedWithIOSClass_(klass);
    [self filterWithOrgJunitRunnerManipulationFilter:OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoryFilterWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(isAnyIncluded, included, isAnyExcluded, excluded)];
  }
  @catch (OrgJunitRunnerManipulationNoTestsRemainException *e) {
    @throw create_OrgJunitRunnersModelInitializationError_initWithNSException_(e);
  }
  OrgJunitExperimentalCategoriesCategories_assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription_([self getDescription]);
}

OrgJunitExperimentalCategoriesCategories *new_OrgJunitExperimentalCategoriesCategories_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalCategoriesCategories, initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_, klass, builder)
}

OrgJunitExperimentalCategoriesCategories *create_OrgJunitExperimentalCategoriesCategories_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalCategoriesCategories, initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_, klass, builder)
}

id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_getIncludedCategoryWithIOSClass_(IOSClass *klass) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  id<OrgJunitExperimentalCategoriesCategories_IncludeCategory> annotation = ((id<OrgJunitExperimentalCategoriesCategories_IncludeCategory>) [((IOSClass *) nil_chk(klass)) getAnnotationWithIOSClass:OrgJunitExperimentalCategoriesCategories_IncludeCategory_class_()]);
  return OrgJunitExperimentalCategoriesCategories_createSetWithIOSClassArray_(annotation == nil ? nil : [annotation value]);
}

jboolean OrgJunitExperimentalCategoriesCategories_isAnyIncludedWithIOSClass_(IOSClass *klass) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  id<OrgJunitExperimentalCategoriesCategories_IncludeCategory> annotation = ((id<OrgJunitExperimentalCategoriesCategories_IncludeCategory>) [((IOSClass *) nil_chk(klass)) getAnnotationWithIOSClass:OrgJunitExperimentalCategoriesCategories_IncludeCategory_class_()]);
  return annotation == nil || [annotation matchAny];
}

id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_getExcludedCategoryWithIOSClass_(IOSClass *klass) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  id<OrgJunitExperimentalCategoriesCategories_ExcludeCategory> annotation = ((id<OrgJunitExperimentalCategoriesCategories_ExcludeCategory>) [((IOSClass *) nil_chk(klass)) getAnnotationWithIOSClass:OrgJunitExperimentalCategoriesCategories_ExcludeCategory_class_()]);
  return OrgJunitExperimentalCategoriesCategories_createSetWithIOSClassArray_(annotation == nil ? nil : [annotation value]);
}

jboolean OrgJunitExperimentalCategoriesCategories_isAnyExcludedWithIOSClass_(IOSClass *klass) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  id<OrgJunitExperimentalCategoriesCategories_ExcludeCategory> annotation = ((id<OrgJunitExperimentalCategoriesCategories_ExcludeCategory>) [((IOSClass *) nil_chk(klass)) getAnnotationWithIOSClass:OrgJunitExperimentalCategoriesCategories_ExcludeCategory_class_()]);
  return annotation == nil || [annotation matchAny];
}

void OrgJunitExperimentalCategoriesCategories_assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  if (!OrgJunitExperimentalCategoriesCategories_canHaveCategorizedChildrenWithOrgJunitRunnerDescription_(description_)) {
    OrgJunitExperimentalCategoriesCategories_assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription_(description_);
  }
  for (OrgJunitRunnerDescription * __strong each in nil_chk([((OrgJunitRunnerDescription *) nil_chk(description_)) getChildren])) {
    OrgJunitExperimentalCategoriesCategories_assertNoCategorizedDescendentsOfUncategorizeableParentsWithOrgJunitRunnerDescription_(each);
  }
}

void OrgJunitExperimentalCategoriesCategories_assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  for (OrgJunitRunnerDescription * __strong each in nil_chk([((OrgJunitRunnerDescription *) nil_chk(description_)) getChildren])) {
    if ([((OrgJunitRunnerDescription *) nil_chk(each)) getAnnotationWithIOSClass:OrgJunitExperimentalCategoriesCategory_class_()] != nil) {
      @throw create_OrgJunitRunnersModelInitializationError_initWithNSString_(@"Category annotations on Parameterized classes are not supported on individual methods.");
    }
    OrgJunitExperimentalCategoriesCategories_assertNoDescendantsHaveCategoryAnnotationsWithOrgJunitRunnerDescription_(each);
  }
}

jboolean OrgJunitExperimentalCategoriesCategories_canHaveCategorizedChildrenWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  for (OrgJunitRunnerDescription * __strong each in nil_chk([((OrgJunitRunnerDescription *) nil_chk(description_)) getChildren])) {
    if ([((OrgJunitRunnerDescription *) nil_chk(each)) getTestClass] == nil) {
      return false;
    }
  }
  return true;
}

jboolean OrgJunitExperimentalCategoriesCategories_hasAssignableToWithJavaUtilSet_withIOSClass_(id<JavaUtilSet> assigns, IOSClass *to) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  for (IOSClass * __strong from in nil_chk(assigns)) {
    if ([((IOSClass *) nil_chk(to)) isAssignableFrom:from]) {
      return true;
    }
  }
  return false;
}

id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_createSetWithIOSClassArray_(IOSObjectArray *t) {
  OrgJunitExperimentalCategoriesCategories_initialize();
  id<JavaUtilSet> set = create_JavaUtilHashSet_init();
  if (t != nil) {
    JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(set, t);
  }
  return set;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalCategoriesCategories)

@implementation OrgJunitExperimentalCategoriesCategories_IncludeCategory

@synthesize value = value_;
@synthesize matchAny = matchAny_;

+ (IOSObjectArray *)valueDefault {
  return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
}

+ (jboolean)matchAnyDefault {
  return true;
}

- (IOSClass *)annotationType {
  return OrgJunitExperimentalCategoriesCategories_IncludeCategory_class_();
}

- (NSString *)description {
  return @"@org.junit.experimental.categories.Categories$IncludeCategory()";
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(matchAny);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "[LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
    { "matchAny_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[Ljava/lang/Class<*>;", "LOrgJunitExperimentalCategoriesCategories;", (void *)&OrgJunitExperimentalCategoriesCategories_IncludeCategory__Annotations$0 };
  static const J2ObjcClassInfo _OrgJunitExperimentalCategoriesCategories_IncludeCategory = { "IncludeCategory", "org.junit.experimental.categories", ptrTable, methods, fields, 7, 0x2609, 2, 2, 1, -1, -1, -1, 2 };
  return &_OrgJunitExperimentalCategoriesCategories_IncludeCategory;
}

@end

id<OrgJunitExperimentalCategoriesCategories_IncludeCategory> create_OrgJunitExperimentalCategoriesCategories_IncludeCategory(jboolean matchAny, IOSObjectArray *value) {
  OrgJunitExperimentalCategoriesCategories_IncludeCategory *self = AUTORELEASE([[OrgJunitExperimentalCategoriesCategories_IncludeCategory alloc] init]);
  self->matchAny_ = matchAny;
  self->value_ = RETAIN_(value);
  return self;
}

IOSObjectArray *OrgJunitExperimentalCategoriesCategories_IncludeCategory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJunitExperimentalCategoriesCategories_IncludeCategory)

@implementation OrgJunitExperimentalCategoriesCategories_ExcludeCategory

@synthesize value = value_;
@synthesize matchAny = matchAny_;

+ (IOSObjectArray *)valueDefault {
  return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
}

+ (jboolean)matchAnyDefault {
  return true;
}

- (IOSClass *)annotationType {
  return OrgJunitExperimentalCategoriesCategories_ExcludeCategory_class_();
}

- (NSString *)description {
  return @"@org.junit.experimental.categories.Categories$ExcludeCategory()";
}

- (void)dealloc {
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(matchAny);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "[LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
    { "matchAny_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[Ljava/lang/Class<*>;", "LOrgJunitExperimentalCategoriesCategories;", (void *)&OrgJunitExperimentalCategoriesCategories_ExcludeCategory__Annotations$0 };
  static const J2ObjcClassInfo _OrgJunitExperimentalCategoriesCategories_ExcludeCategory = { "ExcludeCategory", "org.junit.experimental.categories", ptrTable, methods, fields, 7, 0x2609, 2, 2, 1, -1, -1, -1, 2 };
  return &_OrgJunitExperimentalCategoriesCategories_ExcludeCategory;
}

@end

id<OrgJunitExperimentalCategoriesCategories_ExcludeCategory> create_OrgJunitExperimentalCategoriesCategories_ExcludeCategory(jboolean matchAny, IOSObjectArray *value) {
  OrgJunitExperimentalCategoriesCategories_ExcludeCategory *self = AUTORELEASE([[OrgJunitExperimentalCategoriesCategories_ExcludeCategory alloc] init]);
  self->matchAny_ = matchAny;
  self->value_ = RETAIN_(value);
  return self;
}

IOSObjectArray *OrgJunitExperimentalCategoriesCategories_ExcludeCategory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJunitExperimentalCategoriesCategories_ExcludeCategory)

@implementation OrgJunitExperimentalCategoriesCategories_CategoryFilter

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)includeWithBoolean:(jboolean)matchAny
                                                              withIOSClassArray:(IOSObjectArray *)categories {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithBoolean_withIOSClassArray_(matchAny, categories);
}

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)includeWithIOSClass:(IOSClass *)category {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithIOSClass_(category);
}

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)includeWithIOSClassArray:(IOSObjectArray *)categories {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithIOSClassArray_(categories);
}

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)excludeWithBoolean:(jboolean)matchAny
                                                              withIOSClassArray:(IOSObjectArray *)categories {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithBoolean_withIOSClassArray_(matchAny, categories);
}

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)excludeWithIOSClass:(IOSClass *)category {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithIOSClass_(category);
}

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)excludeWithIOSClassArray:(IOSObjectArray *)categories {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithIOSClassArray_(categories);
}

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)categoryFilterWithBoolean:(jboolean)matchAnyInclusions
                                                                       withJavaUtilSet:(id<JavaUtilSet>)inclusions
                                                                           withBoolean:(jboolean)matchAnyExclusions
                                                                       withJavaUtilSet:(id<JavaUtilSet>)exclusions {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoryFilterWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(matchAnyInclusions, inclusions, matchAnyExclusions, exclusions);
}

- (instancetype)initWithBoolean:(jboolean)matchAnyIncludes
                withJavaUtilSet:(id<JavaUtilSet>)includes
                    withBoolean:(jboolean)matchAnyExcludes
                withJavaUtilSet:(id<JavaUtilSet>)excludes {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(self, matchAnyIncludes, includes, matchAnyExcludes, excludes);
  return self;
}

- (NSString *)describe {
  return [self description];
}

- (NSString *)description {
  JavaLangStringBuilder *description_ = [create_JavaLangStringBuilder_initWithNSString_(@"categories ") appendWithId:[((id<JavaUtilSet>) nil_chk(included_)) isEmpty] ? @"[all]" : (id) included_];
  if (![((id<JavaUtilSet>) nil_chk(excluded_)) isEmpty]) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(description_)) appendWithNSString:@" - "])) appendWithId:excluded_];
  }
  return [((JavaLangStringBuilder *) nil_chk(description_)) description];
}

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  if (OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasCorrectCategoryAnnotationWithOrgJunitRunnerDescription_(self, description_)) {
    return true;
  }
  for (OrgJunitRunnerDescription * __strong each in nil_chk([((OrgJunitRunnerDescription *) nil_chk(description_)) getChildren])) {
    if ([self shouldRunWithOrgJunitRunnerDescription:each]) {
      return true;
    }
  }
  return false;
}

- (jboolean)hasCorrectCategoryAnnotationWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasCorrectCategoryAnnotationWithOrgJunitRunnerDescription_(self, description_);
}

- (jboolean)matchesAnyParentCategoriesWithJavaUtilSet:(id<JavaUtilSet>)childCategories
                                      withJavaUtilSet:(id<JavaUtilSet>)parentCategories {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAnyParentCategoriesWithJavaUtilSet_withJavaUtilSet_(self, childCategories, parentCategories);
}

- (jboolean)matchesAllParentCategoriesWithJavaUtilSet:(id<JavaUtilSet>)childCategories
                                      withJavaUtilSet:(id<JavaUtilSet>)parentCategories {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAllParentCategoriesWithJavaUtilSet_withJavaUtilSet_(self, childCategories, parentCategories);
}

+ (id<JavaUtilSet>)categoriesWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoriesWithOrgJunitRunnerDescription_(description_);
}

+ (OrgJunitRunnerDescription *)parentDescriptionWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_parentDescriptionWithOrgJunitRunnerDescription_(description_);
}

+ (IOSObjectArray *)directCategoriesWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_directCategoriesWithOrgJunitRunnerDescription_(description_);
}

+ (id<JavaUtilSet>)copyAndRefineWithJavaUtilSet:(id<JavaUtilSet>)classes {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_copyAndRefineWithJavaUtilSet_(classes);
}

+ (jboolean)hasNullWithIOSClassArray:(IOSObjectArray *)classes {
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasNullWithIOSClassArray_(classes);
}

- (void)dealloc {
  RELEASE_(included_);
  RELEASE_(excluded_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJunitExperimentalCategoriesCategories_CategoryFilter;", 0x89, 0, 1, -1, 2, -1, -1 },
    { NULL, "LOrgJunitExperimentalCategoriesCategories_CategoryFilter;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LOrgJunitExperimentalCategoriesCategories_CategoryFilter;", 0x89, 0, 5, -1, 6, -1, -1 },
    { NULL, "LOrgJunitExperimentalCategoriesCategories_CategoryFilter;", 0x89, 7, 1, -1, 2, -1, -1 },
    { NULL, "LOrgJunitExperimentalCategoriesCategories_CategoryFilter;", 0x9, 7, 3, -1, 4, -1, -1 },
    { NULL, "LOrgJunitExperimentalCategoriesCategories_CategoryFilter;", 0x89, 7, 5, -1, 6, -1, -1 },
    { NULL, "LOrgJunitExperimentalCategoriesCategories_CategoryFilter;", 0x9, 8, 9, -1, 10, -1, -1 },
    { NULL, NULL, 0x4, -1, 9, -1, 11, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 15, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 16, 17, -1, 18, -1, -1 },
    { NULL, "Z", 0x2, 19, 17, -1, 18, -1, -1 },
    { NULL, "LJavaUtilSet;", 0xa, 20, 14, -1, 21, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0xa, 22, 14, -1, -1, -1, -1 },
    { NULL, "[LIOSClass;", 0xa, 23, 14, -1, 24, -1, -1 },
    { NULL, "LJavaUtilSet;", 0xa, 25, 26, -1, 27, -1, -1 },
    { NULL, "Z", 0x8a, 28, 5, -1, 29, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(includeWithBoolean:withIOSClassArray:);
  methods[1].selector = @selector(includeWithIOSClass:);
  methods[2].selector = @selector(includeWithIOSClassArray:);
  methods[3].selector = @selector(excludeWithBoolean:withIOSClassArray:);
  methods[4].selector = @selector(excludeWithIOSClass:);
  methods[5].selector = @selector(excludeWithIOSClassArray:);
  methods[6].selector = @selector(categoryFilterWithBoolean:withJavaUtilSet:withBoolean:withJavaUtilSet:);
  methods[7].selector = @selector(initWithBoolean:withJavaUtilSet:withBoolean:withJavaUtilSet:);
  methods[8].selector = @selector(describe);
  methods[9].selector = @selector(description);
  methods[10].selector = @selector(shouldRunWithOrgJunitRunnerDescription:);
  methods[11].selector = @selector(hasCorrectCategoryAnnotationWithOrgJunitRunnerDescription:);
  methods[12].selector = @selector(matchesAnyParentCategoriesWithJavaUtilSet:withJavaUtilSet:);
  methods[13].selector = @selector(matchesAllParentCategoriesWithJavaUtilSet:withJavaUtilSet:);
  methods[14].selector = @selector(categoriesWithOrgJunitRunnerDescription:);
  methods[15].selector = @selector(parentDescriptionWithOrgJunitRunnerDescription:);
  methods[16].selector = @selector(directCategoriesWithOrgJunitRunnerDescription:);
  methods[17].selector = @selector(copyAndRefineWithJavaUtilSet:);
  methods[18].selector = @selector(hasNullWithIOSClassArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "included_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 30, -1 },
    { "excluded_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 30, -1 },
    { "includedAny_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "excludedAny_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "include", "Z[LIOSClass;", "(Z[Ljava/lang/Class<*>;)Lorg/junit/experimental/categories/Categories$CategoryFilter;", "LIOSClass;", "(Ljava/lang/Class<*>;)Lorg/junit/experimental/categories/Categories$CategoryFilter;", "[LIOSClass;", "([Ljava/lang/Class<*>;)Lorg/junit/experimental/categories/Categories$CategoryFilter;", "exclude", "categoryFilter", "ZLJavaUtilSet;ZLJavaUtilSet;", "(ZLjava/util/Set<Ljava/lang/Class<*>;>;ZLjava/util/Set<Ljava/lang/Class<*>;>;)Lorg/junit/experimental/categories/Categories$CategoryFilter;", "(ZLjava/util/Set<Ljava/lang/Class<*>;>;ZLjava/util/Set<Ljava/lang/Class<*>;>;)V", "toString", "shouldRun", "LOrgJunitRunnerDescription;", "hasCorrectCategoryAnnotation", "matchesAnyParentCategories", "LJavaUtilSet;LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/Class<*>;>;Ljava/util/Set<Ljava/lang/Class<*>;>;)Z", "matchesAllParentCategories", "categories", "(Lorg/junit/runner/Description;)Ljava/util/Set<Ljava/lang/Class<*>;>;", "parentDescription", "directCategories", "(Lorg/junit/runner/Description;)[Ljava/lang/Class<*>;", "copyAndRefine", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/Class<*>;>;)Ljava/util/Set<Ljava/lang/Class<*>;>;", "hasNull", "([Ljava/lang/Class<*>;)Z", "Ljava/util/Set<Ljava/lang/Class<*>;>;", "LOrgJunitExperimentalCategoriesCategories;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalCategoriesCategories_CategoryFilter = { "CategoryFilter", "org.junit.experimental.categories", ptrTable, methods, fields, 7, 0x9, 19, 4, 31, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalCategoriesCategories_CategoryFilter;
}

@end

OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithBoolean_withIOSClassArray_(jboolean matchAny, IOSObjectArray *categories) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  if (OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasNullWithIOSClassArray_(categories)) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"has null category");
  }
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoryFilterWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(matchAny, OrgJunitExperimentalCategoriesCategories_createSetWithIOSClassArray_(categories), true, nil);
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithIOSClass_(IOSClass *category) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithBoolean_withIOSClassArray_(true, [IOSObjectArray arrayWithObjects:(id[]){ category } count:1 type:IOSClass_class_()]);
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithIOSClassArray_(IOSObjectArray *categories) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithBoolean_withIOSClassArray_(true, categories);
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithBoolean_withIOSClassArray_(jboolean matchAny, IOSObjectArray *categories) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  if (OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasNullWithIOSClassArray_(categories)) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"has null category");
  }
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoryFilterWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(true, nil, matchAny, OrgJunitExperimentalCategoriesCategories_createSetWithIOSClassArray_(categories));
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithIOSClass_(IOSClass *category) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithBoolean_withIOSClassArray_(true, [IOSObjectArray arrayWithObjects:(id[]){ category } count:1 type:IOSClass_class_()]);
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithIOSClassArray_(IOSObjectArray *categories) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  return OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithBoolean_withIOSClassArray_(true, categories);
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoryFilterWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(jboolean matchAnyInclusions, id<JavaUtilSet> inclusions, jboolean matchAnyExclusions, id<JavaUtilSet> exclusions) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  return create_OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(matchAnyInclusions, inclusions, matchAnyExclusions, exclusions);
}

void OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, jboolean matchAnyIncludes, id<JavaUtilSet> includes, jboolean matchAnyExcludes, id<JavaUtilSet> excludes) {
  OrgJunitRunnerManipulationFilter_init(self);
  self->includedAny_ = matchAnyIncludes;
  self->excludedAny_ = matchAnyExcludes;
  JreStrongAssign(&self->included_, OrgJunitExperimentalCategoriesCategories_CategoryFilter_copyAndRefineWithJavaUtilSet_(includes));
  JreStrongAssign(&self->excluded_, OrgJunitExperimentalCategoriesCategories_CategoryFilter_copyAndRefineWithJavaUtilSet_(excludes));
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *new_OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(jboolean matchAnyIncludes, id<JavaUtilSet> includes, jboolean matchAnyExcludes, id<JavaUtilSet> excludes) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalCategoriesCategories_CategoryFilter, initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_, matchAnyIncludes, includes, matchAnyExcludes, excludes)
}

OrgJunitExperimentalCategoriesCategories_CategoryFilter *create_OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(jboolean matchAnyIncludes, id<JavaUtilSet> includes, jboolean matchAnyExcludes, id<JavaUtilSet> excludes) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalCategoriesCategories_CategoryFilter, initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_, matchAnyIncludes, includes, matchAnyExcludes, excludes)
}

jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasCorrectCategoryAnnotationWithOrgJunitRunnerDescription_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, OrgJunitRunnerDescription *description_) {
  id<JavaUtilSet> childCategories = OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoriesWithOrgJunitRunnerDescription_(description_);
  if ([((id<JavaUtilSet>) nil_chk(childCategories)) isEmpty]) {
    return [((id<JavaUtilSet>) nil_chk(self->included_)) isEmpty];
  }
  if (![((id<JavaUtilSet>) nil_chk(self->excluded_)) isEmpty]) {
    if (self->excludedAny_) {
      if (OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAnyParentCategoriesWithJavaUtilSet_withJavaUtilSet_(self, childCategories, self->excluded_)) {
        return false;
      }
    }
    else {
      if (OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAllParentCategoriesWithJavaUtilSet_withJavaUtilSet_(self, childCategories, self->excluded_)) {
        return false;
      }
    }
  }
  if ([((id<JavaUtilSet>) nil_chk(self->included_)) isEmpty]) {
    return true;
  }
  else {
    if (self->includedAny_) {
      return OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAnyParentCategoriesWithJavaUtilSet_withJavaUtilSet_(self, childCategories, self->included_);
    }
    else {
      return OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAllParentCategoriesWithJavaUtilSet_withJavaUtilSet_(self, childCategories, self->included_);
    }
  }
}

jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAnyParentCategoriesWithJavaUtilSet_withJavaUtilSet_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, id<JavaUtilSet> childCategories, id<JavaUtilSet> parentCategories) {
  for (IOSClass * __strong parentCategory in nil_chk(parentCategories)) {
    if (OrgJunitExperimentalCategoriesCategories_hasAssignableToWithJavaUtilSet_withIOSClass_(childCategories, parentCategory)) {
      return true;
    }
  }
  return false;
}

jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_matchesAllParentCategoriesWithJavaUtilSet_withJavaUtilSet_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, id<JavaUtilSet> childCategories, id<JavaUtilSet> parentCategories) {
  for (IOSClass * __strong parentCategory in nil_chk(parentCategories)) {
    if (!OrgJunitExperimentalCategoriesCategories_hasAssignableToWithJavaUtilSet_withIOSClass_(childCategories, parentCategory)) {
      return false;
    }
  }
  return true;
}

id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoriesWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  id<JavaUtilSet> categories = create_JavaUtilHashSet_init();
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(categories, OrgJunitExperimentalCategoriesCategories_CategoryFilter_directCategoriesWithOrgJunitRunnerDescription_(description_));
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(categories, OrgJunitExperimentalCategoriesCategories_CategoryFilter_directCategoriesWithOrgJunitRunnerDescription_(OrgJunitExperimentalCategoriesCategories_CategoryFilter_parentDescriptionWithOrgJunitRunnerDescription_(description_)));
  return categories;
}

OrgJunitRunnerDescription *OrgJunitExperimentalCategoriesCategories_CategoryFilter_parentDescriptionWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  IOSClass *testClass = [((OrgJunitRunnerDescription *) nil_chk(description_)) getTestClass];
  return testClass == nil ? nil : OrgJunitRunnerDescription_createSuiteDescriptionWithIOSClass_(testClass);
}

IOSObjectArray *OrgJunitExperimentalCategoriesCategories_CategoryFilter_directCategoriesWithOrgJunitRunnerDescription_(OrgJunitRunnerDescription *description_) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  if (description_ == nil) {
    return [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()];
  }
  id<OrgJunitExperimentalCategoriesCategory> annotation = ((id<OrgJunitExperimentalCategoriesCategory>) [description_ getAnnotationWithIOSClass:OrgJunitExperimentalCategoriesCategory_class_()]);
  return annotation == nil ? [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()] : [annotation value];
}

id<JavaUtilSet> OrgJunitExperimentalCategoriesCategories_CategoryFilter_copyAndRefineWithJavaUtilSet_(id<JavaUtilSet> classes) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  JavaUtilHashSet *c = create_JavaUtilHashSet_init();
  if (classes != nil) {
    [c addAllWithJavaUtilCollection:classes];
  }
  [c removeWithId:nil];
  return c;
}

jboolean OrgJunitExperimentalCategoriesCategories_CategoryFilter_hasNullWithIOSClassArray_(IOSObjectArray *classes) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initialize();
  if (classes == nil) return false;
  {
    IOSObjectArray *a__ = classes;
    IOSClass * const *b__ = a__->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *clazz = *b__++;
      if (clazz == nil) {
        return true;
      }
    }
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalCategoriesCategories_CategoryFilter)
