//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/categories/ExcludeCategories.java
//

#include "J2ObjC_source.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/junit/experimental/categories/Categories.h"
#include "org/junit/experimental/categories/CategoryFilterFactory.h"
#include "org/junit/experimental/categories/ExcludeCategories.h"
#include "org/junit/runner/manipulation/Filter.h"

@interface OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny : OrgJunitExperimentalCategoriesCategories_CategoryFilter

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)categories;

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)categories;

- (NSString *)describe;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny)

__attribute__((unused)) static void OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *self, id<JavaUtilList> categories);

__attribute__((unused)) static OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *new_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(id<JavaUtilList> categories) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *create_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(id<JavaUtilList> categories);

__attribute__((unused)) static void OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *self, id<JavaUtilSet> categories);

__attribute__((unused)) static OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *new_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(id<JavaUtilSet> categories) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *create_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(id<JavaUtilSet> categories);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny)

@implementation OrgJunitExperimentalCategoriesExcludeCategories

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitExperimentalCategoriesExcludeCategories_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJunitRunnerManipulationFilter *)createFilterWithJavaUtilList:(id<JavaUtilList>)categories {
  return create_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(categories);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x4, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createFilterWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createFilter", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Class<*>;>;)Lorg/junit/runner/manipulation/Filter;", "LOrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalCategoriesExcludeCategories = { "ExcludeCategories", "org.junit.experimental.categories", ptrTable, methods, NULL, 7, 0x11, 2, 0, -1, 3, -1, -1, -1 };
  return &_OrgJunitExperimentalCategoriesExcludeCategories;
}

@end

void OrgJunitExperimentalCategoriesExcludeCategories_init(OrgJunitExperimentalCategoriesExcludeCategories *self) {
  OrgJunitExperimentalCategoriesCategoryFilterFactory_init(self);
}

OrgJunitExperimentalCategoriesExcludeCategories *new_OrgJunitExperimentalCategoriesExcludeCategories_init() {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalCategoriesExcludeCategories, init)
}

OrgJunitExperimentalCategoriesExcludeCategories *create_OrgJunitExperimentalCategoriesExcludeCategories_init() {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalCategoriesExcludeCategories, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalCategoriesExcludeCategories)

@implementation OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)categories {
  OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(self, categories);
  return self;
}

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)categories {
  OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(self, categories);
  return self;
}

- (NSString *)describe {
  return JreStrcat("$$", @"excludes ", [super describe]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(initWithJavaUtilSet:);
  methods[2].selector = @selector(describe);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Class<*>;>;)V", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/Class<*>;>;)V", "LOrgJunitExperimentalCategoriesExcludeCategories;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny = { "ExcludesAny", "org.junit.experimental.categories", ptrTable, methods, NULL, 7, 0xa, 3, 0, 4, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny;
}

@end

void OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *self, id<JavaUtilList> categories) {
  OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(self, create_JavaUtilHashSet_initWithJavaUtilCollection_(categories));
}

OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *new_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(id<JavaUtilList> categories) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny, initWithJavaUtilList_, categories)
}

OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *create_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilList_(id<JavaUtilList> categories) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny, initWithJavaUtilList_, categories)
}

void OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *self, id<JavaUtilSet> categories) {
  OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(self, true, nil, true, categories);
}

OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *new_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(id<JavaUtilSet> categories) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny, initWithJavaUtilSet_, categories)
}

OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny *create_OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny_initWithJavaUtilSet_(id<JavaUtilSet> categories) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny, initWithJavaUtilSet_, categories)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalCategoriesExcludeCategories_ExcludesAny)
