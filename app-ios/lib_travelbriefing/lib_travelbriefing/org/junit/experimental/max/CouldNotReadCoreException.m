//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/max/CouldNotReadCoreException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/junit/experimental/max/CouldNotReadCoreException.h"

inline jlong OrgJunitExperimentalMaxCouldNotReadCoreException_get_serialVersionUID();
#define OrgJunitExperimentalMaxCouldNotReadCoreException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJunitExperimentalMaxCouldNotReadCoreException, serialVersionUID, jlong)

@implementation OrgJunitExperimentalMaxCouldNotReadCoreException

- (instancetype)initWithNSException:(NSException *)e {
  OrgJunitExperimentalMaxCouldNotReadCoreException_initWithNSException_(self, e);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJunitExperimentalMaxCouldNotReadCoreException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSException;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalMaxCouldNotReadCoreException = { "CouldNotReadCoreException", "org.junit.experimental.max", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalMaxCouldNotReadCoreException;
}

@end

void OrgJunitExperimentalMaxCouldNotReadCoreException_initWithNSException_(OrgJunitExperimentalMaxCouldNotReadCoreException *self, NSException *e) {
  JavaLangException_initWithNSException_(self, e);
}

OrgJunitExperimentalMaxCouldNotReadCoreException *new_OrgJunitExperimentalMaxCouldNotReadCoreException_initWithNSException_(NSException *e) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalMaxCouldNotReadCoreException, initWithNSException_, e)
}

OrgJunitExperimentalMaxCouldNotReadCoreException *create_OrgJunitExperimentalMaxCouldNotReadCoreException_initWithNSException_(NSException *e) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalMaxCouldNotReadCoreException, initWithNSException_, e)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalMaxCouldNotReadCoreException)
