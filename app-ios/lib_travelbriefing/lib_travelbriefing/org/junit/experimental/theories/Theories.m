//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/theories/Theories.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Error.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/junit/Assert.h"
#include "org/junit/Assume.h"
#include "org/junit/experimental/theories/DataPoint.h"
#include "org/junit/experimental/theories/DataPoints.h"
#include "org/junit/experimental/theories/ParameterSignature.h"
#include "org/junit/experimental/theories/ParametersSuppliedBy.h"
#include "org/junit/experimental/theories/PotentialAssignment.h"
#include "org/junit/experimental/theories/Theories.h"
#include "org/junit/experimental/theories/Theory.h"
#include "org/junit/experimental/theories/internal/Assignments.h"
#include "org/junit/experimental/theories/internal/ParameterizedAssertionError.h"
#include "org/junit/internal/AssumptionViolatedException.h"
#include "org/junit/runners/BlockJUnit4ClassRunner.h"
#include "org/junit/runners/model/FrameworkMethod.h"
#include "org/junit/runners/model/Statement.h"
#include "org/junit/runners/model/TestClass.h"

@interface OrgJunitExperimentalTheoriesTheories ()

- (void)validateDataPointFieldsWithJavaUtilList:(id<JavaUtilList>)errors;

- (void)validateDataPointMethodsWithJavaUtilList:(id<JavaUtilList>)errors;

- (void)validateParameterSupplierWithIOSClass:(IOSClass *)supplierClass
                             withJavaUtilList:(id<JavaUtilList>)errors;

@end

__attribute__((unused)) static void OrgJunitExperimentalTheoriesTheories_validateDataPointFieldsWithJavaUtilList_(OrgJunitExperimentalTheoriesTheories *self, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitExperimentalTheoriesTheories_validateDataPointMethodsWithJavaUtilList_(OrgJunitExperimentalTheoriesTheories *self, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitExperimentalTheoriesTheories_validateParameterSupplierWithIOSClass_withJavaUtilList_(OrgJunitExperimentalTheoriesTheories *self, IOSClass *supplierClass, id<JavaUtilList> errors);

@interface OrgJunitExperimentalTheoriesTheories_TheoryAnchor () {
 @public
  jint successes_;
  OrgJunitRunnersModelFrameworkMethod *testMethod_;
  OrgJunitRunnersModelTestClass *testClass_;
  id<JavaUtilList> fInvalidParameters_;
}

- (OrgJunitRunnersModelTestClass *)getTestClass;

- (OrgJunitRunnersModelStatement *)methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method
                                                    withOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)complete
                                                                                                 withId:(id)freshInstance;

- (jboolean)nullsOk;

@end

J2OBJC_FIELD_SETTER(OrgJunitExperimentalTheoriesTheories_TheoryAnchor, testMethod_, OrgJunitRunnersModelFrameworkMethod *)
J2OBJC_FIELD_SETTER(OrgJunitExperimentalTheoriesTheories_TheoryAnchor, testClass_, OrgJunitRunnersModelTestClass *)
J2OBJC_FIELD_SETTER(OrgJunitExperimentalTheoriesTheories_TheoryAnchor, fInvalidParameters_, id<JavaUtilList>)

__attribute__((unused)) static OrgJunitRunnersModelTestClass *OrgJunitExperimentalTheoriesTheories_TheoryAnchor_getTestClass(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *self);

__attribute__((unused)) static OrgJunitRunnersModelStatement *OrgJunitExperimentalTheoriesTheories_TheoryAnchor_methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitExperimentalTheoriesInternalAssignments_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *self, OrgJunitRunnersModelFrameworkMethod *method, OrgJunitExperimentalTheoriesInternalAssignments *complete, id freshInstance);

__attribute__((unused)) static jboolean OrgJunitExperimentalTheoriesTheories_TheoryAnchor_nullsOk(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *self);

@interface OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 : OrgJunitRunnersBlockJUnit4ClassRunner {
 @public
  OrgJunitExperimentalTheoriesTheories_TheoryAnchor *this$0_;
  OrgJunitExperimentalTheoriesInternalAssignments *val$complete_;
}

- (instancetype)initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor:(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *)outer$
                      withOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)capture$0
                                                             withIOSClass:(IOSClass *)klass;

- (void)collectInitializationErrorsWithJavaUtilList:(id<JavaUtilList>)errors;

- (OrgJunitRunnersModelStatement *)methodBlockWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method;

- (OrgJunitRunnersModelStatement *)methodInvokerWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method
                                                                                 withId:(id)test;

- (id)createTest;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1)

__attribute__((unused)) static void OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *self, OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, IOSClass *klass);

__attribute__((unused)) static OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *new_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, IOSClass *klass) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, IOSClass *klass);

@interface OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 : OrgJunitRunnersModelStatement {
 @public
  OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *this$0_;
  OrgJunitRunnersModelStatement *val$statement_;
}

- (instancetype)initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1:(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *)outer$
                                          withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$0;

- (void)evaluate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1)

__attribute__((unused)) static void OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 *self, OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *outer$, OrgJunitRunnersModelStatement *capture$0);

__attribute__((unused)) static OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 *new_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *outer$, OrgJunitRunnersModelStatement *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 *create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *outer$, OrgJunitRunnersModelStatement *capture$0);

@interface OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 : OrgJunitRunnersModelStatement {
 @public
  OrgJunitExperimentalTheoriesTheories_TheoryAnchor *this$0_;
  OrgJunitExperimentalTheoriesInternalAssignments *val$complete_;
  OrgJunitRunnersModelFrameworkMethod *val$method_;
  id val$freshInstance_;
}

- (instancetype)initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor:(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *)outer$
                      withOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)capture$0
                                  withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)capture$1
                                                                   withId:(id)capture$2;

- (void)evaluate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2)

__attribute__((unused)) static void OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 *self, OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, OrgJunitRunnersModelFrameworkMethod *capture$1, id capture$2);

__attribute__((unused)) static OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 *new_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, OrgJunitRunnersModelFrameworkMethod *capture$1, id capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 *create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, OrgJunitRunnersModelFrameworkMethod *capture$1, id capture$2);

@implementation OrgJunitExperimentalTheoriesTheories

- (instancetype)initWithIOSClass:(IOSClass *)klass {
  OrgJunitExperimentalTheoriesTheories_initWithIOSClass_(self, klass);
  return self;
}

- (void)collectInitializationErrorsWithJavaUtilList:(id<JavaUtilList>)errors {
  [super collectInitializationErrorsWithJavaUtilList:errors];
  OrgJunitExperimentalTheoriesTheories_validateDataPointFieldsWithJavaUtilList_(self, errors);
  OrgJunitExperimentalTheoriesTheories_validateDataPointMethodsWithJavaUtilList_(self, errors);
}

- (void)validateDataPointFieldsWithJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitExperimentalTheoriesTheories_validateDataPointFieldsWithJavaUtilList_(self, errors);
}

- (void)validateDataPointMethodsWithJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitExperimentalTheoriesTheories_validateDataPointMethodsWithJavaUtilList_(self, errors);
}

- (void)validateConstructorWithJavaUtilList:(id<JavaUtilList>)errors {
  [self validateOnlyOneConstructorWithJavaUtilList:errors];
}

- (void)validateTestMethodsWithJavaUtilList:(id<JavaUtilList>)errors {
  for (OrgJunitRunnersModelFrameworkMethod * __strong each in nil_chk([self computeTestMethods])) {
    if ([((OrgJunitRunnersModelFrameworkMethod *) nil_chk(each)) getAnnotationWithIOSClass:OrgJunitExperimentalTheoriesTheory_class_()] != nil) {
      [each validatePublicVoidWithBoolean:false withJavaUtilList:errors];
      [each validateNoTypeParametersOnArgsWithJavaUtilList:errors];
    }
    else {
      [each validatePublicVoidNoArgWithBoolean:false withJavaUtilList:errors];
    }
    for (OrgJunitExperimentalTheoriesParameterSignature * __strong signature in nil_chk(OrgJunitExperimentalTheoriesParameterSignature_signaturesWithJavaLangReflectMethod_([each getMethod]))) {
      id<OrgJunitExperimentalTheoriesParametersSuppliedBy> annotation = ((id<OrgJunitExperimentalTheoriesParametersSuppliedBy>) [((OrgJunitExperimentalTheoriesParameterSignature *) nil_chk(signature)) findDeepAnnotationWithIOSClass:OrgJunitExperimentalTheoriesParametersSuppliedBy_class_()]);
      if (annotation != nil) {
        OrgJunitExperimentalTheoriesTheories_validateParameterSupplierWithIOSClass_withJavaUtilList_(self, [annotation value], errors);
      }
    }
  }
}

- (void)validateParameterSupplierWithIOSClass:(IOSClass *)supplierClass
                             withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitExperimentalTheoriesTheories_validateParameterSupplierWithIOSClass_withJavaUtilList_(self, supplierClass, errors);
}

- (id<JavaUtilList>)computeTestMethods {
  id<JavaUtilList> testMethods = create_JavaUtilArrayList_initWithJavaUtilCollection_([super computeTestMethods]);
  id<JavaUtilList> theoryMethods = [((OrgJunitRunnersModelTestClass *) nil_chk([self getTestClass])) getAnnotatedMethodsWithIOSClass:OrgJunitExperimentalTheoriesTheory_class_()];
  [testMethods removeAllWithJavaUtilCollection:theoryMethods];
  [testMethods addAllWithJavaUtilCollection:theoryMethods];
  return testMethods;
}

- (OrgJunitRunnersModelStatement *)methodBlockWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method {
  return create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_initWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelTestClass_(method, [self getTestClass]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x2, 6, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x2, 7, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x4, 8, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x4, 9, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, 12, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 13, -1, -1 },
    { NULL, "LOrgJunitRunnersModelStatement;", 0x1, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(collectInitializationErrorsWithJavaUtilList:);
  methods[2].selector = @selector(validateDataPointFieldsWithJavaUtilList:);
  methods[3].selector = @selector(validateDataPointMethodsWithJavaUtilList:);
  methods[4].selector = @selector(validateConstructorWithJavaUtilList:);
  methods[5].selector = @selector(validateTestMethodsWithJavaUtilList:);
  methods[6].selector = @selector(validateParameterSupplierWithIOSClass:withJavaUtilList:);
  methods[7].selector = @selector(computeTestMethods);
  methods[8].selector = @selector(methodBlockWithOrgJunitRunnersModelFrameworkMethod:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;", "LOrgJunitRunnersModelInitializationError;", "(Ljava/lang/Class<*>;)V", "collectInitializationErrors", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "validateDataPointFields", "validateDataPointMethods", "validateConstructor", "validateTestMethods", "validateParameterSupplier", "LIOSClass;LJavaUtilList;", "(Ljava/lang/Class<+Lorg/junit/experimental/theories/ParameterSupplier;>;Ljava/util/List<Ljava/lang/Throwable;>;)V", "()Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;", "methodBlock", "LOrgJunitRunnersModelFrameworkMethod;", "LOrgJunitExperimentalTheoriesTheories_TheoryAnchor;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalTheoriesTheories = { "Theories", "org.junit.experimental.theories", ptrTable, methods, NULL, 7, 0x1, 9, 0, -1, 16, -1, -1, -1 };
  return &_OrgJunitExperimentalTheoriesTheories;
}

@end

void OrgJunitExperimentalTheoriesTheories_initWithIOSClass_(OrgJunitExperimentalTheoriesTheories *self, IOSClass *klass) {
  OrgJunitRunnersBlockJUnit4ClassRunner_initWithIOSClass_(self, klass);
}

OrgJunitExperimentalTheoriesTheories *new_OrgJunitExperimentalTheoriesTheories_initWithIOSClass_(IOSClass *klass) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalTheoriesTheories, initWithIOSClass_, klass)
}

OrgJunitExperimentalTheoriesTheories *create_OrgJunitExperimentalTheoriesTheories_initWithIOSClass_(IOSClass *klass) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalTheoriesTheories, initWithIOSClass_, klass)
}

void OrgJunitExperimentalTheoriesTheories_validateDataPointFieldsWithJavaUtilList_(OrgJunitExperimentalTheoriesTheories *self, id<JavaUtilList> errors) {
  IOSObjectArray *fields = [((IOSClass *) nil_chk([((OrgJunitRunnersModelTestClass *) nil_chk([self getTestClass])) getJavaClass])) getDeclaredFields];
  {
    IOSObjectArray *a__ = fields;
    JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectField * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectField *field = *b__++;
      if ([((JavaLangReflectField *) nil_chk(field)) getAnnotationWithIOSClass:OrgJunitExperimentalTheoriesDataPoint_class_()] == nil && [field getAnnotationWithIOSClass:OrgJunitExperimentalTheoriesDataPoints_class_()] == nil) {
        continue;
      }
      if (!JavaLangReflectModifier_isStaticWithInt_([field getModifiers])) {
        [((id<JavaUtilList>) nil_chk(errors)) addWithId:create_JavaLangError_initWithNSString_(JreStrcat("$$$", @"DataPoint field ", [field getName], @" must be static"))];
      }
      if (!JavaLangReflectModifier_isPublicWithInt_([field getModifiers])) {
        [((id<JavaUtilList>) nil_chk(errors)) addWithId:create_JavaLangError_initWithNSString_(JreStrcat("$$$", @"DataPoint field ", [field getName], @" must be public"))];
      }
    }
  }
}

void OrgJunitExperimentalTheoriesTheories_validateDataPointMethodsWithJavaUtilList_(OrgJunitExperimentalTheoriesTheories *self, id<JavaUtilList> errors) {
  IOSObjectArray *methods = [((IOSClass *) nil_chk([((OrgJunitRunnersModelTestClass *) nil_chk([self getTestClass])) getJavaClass])) getDeclaredMethods];
  {
    IOSObjectArray *a__ = methods;
    JavaLangReflectMethod * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectMethod * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectMethod *method = *b__++;
      if ([((JavaLangReflectMethod *) nil_chk(method)) getAnnotationWithIOSClass:OrgJunitExperimentalTheoriesDataPoint_class_()] == nil && [method getAnnotationWithIOSClass:OrgJunitExperimentalTheoriesDataPoints_class_()] == nil) {
        continue;
      }
      if (!JavaLangReflectModifier_isStaticWithInt_([method getModifiers])) {
        [((id<JavaUtilList>) nil_chk(errors)) addWithId:create_JavaLangError_initWithNSString_(JreStrcat("$$$", @"DataPoint method ", [method getName], @" must be static"))];
      }
      if (!JavaLangReflectModifier_isPublicWithInt_([method getModifiers])) {
        [((id<JavaUtilList>) nil_chk(errors)) addWithId:create_JavaLangError_initWithNSString_(JreStrcat("$$$", @"DataPoint method ", [method getName], @" must be public"))];
      }
    }
  }
}

void OrgJunitExperimentalTheoriesTheories_validateParameterSupplierWithIOSClass_withJavaUtilList_(OrgJunitExperimentalTheoriesTheories *self, IOSClass *supplierClass, id<JavaUtilList> errors) {
  IOSObjectArray *constructors = [((IOSClass *) nil_chk(supplierClass)) getConstructors];
  if (((IOSObjectArray *) nil_chk(constructors))->size_ != 1) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:create_JavaLangError_initWithNSString_(JreStrcat("$$$", @"ParameterSupplier ", [supplierClass getName], @" must have only one constructor (either empty or taking only a TestClass)"))];
  }
  else {
    IOSObjectArray *paramTypes = [((JavaLangReflectConstructor *) nil_chk(IOSObjectArray_Get(constructors, 0))) getParameterTypes];
    if (!(((IOSObjectArray *) nil_chk(paramTypes))->size_ == 0) && ![((IOSClass *) nil_chk(IOSObjectArray_Get(paramTypes, 0))) isEqual:OrgJunitRunnersModelTestClass_class_()]) {
      [((id<JavaUtilList>) nil_chk(errors)) addWithId:create_JavaLangError_initWithNSString_(JreStrcat("$$$", @"ParameterSupplier ", [supplierClass getName], @" constructor must take either nothing or a single TestClass instance"))];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalTheoriesTheories)

@implementation OrgJunitExperimentalTheoriesTheories_TheoryAnchor

- (instancetype)initWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)testMethod
                          withOrgJunitRunnersModelTestClass:(OrgJunitRunnersModelTestClass *)testClass {
  OrgJunitExperimentalTheoriesTheories_TheoryAnchor_initWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelTestClass_(self, testMethod, testClass);
  return self;
}

- (OrgJunitRunnersModelTestClass *)getTestClass {
  return OrgJunitExperimentalTheoriesTheories_TheoryAnchor_getTestClass(self);
}

- (void)evaluate {
  [self runWithAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:OrgJunitExperimentalTheoriesInternalAssignments_allUnassignedWithJavaLangReflectMethod_withOrgJunitRunnersModelTestClass_([((OrgJunitRunnersModelFrameworkMethod *) nil_chk(testMethod_)) getMethod], OrgJunitExperimentalTheoriesTheories_TheoryAnchor_getTestClass(self))];
  jboolean hasTheoryAnnotation = [testMethod_ getAnnotationWithIOSClass:OrgJunitExperimentalTheoriesTheory_class_()] != nil;
  if (successes_ == 0 && hasTheoryAnnotation) {
    OrgJunitAssert_failWithNSString_(JreStrcat("$@", @"Never found parameters that satisfied method assumptions.  Violated assumptions: ", fInvalidParameters_));
  }
}

- (void)runWithAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)parameterAssignment {
  if (![((OrgJunitExperimentalTheoriesInternalAssignments *) nil_chk(parameterAssignment)) isComplete]) {
    [self runWithIncompleteAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:parameterAssignment];
  }
  else {
    [self runWithCompleteAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:parameterAssignment];
  }
}

- (void)runWithIncompleteAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)incomplete {
  for (OrgJunitExperimentalTheoriesPotentialAssignment * __strong source in nil_chk([((OrgJunitExperimentalTheoriesInternalAssignments *) nil_chk(incomplete)) potentialsForNextUnassigned])) {
    [self runWithAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:[incomplete assignNextWithOrgJunitExperimentalTheoriesPotentialAssignment:source]];
  }
}

- (void)runWithCompleteAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)complete {
  [((OrgJunitRunnersModelStatement *) nil_chk([create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(self, complete, [((OrgJunitRunnersModelTestClass *) nil_chk(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_getTestClass(self))) getJavaClass]) methodBlockWithOrgJunitRunnersModelFrameworkMethod:testMethod_])) evaluate];
}

- (OrgJunitRunnersModelStatement *)methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method
                                                    withOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)complete
                                                                                                 withId:(id)freshInstance {
  return OrgJunitExperimentalTheoriesTheories_TheoryAnchor_methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitExperimentalTheoriesInternalAssignments_withId_(self, method, complete, freshInstance);
}

- (void)handleAssumptionViolationWithOrgJunitInternalAssumptionViolatedException:(OrgJunitInternalAssumptionViolatedException *)e {
  [((id<JavaUtilList>) nil_chk(fInvalidParameters_)) addWithId:e];
}

- (void)reportParameterizedErrorWithNSException:(NSException *)e
                              withNSObjectArray:(IOSObjectArray *)params {
  if (((IOSObjectArray *) nil_chk(params))->size_ == 0) {
    @throw e;
  }
  @throw create_OrgJunitExperimentalTheoriesInternalParameterizedAssertionError_initWithNSException_withNSString_withNSObjectArray_(e, [((OrgJunitRunnersModelFrameworkMethod *) nil_chk(testMethod_)) getName], params);
}

- (jboolean)nullsOk {
  return OrgJunitExperimentalTheoriesTheories_TheoryAnchor_nullsOk(self);
}

- (void)handleDataPointSuccess {
  successes_++;
}

- (void)dealloc {
  RELEASE_(testMethod_);
  RELEASE_(testClass_);
  RELEASE_(fInvalidParameters_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnersModelTestClass;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 3, 1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnersModelStatement;", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x84, 10, 11, 1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnersModelFrameworkMethod:withOrgJunitRunnersModelTestClass:);
  methods[1].selector = @selector(getTestClass);
  methods[2].selector = @selector(evaluate);
  methods[3].selector = @selector(runWithAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:);
  methods[4].selector = @selector(runWithIncompleteAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:);
  methods[5].selector = @selector(runWithCompleteAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:);
  methods[6].selector = @selector(methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod:withOrgJunitExperimentalTheoriesInternalAssignments:withId:);
  methods[7].selector = @selector(handleAssumptionViolationWithOrgJunitInternalAssumptionViolatedException:);
  methods[8].selector = @selector(reportParameterizedErrorWithNSException:withNSObjectArray:);
  methods[9].selector = @selector(nullsOk);
  methods[10].selector = @selector(handleDataPointSuccess);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "successes_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "testMethod_", "LOrgJunitRunnersModelFrameworkMethod;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "testClass_", "LOrgJunitRunnersModelTestClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fInvalidParameters_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 12, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitRunnersModelFrameworkMethod;LOrgJunitRunnersModelTestClass;", "LNSException;", "runWithAssignment", "LOrgJunitExperimentalTheoriesInternalAssignments;", "runWithIncompleteAssignment", "runWithCompleteAssignment", "methodCompletesWithParameters", "LOrgJunitRunnersModelFrameworkMethod;LOrgJunitExperimentalTheoriesInternalAssignments;LNSObject;", "handleAssumptionViolation", "LOrgJunitInternalAssumptionViolatedException;", "reportParameterizedError", "LNSException;[LNSObject;", "Ljava/util/List<Lorg/junit/internal/AssumptionViolatedException;>;", "LOrgJunitExperimentalTheoriesTheories;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalTheoriesTheories_TheoryAnchor = { "TheoryAnchor", "org.junit.experimental.theories", ptrTable, methods, fields, 7, 0x9, 11, 4, 13, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalTheoriesTheories_TheoryAnchor;
}

@end

void OrgJunitExperimentalTheoriesTheories_TheoryAnchor_initWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelTestClass_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *self, OrgJunitRunnersModelFrameworkMethod *testMethod, OrgJunitRunnersModelTestClass *testClass) {
  OrgJunitRunnersModelStatement_init(self);
  self->successes_ = 0;
  JreStrongAssignAndConsume(&self->fInvalidParameters_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->testMethod_, testMethod);
  JreStrongAssign(&self->testClass_, testClass);
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor *new_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_initWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelTestClass_(OrgJunitRunnersModelFrameworkMethod *testMethod, OrgJunitRunnersModelTestClass *testClass) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor, initWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelTestClass_, testMethod, testClass)
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor *create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_initWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelTestClass_(OrgJunitRunnersModelFrameworkMethod *testMethod, OrgJunitRunnersModelTestClass *testClass) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor, initWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelTestClass_, testMethod, testClass)
}

OrgJunitRunnersModelTestClass *OrgJunitExperimentalTheoriesTheories_TheoryAnchor_getTestClass(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *self) {
  return self->testClass_;
}

OrgJunitRunnersModelStatement *OrgJunitExperimentalTheoriesTheories_TheoryAnchor_methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitExperimentalTheoriesInternalAssignments_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *self, OrgJunitRunnersModelFrameworkMethod *method, OrgJunitExperimentalTheoriesInternalAssignments *complete, id freshInstance) {
  return create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(self, complete, method, freshInstance);
}

jboolean OrgJunitExperimentalTheoriesTheories_TheoryAnchor_nullsOk(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *self) {
  id<OrgJunitExperimentalTheoriesTheory> annotation = ((id<OrgJunitExperimentalTheoriesTheory>) [((JavaLangReflectMethod *) nil_chk([((OrgJunitRunnersModelFrameworkMethod *) nil_chk(self->testMethod_)) getMethod])) getAnnotationWithIOSClass:OrgJunitExperimentalTheoriesTheory_class_()]);
  if (annotation == nil) {
    return false;
  }
  return [annotation nullsAccepted];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalTheoriesTheories_TheoryAnchor)

@implementation OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1

- (instancetype)initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor:(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *)outer$
                      withOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)capture$0
                                                             withIOSClass:(IOSClass *)klass {
  OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(self, outer$, capture$0, klass);
  return self;
}

- (void)collectInitializationErrorsWithJavaUtilList:(id<JavaUtilList>)errors {
}

- (OrgJunitRunnersModelStatement *)methodBlockWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method {
  OrgJunitRunnersModelStatement *statement = [super methodBlockWithOrgJunitRunnersModelFrameworkMethod:method];
  return create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(self, statement);
}

- (OrgJunitRunnersModelStatement *)methodInvokerWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method
                                                                                 withId:(id)test {
  return OrgJunitExperimentalTheoriesTheories_TheoryAnchor_methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod_withOrgJunitExperimentalTheoriesInternalAssignments_withId_(this$0_, method, val$complete_, test);
}

- (id)createTest {
  IOSObjectArray *params = [((OrgJunitExperimentalTheoriesInternalAssignments *) nil_chk(val$complete_)) getConstructorArguments];
  if (!OrgJunitExperimentalTheoriesTheories_TheoryAnchor_nullsOk(this$0_)) {
    OrgJunitAssume_assumeNotNullWithNSObjectArray_(params);
  }
  return [((JavaLangReflectConstructor *) nil_chk([((OrgJunitRunnersModelTestClass *) nil_chk([self getTestClass])) getOnlyConstructor])) newInstanceWithNSObjectArray:params];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$complete_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
    { NULL, "LOrgJunitRunnersModelStatement;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnersModelStatement;", 0x4, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 9, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor:withOrgJunitExperimentalTheoriesInternalAssignments:withIOSClass:);
  methods[1].selector = @selector(collectInitializationErrorsWithJavaUtilList:);
  methods[2].selector = @selector(methodBlockWithOrgJunitRunnersModelFrameworkMethod:);
  methods[3].selector = @selector(methodInvokerWithOrgJunitRunnersModelFrameworkMethod:withId:);
  methods[4].selector = @selector(createTest);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitExperimentalTheoriesTheories_TheoryAnchor;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$complete_", "LOrgJunitExperimentalTheoriesInternalAssignments;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "collectInitializationErrors", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "methodBlock", "LOrgJunitRunnersModelFrameworkMethod;", "methodInvoker", "LOrgJunitRunnersModelFrameworkMethod;LNSObject;", "LJavaLangException;", "LOrgJunitExperimentalTheoriesTheories_TheoryAnchor;", "runWithCompleteAssignmentWithOrgJunitExperimentalTheoriesInternalAssignments:" };
  static const J2ObjcClassInfo _OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 = { "", "org.junit.experimental.theories", ptrTable, methods, fields, 7, 0x8018, 5, 2, 10, -1, 11, -1, -1 };
  return &_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1;
}

@end

void OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *self, OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, IOSClass *klass) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$complete_, capture$0);
  OrgJunitRunnersBlockJUnit4ClassRunner_initWithIOSClass_(self, klass);
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *new_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, IOSClass *klass) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1, initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_, outer$, capture$0, klass)
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, IOSClass *klass) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1, initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withIOSClass_, outer$, capture$0, klass)
}

@implementation OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1

- (instancetype)initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1:(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *)outer$
                                          withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$0 {
  OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(self, outer$, capture$0);
  return self;
}

- (void)evaluate {
  @try {
    [((OrgJunitRunnersModelStatement *) nil_chk(val$statement_)) evaluate];
    [this$0_->this$0_ handleDataPointSuccess];
  }
  @catch (OrgJunitInternalAssumptionViolatedException *e) {
    [this$0_->this$0_ handleAssumptionViolationWithOrgJunitInternalAssumptionViolatedException:e];
  }
  @catch (NSException *e) {
    [this$0_->this$0_ reportParameterizedErrorWithNSException:e withNSObjectArray:[((OrgJunitExperimentalTheoriesInternalAssignments *) nil_chk(this$0_->val$complete_)) getArgumentStringsWithBoolean:OrgJunitExperimentalTheoriesTheories_TheoryAnchor_nullsOk(this$0_->this$0_)]];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$statement_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1:withOrgJunitRunnersModelStatement:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$statement_", "LOrgJunitRunnersModelStatement;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSException;", "LOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1;", "methodBlockWithOrgJunitRunnersModelFrameworkMethod:" };
  static const J2ObjcClassInfo _OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 = { "", "org.junit.experimental.theories", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
  return &_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1;
}

@end

void OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 *self, OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *outer$, OrgJunitRunnersModelStatement *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$statement_, capture$0);
  OrgJunitRunnersModelStatement_init(self);
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 *new_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *outer$, OrgJunitRunnersModelStatement *capture$0) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1, initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_, outer$, capture$0)
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1 *create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1 *outer$, OrgJunitRunnersModelStatement *capture$0) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_1, initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_1_withOrgJunitRunnersModelStatement_, outer$, capture$0)
}

@implementation OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2

- (instancetype)initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor:(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *)outer$
                      withOrgJunitExperimentalTheoriesInternalAssignments:(OrgJunitExperimentalTheoriesInternalAssignments *)capture$0
                                  withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)capture$1
                                                                   withId:(id)capture$2 {
  OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

- (void)evaluate {
  IOSObjectArray *values = [((OrgJunitExperimentalTheoriesInternalAssignments *) nil_chk(val$complete_)) getMethodArguments];
  if (!OrgJunitExperimentalTheoriesTheories_TheoryAnchor_nullsOk(this$0_)) {
    OrgJunitAssume_assumeNotNullWithNSObjectArray_(values);
  }
  [((OrgJunitRunnersModelFrameworkMethod *) nil_chk(val$method_)) invokeExplosivelyWithId:val$freshInstance_ withNSObjectArray:values];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$complete_);
  RELEASE_(val$method_);
  RELEASE_(val$freshInstance_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor:withOrgJunitExperimentalTheoriesInternalAssignments:withOrgJunitRunnersModelFrameworkMethod:withId:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitExperimentalTheoriesTheories_TheoryAnchor;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$complete_", "LOrgJunitExperimentalTheoriesInternalAssignments;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$method_", "LOrgJunitRunnersModelFrameworkMethod;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$freshInstance_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSException;", "LOrgJunitExperimentalTheoriesTheories_TheoryAnchor;", "methodCompletesWithParametersWithOrgJunitRunnersModelFrameworkMethod:withOrgJunitExperimentalTheoriesInternalAssignments:withId:" };
  static const J2ObjcClassInfo _OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 = { "", "org.junit.experimental.theories", ptrTable, methods, fields, 7, 0x8018, 2, 4, 1, -1, 2, -1, -1 };
  return &_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2;
}

@end

void OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 *self, OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, OrgJunitRunnersModelFrameworkMethod *capture$1, id capture$2) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$complete_, capture$0);
  JreStrongAssign(&self->val$method_, capture$1);
  JreStrongAssign(&self->val$freshInstance_, capture$2);
  OrgJunitRunnersModelStatement_init(self);
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 *new_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, OrgJunitRunnersModelFrameworkMethod *capture$1, id capture$2) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2, initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_, outer$, capture$0, capture$1, capture$2)
}

OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2 *create_OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2_initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_(OrgJunitExperimentalTheoriesTheories_TheoryAnchor *outer$, OrgJunitExperimentalTheoriesInternalAssignments *capture$0, OrgJunitRunnersModelFrameworkMethod *capture$1, id capture$2) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalTheoriesTheories_TheoryAnchor_2, initWithOrgJunitExperimentalTheoriesTheories_TheoryAnchor_withOrgJunitExperimentalTheoriesInternalAssignments_withOrgJunitRunnersModelFrameworkMethod_withId_, outer$, capture$0, capture$1, capture$2)
}
