//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/theories/ParameterSupplier.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/junit/experimental/theories/ParameterSignature.h"
#include "org/junit/experimental/theories/ParameterSupplier.h"

@implementation OrgJunitExperimentalTheoriesParameterSupplier

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitExperimentalTheoriesParameterSupplier_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilList>)getValueSourcesWithOrgJunitExperimentalTheoriesParameterSignature:(OrgJunitExperimentalTheoriesParameterSignature *)sig {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getValueSourcesWithOrgJunitExperimentalTheoriesParameterSignature:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getValueSources", "LOrgJunitExperimentalTheoriesParameterSignature;", "LNSException;", "(Lorg/junit/experimental/theories/ParameterSignature;)Ljava/util/List<Lorg/junit/experimental/theories/PotentialAssignment;>;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalTheoriesParameterSupplier = { "ParameterSupplier", "org.junit.experimental.theories", ptrTable, methods, NULL, 7, 0x401, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalTheoriesParameterSupplier;
}

@end

void OrgJunitExperimentalTheoriesParameterSupplier_init(OrgJunitExperimentalTheoriesParameterSupplier *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalTheoriesParameterSupplier)
