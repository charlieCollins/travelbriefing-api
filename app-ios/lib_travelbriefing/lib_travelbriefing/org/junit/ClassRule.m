//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/ClassRule.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"
#include "org/junit/ClassRule.h"

__attribute__((unused)) static IOSObjectArray *OrgJunitClassRule__Annotations$0();

@implementation OrgJunitClassRule

- (IOSClass *)annotationType {
  return OrgJunitClassRule_class_();
}

- (NSString *)description {
  return @"@org.junit.ClassRule()";
}

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { (void *)&OrgJunitClassRule__Annotations$0 };
  static const J2ObjcClassInfo _OrgJunitClassRule = { "ClassRule", "org.junit", ptrTable, NULL, NULL, 7, 0x2609, 0, 0, -1, -1, -1, -1, 0 };
  return &_OrgJunitClassRule;
}

@end

id<OrgJunitClassRule> create_OrgJunitClassRule() {
  OrgJunitClassRule *self = AUTORELEASE([[OrgJunitClassRule alloc] init]);
  return self;
}

IOSObjectArray *OrgJunitClassRule__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, METHOD) } count:2 type:JavaLangAnnotationElementType_class_()]) } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJunitClassRule)
