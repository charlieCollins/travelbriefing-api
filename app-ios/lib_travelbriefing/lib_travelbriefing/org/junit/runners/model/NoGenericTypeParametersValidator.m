//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/runners/model/NoGenericTypeParametersValidator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/reflect/GenericArrayType.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/lang/reflect/WildcardType.h"
#include "java/util/List.h"
#include "org/junit/runners/model/NoGenericTypeParametersValidator.h"

@interface OrgJunitRunnersModelNoGenericTypeParametersValidator () {
 @public
  JavaLangReflectMethod *method_;
}

- (void)validateNoTypeParameterOnTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                            withJavaUtilList:(id<JavaUtilList>)errors;

- (void)validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)parameterized
                                                                      withJavaUtilList:(id<JavaUtilList>)errors;

- (void)validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)wildcard
                                                            withJavaUtilList:(id<JavaUtilList>)errors;

- (void)validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)arrayType
                                                                    withJavaUtilList:(id<JavaUtilList>)errors;

@end

J2OBJC_FIELD_SETTER(OrgJunitRunnersModelNoGenericTypeParametersValidator, method_, JavaLangReflectMethod *)

__attribute__((unused)) static void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectType> type, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectParameterizedType> parameterized, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectWildcardType> wildcard, id<JavaUtilList> errors);

__attribute__((unused)) static void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectGenericArrayType> arrayType, id<JavaUtilList> errors);

@implementation OrgJunitRunnersModelNoGenericTypeParametersValidator

- (instancetype)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  OrgJunitRunnersModelNoGenericTypeParametersValidator_initWithJavaLangReflectMethod_(self, method);
  return self;
}

- (void)validateWithJavaUtilList:(id<JavaUtilList>)errors {
  {
    IOSObjectArray *a__ = [((JavaLangReflectMethod *) nil_chk(method_)) getGenericParameterTypes];
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = *b__++;
      OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(self, each, errors);
    }
  }
}

- (void)validateNoTypeParameterOnTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                            withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(self, type, errors);
}

- (void)validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)parameterized
                                                                      withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType_withJavaUtilList_(self, parameterized, errors);
}

- (void)validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)wildcard
                                                            withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType_withJavaUtilList_(self, wildcard, errors);
}

- (void)validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)arrayType
                                                                    withJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType_withJavaUtilList_(self, arrayType, errors);
}

- (void)dealloc {
  RELEASE_(method_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, 9, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, 12, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, 15, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectMethod:);
  methods[1].selector = @selector(validateWithJavaUtilList:);
  methods[2].selector = @selector(validateNoTypeParameterOnTypeWithJavaLangReflectType:withJavaUtilList:);
  methods[3].selector = @selector(validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType:withJavaUtilList:);
  methods[4].selector = @selector(validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType:withJavaUtilList:);
  methods[5].selector = @selector(validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "method_", "LJavaLangReflectMethod;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectMethod;", "validate", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "validateNoTypeParameterOnType", "LJavaLangReflectType;LJavaUtilList;", "(Ljava/lang/reflect/Type;Ljava/util/List<Ljava/lang/Throwable;>;)V", "validateNoTypeParameterOnParameterizedType", "LJavaLangReflectParameterizedType;LJavaUtilList;", "(Ljava/lang/reflect/ParameterizedType;Ljava/util/List<Ljava/lang/Throwable;>;)V", "validateNoTypeParameterOnWildcardType", "LJavaLangReflectWildcardType;LJavaUtilList;", "(Ljava/lang/reflect/WildcardType;Ljava/util/List<Ljava/lang/Throwable;>;)V", "validateNoTypeParameterOnGenericArrayType", "LJavaLangReflectGenericArrayType;LJavaUtilList;", "(Ljava/lang/reflect/GenericArrayType;Ljava/util/List<Ljava/lang/Throwable;>;)V" };
  static const J2ObjcClassInfo _OrgJunitRunnersModelNoGenericTypeParametersValidator = { "NoGenericTypeParametersValidator", "org.junit.runners.model", ptrTable, methods, fields, 7, 0x0, 6, 1, -1, -1, -1, -1, -1 };
  return &_OrgJunitRunnersModelNoGenericTypeParametersValidator;
}

@end

void OrgJunitRunnersModelNoGenericTypeParametersValidator_initWithJavaLangReflectMethod_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, JavaLangReflectMethod *method) {
  NSObject_init(self);
  JreStrongAssign(&self->method_, method);
}

OrgJunitRunnersModelNoGenericTypeParametersValidator *new_OrgJunitRunnersModelNoGenericTypeParametersValidator_initWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  J2OBJC_NEW_IMPL(OrgJunitRunnersModelNoGenericTypeParametersValidator, initWithJavaLangReflectMethod_, method)
}

OrgJunitRunnersModelNoGenericTypeParametersValidator *create_OrgJunitRunnersModelNoGenericTypeParametersValidator_initWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  J2OBJC_CREATE_IMPL(OrgJunitRunnersModelNoGenericTypeParametersValidator, initWithJavaLangReflectMethod_, method)
}

void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectType> type, id<JavaUtilList> errors) {
  if ([JavaLangReflectTypeVariable_class_() isInstance:type]) {
    [((id<JavaUtilList>) nil_chk(errors)) addWithId:create_JavaLangException_initWithNSString_(JreStrcat("$$$@", @"Method ", [((JavaLangReflectMethod *) nil_chk(self->method_)) getName], @"() contains unresolved type variable ", type))];
  }
  else if ([JavaLangReflectParameterizedType_class_() isInstance:type]) {
    OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType_withJavaUtilList_(self, (id<JavaLangReflectParameterizedType>) cast_check(type, JavaLangReflectParameterizedType_class_()), errors);
  }
  else if ([JavaLangReflectWildcardType_class_() isInstance:type]) {
    OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType_withJavaUtilList_(self, (id<JavaLangReflectWildcardType>) cast_check(type, JavaLangReflectWildcardType_class_()), errors);
  }
  else if ([JavaLangReflectGenericArrayType_class_() isInstance:type]) {
    OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType_withJavaUtilList_(self, (id<JavaLangReflectGenericArrayType>) cast_check(type, JavaLangReflectGenericArrayType_class_()), errors);
  }
}

void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnParameterizedTypeWithJavaLangReflectParameterizedType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectParameterizedType> parameterized, id<JavaUtilList> errors) {
  {
    IOSObjectArray *a__ = [((id<JavaLangReflectParameterizedType>) nil_chk(parameterized)) getActualTypeArguments];
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = *b__++;
      OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(self, each, errors);
    }
  }
}

void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnWildcardTypeWithJavaLangReflectWildcardType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectWildcardType> wildcard, id<JavaUtilList> errors) {
  {
    IOSObjectArray *a__ = [((id<JavaLangReflectWildcardType>) nil_chk(wildcard)) getUpperBounds];
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = *b__++;
      OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(self, each, errors);
    }
  }
  {
    IOSObjectArray *a__ = [wildcard getLowerBounds];
    id<JavaLangReflectType> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> each = *b__++;
      OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(self, each, errors);
    }
  }
}

void OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnGenericArrayTypeWithJavaLangReflectGenericArrayType_withJavaUtilList_(OrgJunitRunnersModelNoGenericTypeParametersValidator *self, id<JavaLangReflectGenericArrayType> arrayType, id<JavaUtilList> errors) {
  OrgJunitRunnersModelNoGenericTypeParametersValidator_validateNoTypeParameterOnTypeWithJavaLangReflectType_withJavaUtilList_(self, [((id<JavaLangReflectGenericArrayType>) nil_chk(arrayType)) getGenericComponentType], errors);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRunnersModelNoGenericTypeParametersValidator)
