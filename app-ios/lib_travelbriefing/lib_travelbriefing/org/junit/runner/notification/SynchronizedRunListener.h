//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/runner/notification/SynchronizedRunListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener")
#ifdef RESTRICT_OrgJunitRunnerNotificationSynchronizedRunListener
#define INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener 0
#else
#define INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener 1
#endif
#undef RESTRICT_OrgJunitRunnerNotificationSynchronizedRunListener

#if !defined (OrgJunitRunnerNotificationSynchronizedRunListener_) && (INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener || defined(INCLUDE_OrgJunitRunnerNotificationSynchronizedRunListener))
#define OrgJunitRunnerNotificationSynchronizedRunListener_

#define RESTRICT_OrgJunitRunnerNotificationRunListener 1
#define INCLUDE_OrgJunitRunnerNotificationRunListener 1
#include "org/junit/runner/notification/RunListener.h"

@class OrgJunitRunnerDescription;
@class OrgJunitRunnerNotificationFailure;
@class OrgJunitRunnerResult;

@interface OrgJunitRunnerNotificationSynchronizedRunListener : OrgJunitRunnerNotificationRunListener

#pragma mark Public

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (void)testAssumptionFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure;

- (void)testFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure;

- (void)testFinishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testIgnoredWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testRunFinishedWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result;

- (void)testRunStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithOrgJunitRunnerNotificationRunListener:(OrgJunitRunnerNotificationRunListener *)listener
                                                       withId:(id)monitor;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerNotificationSynchronizedRunListener)

FOUNDATION_EXPORT void OrgJunitRunnerNotificationSynchronizedRunListener_initWithOrgJunitRunnerNotificationRunListener_withId_(OrgJunitRunnerNotificationSynchronizedRunListener *self, OrgJunitRunnerNotificationRunListener *listener, id monitor);

FOUNDATION_EXPORT OrgJunitRunnerNotificationSynchronizedRunListener *new_OrgJunitRunnerNotificationSynchronizedRunListener_initWithOrgJunitRunnerNotificationRunListener_withId_(OrgJunitRunnerNotificationRunListener *listener, id monitor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnerNotificationSynchronizedRunListener *create_OrgJunitRunnerNotificationSynchronizedRunListener_initWithOrgJunitRunnerNotificationRunListener_withId_(OrgJunitRunnerNotificationRunListener *listener, id monitor);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerNotificationSynchronizedRunListener)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnerNotificationSynchronizedRunListener")
