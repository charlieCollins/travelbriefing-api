//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/runner/FilterFactories.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/reflect/Constructor.h"
#include "org/junit/internal/Classes.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/FilterFactories.h"
#include "org/junit/runner/FilterFactory.h"
#include "org/junit/runner/FilterFactoryParams.h"
#include "org/junit/runner/Request.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runner/manipulation/Filter.h"

@implementation OrgJunitRunnerFilterFactories

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitRunnerFilterFactories_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgJunitRunnerManipulationFilter *)createFilterFromFilterSpecWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request
                                                                             withNSString:(NSString *)filterSpec {
  return OrgJunitRunnerFilterFactories_createFilterFromFilterSpecWithOrgJunitRunnerRequest_withNSString_(request, filterSpec);
}

+ (OrgJunitRunnerManipulationFilter *)createFilterWithNSString:(NSString *)filterFactoryFqcn
                         withOrgJunitRunnerFilterFactoryParams:(OrgJunitRunnerFilterFactoryParams *)params {
  return OrgJunitRunnerFilterFactories_createFilterWithNSString_withOrgJunitRunnerFilterFactoryParams_(filterFactoryFqcn, params);
}

+ (OrgJunitRunnerManipulationFilter *)createFilterWithIOSClass:(IOSClass *)filterFactoryClass
                         withOrgJunitRunnerFilterFactoryParams:(OrgJunitRunnerFilterFactoryParams *)params {
  return OrgJunitRunnerFilterFactories_createFilterWithIOSClass_withOrgJunitRunnerFilterFactoryParams_(filterFactoryClass, params);
}

+ (id<OrgJunitRunnerFilterFactory>)createFilterFactoryWithNSString:(NSString *)filterFactoryFqcn {
  return OrgJunitRunnerFilterFactories_createFilterFactoryWithNSString_(filterFactoryFqcn);
}

+ (id<OrgJunitRunnerFilterFactory>)createFilterFactoryWithIOSClass:(IOSClass *)filterFactoryClass {
  return OrgJunitRunnerFilterFactories_createFilterFactoryWithIOSClass_(filterFactoryClass);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x9, 3, 4, 2, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x9, 3, 5, 2, 6, -1, -1 },
    { NULL, "LOrgJunitRunnerFilterFactory;", 0x8, 7, 8, 2, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerFilterFactory;", 0x8, 7, 9, 2, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createFilterFromFilterSpecWithOrgJunitRunnerRequest:withNSString:);
  methods[2].selector = @selector(createFilterWithNSString:withOrgJunitRunnerFilterFactoryParams:);
  methods[3].selector = @selector(createFilterWithIOSClass:withOrgJunitRunnerFilterFactoryParams:);
  methods[4].selector = @selector(createFilterFactoryWithNSString:);
  methods[5].selector = @selector(createFilterFactoryWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createFilterFromFilterSpec", "LOrgJunitRunnerRequest;LNSString;", "LOrgJunitRunnerFilterFactory_FilterNotCreatedException;", "createFilter", "LNSString;LOrgJunitRunnerFilterFactoryParams;", "LIOSClass;LOrgJunitRunnerFilterFactoryParams;", "(Ljava/lang/Class<+Lorg/junit/runner/FilterFactory;>;Lorg/junit/runner/FilterFactoryParams;)Lorg/junit/runner/manipulation/Filter;", "createFilterFactory", "LNSString;", "LIOSClass;", "(Ljava/lang/Class<+Lorg/junit/runner/FilterFactory;>;)Lorg/junit/runner/FilterFactory;" };
  static const J2ObjcClassInfo _OrgJunitRunnerFilterFactories = { "FilterFactories", "org.junit.runner", ptrTable, methods, NULL, 7, 0x0, 6, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitRunnerFilterFactories;
}

@end

void OrgJunitRunnerFilterFactories_init(OrgJunitRunnerFilterFactories *self) {
  NSObject_init(self);
}

OrgJunitRunnerFilterFactories *new_OrgJunitRunnerFilterFactories_init() {
  J2OBJC_NEW_IMPL(OrgJunitRunnerFilterFactories, init)
}

OrgJunitRunnerFilterFactories *create_OrgJunitRunnerFilterFactories_init() {
  J2OBJC_CREATE_IMPL(OrgJunitRunnerFilterFactories, init)
}

OrgJunitRunnerManipulationFilter *OrgJunitRunnerFilterFactories_createFilterFromFilterSpecWithOrgJunitRunnerRequest_withNSString_(OrgJunitRunnerRequest *request, NSString *filterSpec) {
  OrgJunitRunnerFilterFactories_initialize();
  OrgJunitRunnerDescription *topLevelDescription = [((OrgJunitRunnerRunner *) nil_chk([((OrgJunitRunnerRequest *) nil_chk(request)) getRunner])) getDescription];
  IOSObjectArray *tuple;
  if ([((NSString *) nil_chk(filterSpec)) java_contains:@"="]) {
    tuple = [filterSpec java_split:@"=" limit:2];
  }
  else {
    tuple = [IOSObjectArray arrayWithObjects:(id[]){ filterSpec, @"" } count:2 type:NSString_class_()];
  }
  return OrgJunitRunnerFilterFactories_createFilterWithNSString_withOrgJunitRunnerFilterFactoryParams_(IOSObjectArray_Get(nil_chk(tuple), 0), create_OrgJunitRunnerFilterFactoryParams_initWithOrgJunitRunnerDescription_withNSString_(topLevelDescription, IOSObjectArray_Get(tuple, 1)));
}

OrgJunitRunnerManipulationFilter *OrgJunitRunnerFilterFactories_createFilterWithNSString_withOrgJunitRunnerFilterFactoryParams_(NSString *filterFactoryFqcn, OrgJunitRunnerFilterFactoryParams *params) {
  OrgJunitRunnerFilterFactories_initialize();
  id<OrgJunitRunnerFilterFactory> filterFactory = OrgJunitRunnerFilterFactories_createFilterFactoryWithNSString_(filterFactoryFqcn);
  return [((id<OrgJunitRunnerFilterFactory>) nil_chk(filterFactory)) createFilterWithOrgJunitRunnerFilterFactoryParams:params];
}

OrgJunitRunnerManipulationFilter *OrgJunitRunnerFilterFactories_createFilterWithIOSClass_withOrgJunitRunnerFilterFactoryParams_(IOSClass *filterFactoryClass, OrgJunitRunnerFilterFactoryParams *params) {
  OrgJunitRunnerFilterFactories_initialize();
  id<OrgJunitRunnerFilterFactory> filterFactory = OrgJunitRunnerFilterFactories_createFilterFactoryWithIOSClass_(filterFactoryClass);
  return [((id<OrgJunitRunnerFilterFactory>) nil_chk(filterFactory)) createFilterWithOrgJunitRunnerFilterFactoryParams:params];
}

id<OrgJunitRunnerFilterFactory> OrgJunitRunnerFilterFactories_createFilterFactoryWithNSString_(NSString *filterFactoryFqcn) {
  OrgJunitRunnerFilterFactories_initialize();
  IOSClass *filterFactoryClass;
  @try {
    filterFactoryClass = [OrgJunitInternalClasses_getClassWithNSString_(filterFactoryFqcn) asSubclass:OrgJunitRunnerFilterFactory_class_()];
  }
  @catch (JavaLangException *e) {
    @throw create_OrgJunitRunnerFilterFactory_FilterNotCreatedException_initWithJavaLangException_(e);
  }
  return OrgJunitRunnerFilterFactories_createFilterFactoryWithIOSClass_(filterFactoryClass);
}

id<OrgJunitRunnerFilterFactory> OrgJunitRunnerFilterFactories_createFilterFactoryWithIOSClass_(IOSClass *filterFactoryClass) {
  OrgJunitRunnerFilterFactories_initialize();
  @try {
    return [((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(filterFactoryClass)) getConstructor:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
  }
  @catch (JavaLangException *e) {
    @throw create_OrgJunitRunnerFilterFactory_FilterNotCreatedException_initWithJavaLangException_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRunnerFilterFactories)
