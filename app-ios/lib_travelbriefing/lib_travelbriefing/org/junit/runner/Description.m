//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/runner/Description.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Serializable.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/junit/runner/Description.h"

@interface OrgJunitRunnerDescription () {
 @public
  id<JavaUtilCollection> fChildren_;
  NSString *fDisplayName_;
  id<JavaIoSerializable> fUniqueId_;
  IOSObjectArray *fAnnotations_;
  volatile_id fTestClass_;
}

+ (NSString *)formatDisplayNameWithNSString:(NSString *)name
                               withNSString:(NSString *)className_;

- (instancetype)initWithIOSClass:(IOSClass *)clazz
                    withNSString:(NSString *)displayName
withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations;

- (instancetype)initWithIOSClass:(IOSClass *)testClass
                    withNSString:(NSString *)displayName
          withJavaIoSerializable:(id<JavaIoSerializable>)uniqueId
withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations;

- (NSString *)methodAndClassNamePatternGroupOrDefaultWithInt:(jint)group
                                                withNSString:(NSString *)defaultString;

@end

J2OBJC_FIELD_SETTER(OrgJunitRunnerDescription, fChildren_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(OrgJunitRunnerDescription, fDisplayName_, NSString *)
J2OBJC_FIELD_SETTER(OrgJunitRunnerDescription, fUniqueId_, id<JavaIoSerializable>)
J2OBJC_FIELD_SETTER(OrgJunitRunnerDescription, fAnnotations_, IOSObjectArray *)
J2OBJC_VOLATILE_FIELD_SETTER(OrgJunitRunnerDescription, fTestClass_, IOSClass *)

inline jlong OrgJunitRunnerDescription_get_serialVersionUID();
#define OrgJunitRunnerDescription_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJunitRunnerDescription, serialVersionUID, jlong)

inline JavaUtilRegexPattern *OrgJunitRunnerDescription_get_METHOD_AND_CLASS_NAME_PATTERN();
static JavaUtilRegexPattern *OrgJunitRunnerDescription_METHOD_AND_CLASS_NAME_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJunitRunnerDescription, METHOD_AND_CLASS_NAME_PATTERN, JavaUtilRegexPattern *)

__attribute__((unused)) static NSString *OrgJunitRunnerDescription_formatDisplayNameWithNSString_withNSString_(NSString *name, NSString *className_);

__attribute__((unused)) static void OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(OrgJunitRunnerDescription *self, IOSClass *clazz, NSString *displayName, IOSObjectArray *annotations);

__attribute__((unused)) static OrgJunitRunnerDescription *new_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(IOSClass *clazz, NSString *displayName, IOSObjectArray *annotations) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRunnerDescription *create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(IOSClass *clazz, NSString *displayName, IOSObjectArray *annotations);

__attribute__((unused)) static void OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(OrgJunitRunnerDescription *self, IOSClass *testClass, NSString *displayName, id<JavaIoSerializable> uniqueId, IOSObjectArray *annotations);

__attribute__((unused)) static OrgJunitRunnerDescription *new_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(IOSClass *testClass, NSString *displayName, id<JavaIoSerializable> uniqueId, IOSObjectArray *annotations) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRunnerDescription *create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(IOSClass *testClass, NSString *displayName, id<JavaIoSerializable> uniqueId, IOSObjectArray *annotations);

__attribute__((unused)) static NSString *OrgJunitRunnerDescription_methodAndClassNamePatternGroupOrDefaultWithInt_withNSString_(OrgJunitRunnerDescription *self, jint group, NSString *defaultString);

J2OBJC_INITIALIZED_DEFN(OrgJunitRunnerDescription)

OrgJunitRunnerDescription *OrgJunitRunnerDescription_EMPTY;
OrgJunitRunnerDescription *OrgJunitRunnerDescription_TEST_MECHANISM;

@implementation OrgJunitRunnerDescription

+ (OrgJunitRunnerDescription *)createSuiteDescriptionWithNSString:(NSString *)name
                            withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations {
  return OrgJunitRunnerDescription_createSuiteDescriptionWithNSString_withJavaLangAnnotationAnnotationArray_(name, annotations);
}

+ (OrgJunitRunnerDescription *)createSuiteDescriptionWithNSString:(NSString *)name
                                           withJavaIoSerializable:(id<JavaIoSerializable>)uniqueId
                            withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations {
  return OrgJunitRunnerDescription_createSuiteDescriptionWithNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(name, uniqueId, annotations);
}

+ (OrgJunitRunnerDescription *)createTestDescriptionWithNSString:(NSString *)className_
                                                    withNSString:(NSString *)name
                           withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations {
  return OrgJunitRunnerDescription_createTestDescriptionWithNSString_withNSString_withJavaLangAnnotationAnnotationArray_(className_, name, annotations);
}

+ (OrgJunitRunnerDescription *)createTestDescriptionWithIOSClass:(IOSClass *)clazz
                                                    withNSString:(NSString *)name
                           withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations {
  return OrgJunitRunnerDescription_createTestDescriptionWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(clazz, name, annotations);
}

+ (OrgJunitRunnerDescription *)createTestDescriptionWithIOSClass:(IOSClass *)clazz
                                                    withNSString:(NSString *)name {
  return OrgJunitRunnerDescription_createTestDescriptionWithIOSClass_withNSString_(clazz, name);
}

+ (OrgJunitRunnerDescription *)createTestDescriptionWithNSString:(NSString *)className_
                                                    withNSString:(NSString *)name
                                          withJavaIoSerializable:(id<JavaIoSerializable>)uniqueId {
  return OrgJunitRunnerDescription_createTestDescriptionWithNSString_withNSString_withJavaIoSerializable_(className_, name, uniqueId);
}

+ (NSString *)formatDisplayNameWithNSString:(NSString *)name
                               withNSString:(NSString *)className_ {
  return OrgJunitRunnerDescription_formatDisplayNameWithNSString_withNSString_(name, className_);
}

+ (OrgJunitRunnerDescription *)createSuiteDescriptionWithIOSClass:(IOSClass *)testClass {
  return OrgJunitRunnerDescription_createSuiteDescriptionWithIOSClass_(testClass);
}

- (instancetype)initWithIOSClass:(IOSClass *)clazz
                    withNSString:(NSString *)displayName
withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations {
  OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(self, clazz, displayName, annotations);
  return self;
}

- (instancetype)initWithIOSClass:(IOSClass *)testClass
                    withNSString:(NSString *)displayName
          withJavaIoSerializable:(id<JavaIoSerializable>)uniqueId
withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations {
  OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(self, testClass, displayName, uniqueId, annotations);
  return self;
}

- (NSString *)getDisplayName {
  return fDisplayName_;
}

- (void)addChildWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  [((id<JavaUtilCollection>) nil_chk(fChildren_)) addWithId:description_];
}

- (JavaUtilArrayList *)getChildren {
  return create_JavaUtilArrayList_initWithJavaUtilCollection_(fChildren_);
}

- (jboolean)isSuite {
  return ![self isTest];
}

- (jboolean)isTest {
  return [((id<JavaUtilCollection>) nil_chk(fChildren_)) isEmpty];
}

- (jint)testCount {
  if ([self isTest]) {
    return 1;
  }
  jint result = 0;
  for (OrgJunitRunnerDescription * __strong child in nil_chk(fChildren_)) {
    result += [((OrgJunitRunnerDescription *) nil_chk(child)) testCount];
  }
  return result;
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaIoSerializable>) nil_chk(fUniqueId_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgJunitRunnerDescription class]])) {
    return false;
  }
  OrgJunitRunnerDescription *d = (OrgJunitRunnerDescription *) cast_chk(obj, [OrgJunitRunnerDescription class]);
  return [((id<JavaIoSerializable>) nil_chk(fUniqueId_)) isEqual:((OrgJunitRunnerDescription *) nil_chk(d))->fUniqueId_];
}

- (NSString *)description {
  return [self getDisplayName];
}

- (jboolean)isEmpty {
  return [self isEqual:OrgJunitRunnerDescription_EMPTY];
}

- (OrgJunitRunnerDescription *)childlessCopy {
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(JreLoadVolatileId(&fTestClass_), fDisplayName_, fAnnotations_);
}

- (id<JavaLangAnnotationAnnotation>)getAnnotationWithIOSClass:(IOSClass *)annotationType {
  {
    IOSObjectArray *a__ = fAnnotations_;
    id<JavaLangAnnotationAnnotation> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<JavaLangAnnotationAnnotation> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangAnnotationAnnotation> each = *b__++;
      if ([((IOSClass *) nil_chk([((id<JavaLangAnnotationAnnotation>) nil_chk(each)) annotationType])) isEqual:annotationType]) {
        return [((IOSClass *) nil_chk(annotationType)) cast:each];
      }
    }
  }
  return nil;
}

- (id<JavaUtilCollection>)getAnnotations {
  return JavaUtilArrays_asListWithNSObjectArray_(fAnnotations_);
}

- (IOSClass *)getTestClass {
  if (JreLoadVolatileId(&fTestClass_) != nil) {
    return JreLoadVolatileId(&fTestClass_);
  }
  NSString *name = [self getClassName];
  if (name == nil) {
    return nil;
  }
  @try {
    JreVolatileStrongAssign(&fTestClass_, IOSClass_forName_initialize_classLoader_(name, false, [[self java_getClass] getClassLoader]));
    return JreLoadVolatileId(&fTestClass_);
  }
  @catch (JavaLangClassNotFoundException *e) {
    return nil;
  }
}

- (NSString *)getClassName {
  return JreLoadVolatileId(&fTestClass_) != nil ? [((IOSClass *) nil_chk(JreLoadVolatileId(&fTestClass_))) getName] : OrgJunitRunnerDescription_methodAndClassNamePatternGroupOrDefaultWithInt_withNSString_(self, 2, [self description]);
}

- (NSString *)getMethodName {
  return OrgJunitRunnerDescription_methodAndClassNamePatternGroupOrDefaultWithInt_withNSString_(self, 1, nil);
}

- (NSString *)methodAndClassNamePatternGroupOrDefaultWithInt:(jint)group
                                                withNSString:(NSString *)defaultString {
  return OrgJunitRunnerDescription_methodAndClassNamePatternGroupOrDefaultWithInt_withNSString_(self, group, defaultString);
}

- (void)__javaClone:(OrgJunitRunnerDescription *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&fTestClass_, &original->fTestClass_);
}

- (void)dealloc {
  RELEASE_(fChildren_);
  RELEASE_(fDisplayName_);
  RELEASE_(fUniqueId_);
  RELEASE_(fAnnotations_);
  JreReleaseVolatile(&fTestClass_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJunitRunnerDescription;", 0x89, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x89, 0, 2, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x89, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x89, 3, 5, -1, 6, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x9, 3, 7, -1, 8, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x9, 3, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x9, 0, 12, -1, 13, -1, -1 },
    { NULL, NULL, 0x82, -1, 5, -1, 14, -1, -1 },
    { NULL, NULL, 0x82, -1, 15, -1, 16, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, 19, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 23, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangAnnotationAnnotation;", 0x1, 24, 12, -1, 25, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 26, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 27, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 28, 29, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(createSuiteDescriptionWithNSString:withJavaLangAnnotationAnnotationArray:);
  methods[1].selector = @selector(createSuiteDescriptionWithNSString:withJavaIoSerializable:withJavaLangAnnotationAnnotationArray:);
  methods[2].selector = @selector(createTestDescriptionWithNSString:withNSString:withJavaLangAnnotationAnnotationArray:);
  methods[3].selector = @selector(createTestDescriptionWithIOSClass:withNSString:withJavaLangAnnotationAnnotationArray:);
  methods[4].selector = @selector(createTestDescriptionWithIOSClass:withNSString:);
  methods[5].selector = @selector(createTestDescriptionWithNSString:withNSString:withJavaIoSerializable:);
  methods[6].selector = @selector(formatDisplayNameWithNSString:withNSString:);
  methods[7].selector = @selector(createSuiteDescriptionWithIOSClass:);
  methods[8].selector = @selector(initWithIOSClass:withNSString:withJavaLangAnnotationAnnotationArray:);
  methods[9].selector = @selector(initWithIOSClass:withNSString:withJavaIoSerializable:withJavaLangAnnotationAnnotationArray:);
  methods[10].selector = @selector(getDisplayName);
  methods[11].selector = @selector(addChildWithOrgJunitRunnerDescription:);
  methods[12].selector = @selector(getChildren);
  methods[13].selector = @selector(isSuite);
  methods[14].selector = @selector(isTest);
  methods[15].selector = @selector(testCount);
  methods[16].selector = @selector(hash);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(description);
  methods[19].selector = @selector(isEmpty);
  methods[20].selector = @selector(childlessCopy);
  methods[21].selector = @selector(getAnnotationWithIOSClass:);
  methods[22].selector = @selector(getAnnotations);
  methods[23].selector = @selector(getTestClass);
  methods[24].selector = @selector(getClassName);
  methods[25].selector = @selector(getMethodName);
  methods[26].selector = @selector(methodAndClassNamePatternGroupOrDefaultWithInt:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJunitRunnerDescription_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "METHOD_AND_CLASS_NAME_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "EMPTY", "LOrgJunitRunnerDescription;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "TEST_MECHANISM", "LOrgJunitRunnerDescription;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "fChildren_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x12, -1, -1, 33, -1 },
    { "fDisplayName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fUniqueId_", "LJavaIoSerializable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fAnnotations_", "[LJavaLangAnnotationAnnotation;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fTestClass_", "LIOSClass;", .constantValue.asLong = 0, 0x42, -1, -1, 34, -1 },
  };
  static const void *ptrTable[] = { "createSuiteDescription", "LNSString;[LJavaLangAnnotationAnnotation;", "LNSString;LJavaIoSerializable;[LJavaLangAnnotationAnnotation;", "createTestDescription", "LNSString;LNSString;[LJavaLangAnnotationAnnotation;", "LIOSClass;LNSString;[LJavaLangAnnotationAnnotation;", "(Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/annotation/Annotation;)Lorg/junit/runner/Description;", "LIOSClass;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/String;)Lorg/junit/runner/Description;", "LNSString;LNSString;LJavaIoSerializable;", "formatDisplayName", "LNSString;LNSString;", "LIOSClass;", "(Ljava/lang/Class<*>;)Lorg/junit/runner/Description;", "(Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/annotation/Annotation;)V", "LIOSClass;LNSString;LJavaIoSerializable;[LJavaLangAnnotationAnnotation;", "(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/io/Serializable;[Ljava/lang/annotation/Annotation;)V", "addChild", "LOrgJunitRunnerDescription;", "()Ljava/util/ArrayList<Lorg/junit/runner/Description;>;", "hashCode", "equals", "LNSObject;", "toString", "getAnnotation", "<T::Ljava/lang/annotation/Annotation;>(Ljava/lang/Class<TT;>;)TT;", "()Ljava/util/Collection<Ljava/lang/annotation/Annotation;>;", "()Ljava/lang/Class<*>;", "methodAndClassNamePatternGroupOrDefault", "ILNSString;", &OrgJunitRunnerDescription_METHOD_AND_CLASS_NAME_PATTERN, &OrgJunitRunnerDescription_EMPTY, &OrgJunitRunnerDescription_TEST_MECHANISM, "Ljava/util/Collection<Lorg/junit/runner/Description;>;", "Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _OrgJunitRunnerDescription = { "Description", "org.junit.runner", ptrTable, methods, fields, 7, 0x1, 27, 9, -1, -1, -1, -1, -1 };
  return &_OrgJunitRunnerDescription;
}

+ (void)initialize {
  if (self == [OrgJunitRunnerDescription class]) {
    JreStrongAssign(&OrgJunitRunnerDescription_METHOD_AND_CLASS_NAME_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"([\\s\\S]*)\\((.*)\\)"));
    JreStrongAssignAndConsume(&OrgJunitRunnerDescription_EMPTY, new_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(nil, @"No Tests", [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()]));
    JreStrongAssignAndConsume(&OrgJunitRunnerDescription_TEST_MECHANISM, new_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(nil, @"Test mechanism", [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()]));
    J2OBJC_SET_INITIALIZED(OrgJunitRunnerDescription)
  }
}

@end

OrgJunitRunnerDescription *OrgJunitRunnerDescription_createSuiteDescriptionWithNSString_withJavaLangAnnotationAnnotationArray_(NSString *name, IOSObjectArray *annotations) {
  OrgJunitRunnerDescription_initialize();
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(nil, name, annotations);
}

OrgJunitRunnerDescription *OrgJunitRunnerDescription_createSuiteDescriptionWithNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(NSString *name, id<JavaIoSerializable> uniqueId, IOSObjectArray *annotations) {
  OrgJunitRunnerDescription_initialize();
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(nil, name, uniqueId, annotations);
}

OrgJunitRunnerDescription *OrgJunitRunnerDescription_createTestDescriptionWithNSString_withNSString_withJavaLangAnnotationAnnotationArray_(NSString *className_, NSString *name, IOSObjectArray *annotations) {
  OrgJunitRunnerDescription_initialize();
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(nil, OrgJunitRunnerDescription_formatDisplayNameWithNSString_withNSString_(name, className_), annotations);
}

OrgJunitRunnerDescription *OrgJunitRunnerDescription_createTestDescriptionWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(IOSClass *clazz, NSString *name, IOSObjectArray *annotations) {
  OrgJunitRunnerDescription_initialize();
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(clazz, OrgJunitRunnerDescription_formatDisplayNameWithNSString_withNSString_(name, [((IOSClass *) nil_chk(clazz)) getName]), annotations);
}

OrgJunitRunnerDescription *OrgJunitRunnerDescription_createTestDescriptionWithIOSClass_withNSString_(IOSClass *clazz, NSString *name) {
  OrgJunitRunnerDescription_initialize();
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(clazz, OrgJunitRunnerDescription_formatDisplayNameWithNSString_withNSString_(name, [((IOSClass *) nil_chk(clazz)) getName]), [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()]);
}

OrgJunitRunnerDescription *OrgJunitRunnerDescription_createTestDescriptionWithNSString_withNSString_withJavaIoSerializable_(NSString *className_, NSString *name, id<JavaIoSerializable> uniqueId) {
  OrgJunitRunnerDescription_initialize();
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(nil, OrgJunitRunnerDescription_formatDisplayNameWithNSString_withNSString_(name, className_), uniqueId, [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()]);
}

NSString *OrgJunitRunnerDescription_formatDisplayNameWithNSString_withNSString_(NSString *name, NSString *className_) {
  OrgJunitRunnerDescription_initialize();
  return NSString_java_formatWithNSString_withNSObjectArray_(@"%s(%s)", [IOSObjectArray arrayWithObjects:(id[]){ name, className_ } count:2 type:NSObject_class_()]);
}

OrgJunitRunnerDescription *OrgJunitRunnerDescription_createSuiteDescriptionWithIOSClass_(IOSClass *testClass) {
  OrgJunitRunnerDescription_initialize();
  return create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(testClass, [((IOSClass *) nil_chk(testClass)) getName], [testClass getAnnotations]);
}

void OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(OrgJunitRunnerDescription *self, IOSClass *clazz, NSString *displayName, IOSObjectArray *annotations) {
  OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(self, clazz, displayName, displayName, annotations);
}

OrgJunitRunnerDescription *new_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(IOSClass *clazz, NSString *displayName, IOSObjectArray *annotations) {
  J2OBJC_NEW_IMPL(OrgJunitRunnerDescription, initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_, clazz, displayName, annotations)
}

OrgJunitRunnerDescription *create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_(IOSClass *clazz, NSString *displayName, IOSObjectArray *annotations) {
  J2OBJC_CREATE_IMPL(OrgJunitRunnerDescription, initWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_, clazz, displayName, annotations)
}

void OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(OrgJunitRunnerDescription *self, IOSClass *testClass, NSString *displayName, id<JavaIoSerializable> uniqueId, IOSObjectArray *annotations) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->fChildren_, new_JavaUtilConcurrentConcurrentLinkedQueue_init());
  if ((displayName == nil) || (((jint) [((NSString *) nil_chk(displayName)) length]) == 0)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The display name must not be empty.");
  }
  if (uniqueId == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The unique id must not be null.");
  }
  JreVolatileStrongAssign(&self->fTestClass_, testClass);
  JreStrongAssign(&self->fDisplayName_, displayName);
  JreStrongAssign(&self->fUniqueId_, uniqueId);
  JreStrongAssign(&self->fAnnotations_, annotations);
}

OrgJunitRunnerDescription *new_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(IOSClass *testClass, NSString *displayName, id<JavaIoSerializable> uniqueId, IOSObjectArray *annotations) {
  J2OBJC_NEW_IMPL(OrgJunitRunnerDescription, initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_, testClass, displayName, uniqueId, annotations)
}

OrgJunitRunnerDescription *create_OrgJunitRunnerDescription_initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_(IOSClass *testClass, NSString *displayName, id<JavaIoSerializable> uniqueId, IOSObjectArray *annotations) {
  J2OBJC_CREATE_IMPL(OrgJunitRunnerDescription, initWithIOSClass_withNSString_withJavaIoSerializable_withJavaLangAnnotationAnnotationArray_, testClass, displayName, uniqueId, annotations)
}

NSString *OrgJunitRunnerDescription_methodAndClassNamePatternGroupOrDefaultWithInt_withNSString_(OrgJunitRunnerDescription *self, jint group, NSString *defaultString) {
  JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(OrgJunitRunnerDescription_METHOD_AND_CLASS_NAME_PATTERN)) matcherWithJavaLangCharSequence:[self description]];
  return [((JavaUtilRegexMatcher *) nil_chk(matcher)) matches] ? [matcher groupWithInt:group] : defaultString;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRunnerDescription)
