//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/builders/JUnit3Builder.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "junit/framework/TestCase.h"
#include "org/junit/internal/builders/JUnit3Builder.h"
#include "org/junit/internal/runners/JUnit38ClassRunner.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runners/model/RunnerBuilder.h"

@implementation OrgJunitInternalBuildersJUnit3Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitInternalBuildersJUnit3Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJunitRunnerRunner *)runnerForClassWithIOSClass:(IOSClass *)testClass {
  if ([self isPre4TestWithIOSClass:testClass]) {
    return create_OrgJunitInternalRunnersJUnit38ClassRunner_initWithIOSClass_(testClass);
  }
  return nil;
}

- (jboolean)isPre4TestWithIOSClass:(IOSClass *)testClass {
  return [JunitFrameworkTestCase_class_() isAssignableFrom:testClass];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerRunner;", 0x1, 0, 1, 2, 3, -1, -1 },
    { NULL, "Z", 0x0, 4, 1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(runnerForClassWithIOSClass:);
  methods[2].selector = @selector(isPre4TestWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "runnerForClass", "LIOSClass;", "LNSException;", "(Ljava/lang/Class<*>;)Lorg/junit/runner/Runner;", "isPre4Test", "(Ljava/lang/Class<*>;)Z" };
  static const J2ObjcClassInfo _OrgJunitInternalBuildersJUnit3Builder = { "JUnit3Builder", "org.junit.internal.builders", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalBuildersJUnit3Builder;
}

@end

void OrgJunitInternalBuildersJUnit3Builder_init(OrgJunitInternalBuildersJUnit3Builder *self) {
  OrgJunitRunnersModelRunnerBuilder_init(self);
}

OrgJunitInternalBuildersJUnit3Builder *new_OrgJunitInternalBuildersJUnit3Builder_init() {
  J2OBJC_NEW_IMPL(OrgJunitInternalBuildersJUnit3Builder, init)
}

OrgJunitInternalBuildersJUnit3Builder *create_OrgJunitInternalBuildersJUnit3Builder_init() {
  J2OBJC_CREATE_IMPL(OrgJunitInternalBuildersJUnit3Builder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalBuildersJUnit3Builder)
