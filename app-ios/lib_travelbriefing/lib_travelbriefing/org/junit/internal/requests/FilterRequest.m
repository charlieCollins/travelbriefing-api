//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/requests/FilterRequest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/junit/internal/requests/FilterRequest.h"
#include "org/junit/internal/runners/ErrorReportingRunner.h"
#include "org/junit/runner/Request.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runner/manipulation/Filter.h"
#include "org/junit/runner/manipulation/NoTestsRemainException.h"

@interface OrgJunitInternalRequestsFilterRequest () {
 @public
  OrgJunitRunnerRequest *request_;
  OrgJunitRunnerManipulationFilter *fFilter_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalRequestsFilterRequest, request_, OrgJunitRunnerRequest *)
J2OBJC_FIELD_SETTER(OrgJunitInternalRequestsFilterRequest, fFilter_, OrgJunitRunnerManipulationFilter *)

@implementation OrgJunitInternalRequestsFilterRequest

- (instancetype)initWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request
         withOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)filter {
  OrgJunitInternalRequestsFilterRequest_initWithOrgJunitRunnerRequest_withOrgJunitRunnerManipulationFilter_(self, request, filter);
  return self;
}

- (OrgJunitRunnerRunner *)getRunner {
  @try {
    OrgJunitRunnerRunner *runner = [((OrgJunitRunnerRequest *) nil_chk(request_)) getRunner];
    [((OrgJunitRunnerManipulationFilter *) nil_chk(fFilter_)) applyWithId:runner];
    return runner;
  }
  @catch (OrgJunitRunnerManipulationNoTestsRemainException *e) {
    return create_OrgJunitInternalRunnersErrorReportingRunner_initWithIOSClass_withNSException_(OrgJunitRunnerManipulationFilter_class_(), create_JavaLangException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"No tests found matching %s from %s", [IOSObjectArray arrayWithObjects:(id[]){ [((OrgJunitRunnerManipulationFilter *) nil_chk(fFilter_)) describe], [request_ description] } count:2 type:NSObject_class_()])));
  }
}

- (void)dealloc {
  RELEASE_(request_);
  RELEASE_(fFilter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerRunner;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnerRequest:withOrgJunitRunnerManipulationFilter:);
  methods[1].selector = @selector(getRunner);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "request_", "LOrgJunitRunnerRequest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fFilter_", "LOrgJunitRunnerManipulationFilter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitRunnerRequest;LOrgJunitRunnerManipulationFilter;" };
  static const J2ObjcClassInfo _OrgJunitInternalRequestsFilterRequest = { "FilterRequest", "org.junit.internal.requests", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalRequestsFilterRequest;
}

@end

void OrgJunitInternalRequestsFilterRequest_initWithOrgJunitRunnerRequest_withOrgJunitRunnerManipulationFilter_(OrgJunitInternalRequestsFilterRequest *self, OrgJunitRunnerRequest *request, OrgJunitRunnerManipulationFilter *filter) {
  OrgJunitRunnerRequest_init(self);
  JreStrongAssign(&self->request_, request);
  JreStrongAssign(&self->fFilter_, filter);
}

OrgJunitInternalRequestsFilterRequest *new_OrgJunitInternalRequestsFilterRequest_initWithOrgJunitRunnerRequest_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerRequest *request, OrgJunitRunnerManipulationFilter *filter) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRequestsFilterRequest, initWithOrgJunitRunnerRequest_withOrgJunitRunnerManipulationFilter_, request, filter)
}

OrgJunitInternalRequestsFilterRequest *create_OrgJunitInternalRequestsFilterRequest_initWithOrgJunitRunnerRequest_withOrgJunitRunnerManipulationFilter_(OrgJunitRunnerRequest *request, OrgJunitRunnerManipulationFilter *filter) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRequestsFilterRequest, initWithOrgJunitRunnerRequest_withOrgJunitRunnerManipulationFilter_, request, filter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRequestsFilterRequest)
