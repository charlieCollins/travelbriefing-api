//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/runners/MethodRoadie.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/util/List.h"
#include "java/util/concurrent/Callable.h"
#include "java/util/concurrent/ExecutorService.h"
#include "java/util/concurrent/Executors.h"
#include "java/util/concurrent/Future.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/TimeoutException.h"
#include "org/junit/internal/AssumptionViolatedException.h"
#include "org/junit/internal/runners/FailedBefore.h"
#include "org/junit/internal/runners/MethodRoadie.h"
#include "org/junit/internal/runners/TestMethod.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/notification/Failure.h"
#include "org/junit/runner/notification/RunNotifier.h"
#include "org/junit/runners/model/TestTimedOutException.h"

@interface OrgJunitInternalRunnersMethodRoadie () {
 @public
  id test_;
  OrgJunitRunnerNotificationRunNotifier *notifier_;
  OrgJunitRunnerDescription *description__;
  OrgJunitInternalRunnersTestMethod *testMethod_;
}

- (void)runWithTimeoutWithLong:(jlong)timeout;

- (void)runBefores;

- (void)runAfters;

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersMethodRoadie, test_, id)
J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersMethodRoadie, notifier_, OrgJunitRunnerNotificationRunNotifier *)
J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersMethodRoadie, description__, OrgJunitRunnerDescription *)
J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersMethodRoadie, testMethod_, OrgJunitInternalRunnersTestMethod *)

__attribute__((unused)) static void OrgJunitInternalRunnersMethodRoadie_runWithTimeoutWithLong_(OrgJunitInternalRunnersMethodRoadie *self, jlong timeout);

__attribute__((unused)) static void OrgJunitInternalRunnersMethodRoadie_runBefores(OrgJunitInternalRunnersMethodRoadie *self);

__attribute__((unused)) static void OrgJunitInternalRunnersMethodRoadie_runAfters(OrgJunitInternalRunnersMethodRoadie *self);

__attribute__((unused)) static IOSObjectArray *OrgJunitInternalRunnersMethodRoadie__Annotations$0();

@interface OrgJunitInternalRunnersMethodRoadie_1 : NSObject < JavaLangRunnable > {
 @public
  OrgJunitInternalRunnersMethodRoadie *this$0_;
  jlong val$timeout_;
}

- (instancetype)initWithOrgJunitInternalRunnersMethodRoadie:(OrgJunitInternalRunnersMethodRoadie *)outer$
                                                   withLong:(jlong)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitInternalRunnersMethodRoadie_1)

__attribute__((unused)) static void OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(OrgJunitInternalRunnersMethodRoadie_1 *self, OrgJunitInternalRunnersMethodRoadie *outer$, jlong capture$0);

__attribute__((unused)) static OrgJunitInternalRunnersMethodRoadie_1 *new_OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(OrgJunitInternalRunnersMethodRoadie *outer$, jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitInternalRunnersMethodRoadie_1 *create_OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(OrgJunitInternalRunnersMethodRoadie *outer$, jlong capture$0);

@interface OrgJunitInternalRunnersMethodRoadie_1_1 : NSObject < JavaUtilConcurrentCallable > {
 @public
  OrgJunitInternalRunnersMethodRoadie_1 *this$0_;
}

- (instancetype)initWithOrgJunitInternalRunnersMethodRoadie_1:(OrgJunitInternalRunnersMethodRoadie_1 *)outer$;

- (id)call;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitInternalRunnersMethodRoadie_1_1)

__attribute__((unused)) static void OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(OrgJunitInternalRunnersMethodRoadie_1_1 *self, OrgJunitInternalRunnersMethodRoadie_1 *outer$);

__attribute__((unused)) static OrgJunitInternalRunnersMethodRoadie_1_1 *new_OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(OrgJunitInternalRunnersMethodRoadie_1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitInternalRunnersMethodRoadie_1_1 *create_OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(OrgJunitInternalRunnersMethodRoadie_1 *outer$);

@interface OrgJunitInternalRunnersMethodRoadie_2 : NSObject < JavaLangRunnable > {
 @public
  OrgJunitInternalRunnersMethodRoadie *this$0_;
}

- (instancetype)initWithOrgJunitInternalRunnersMethodRoadie:(OrgJunitInternalRunnersMethodRoadie *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitInternalRunnersMethodRoadie_2)

__attribute__((unused)) static void OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(OrgJunitInternalRunnersMethodRoadie_2 *self, OrgJunitInternalRunnersMethodRoadie *outer$);

__attribute__((unused)) static OrgJunitInternalRunnersMethodRoadie_2 *new_OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(OrgJunitInternalRunnersMethodRoadie *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitInternalRunnersMethodRoadie_2 *create_OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(OrgJunitInternalRunnersMethodRoadie *outer$);

@implementation OrgJunitInternalRunnersMethodRoadie

- (instancetype)initWithId:(id)test
withOrgJunitInternalRunnersTestMethod:(OrgJunitInternalRunnersTestMethod *)method
withOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier
withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  OrgJunitInternalRunnersMethodRoadie_initWithId_withOrgJunitInternalRunnersTestMethod_withOrgJunitRunnerNotificationRunNotifier_withOrgJunitRunnerDescription_(self, test, method, notifier, description_);
  return self;
}

- (void)run {
  if ([((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) isIgnored]) {
    [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(notifier_)) fireTestIgnoredWithOrgJunitRunnerDescription:description__];
    return;
  }
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(notifier_)) fireTestStartedWithOrgJunitRunnerDescription:description__];
  @try {
    jlong timeout = [((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) getTimeout];
    if (timeout > 0) {
      OrgJunitInternalRunnersMethodRoadie_runWithTimeoutWithLong_(self, timeout);
    }
    else {
      [self runTest];
    }
  }
  @finally {
    [notifier_ fireTestFinishedWithOrgJunitRunnerDescription:description__];
  }
}

- (void)runWithTimeoutWithLong:(jlong)timeout {
  OrgJunitInternalRunnersMethodRoadie_runWithTimeoutWithLong_(self, timeout);
}

- (void)runTest {
  [self runBeforesThenTestThenAftersWithJavaLangRunnable:create_OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(self)];
}

- (void)runBeforesThenTestThenAftersWithJavaLangRunnable:(id<JavaLangRunnable>)test {
  @try {
    OrgJunitInternalRunnersMethodRoadie_runBefores(self);
    [((id<JavaLangRunnable>) nil_chk(test)) run];
  }
  @catch (OrgJunitInternalRunnersFailedBefore *e) {
  }
  @catch (JavaLangException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_(@"test should never throw an exception to this level");
  }
  @finally {
    OrgJunitInternalRunnersMethodRoadie_runAfters(self);
  }
}

- (void)runTestMethod {
  @try {
    [((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) invokeWithId:test_];
    if ([((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) expectsException]) {
      [self addFailureWithNSException:create_JavaLangAssertionError_initWithId_(JreStrcat("$$", @"Expected exception: ", [((IOSClass *) nil_chk([((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) getExpectedException])) getName]))];
    }
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    NSException *actual = [((JavaLangReflectInvocationTargetException *) nil_chk(e)) getTargetException];
    if ([actual isKindOfClass:[OrgJunitInternalAssumptionViolatedException class]]) {
      return;
    }
    else if (![((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) expectsException]) {
      [self addFailureWithNSException:actual];
    }
    else if ([((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) isUnexpectedWithNSException:actual]) {
      NSString *message = JreStrcat("$$$$C", @"Unexpected exception, expected<", [((IOSClass *) nil_chk([((OrgJunitInternalRunnersTestMethod *) nil_chk(testMethod_)) getExpectedException])) getName], @"> but was<", [[((NSException *) nil_chk(actual)) java_getClass] getName], '>');
      [self addFailureWithNSException:create_JavaLangException_initWithNSString_withNSException_(message, actual)];
    }
  }
  @catch (NSException *e) {
    [self addFailureWithNSException:e];
  }
}

- (void)runBefores {
  OrgJunitInternalRunnersMethodRoadie_runBefores(self);
}

- (void)runAfters {
  OrgJunitInternalRunnersMethodRoadie_runAfters(self);
}

- (void)addFailureWithNSException:(NSException *)e {
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(notifier_)) fireTestFailureWithOrgJunitRunnerNotificationFailure:create_OrgJunitRunnerNotificationFailure_initWithOrgJunitRunnerDescription_withNSException_(description__, e)];
}

- (void)dealloc {
  RELEASE_(test_);
  RELEASE_(notifier_);
  RELEASE_(description__);
  RELEASE_(testMethod_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 5, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withOrgJunitInternalRunnersTestMethod:withOrgJunitRunnerNotificationRunNotifier:withOrgJunitRunnerDescription:);
  methods[1].selector = @selector(run);
  methods[2].selector = @selector(runWithTimeoutWithLong:);
  methods[3].selector = @selector(runTest);
  methods[4].selector = @selector(runBeforesThenTestThenAftersWithJavaLangRunnable:);
  methods[5].selector = @selector(runTestMethod);
  methods[6].selector = @selector(runBefores);
  methods[7].selector = @selector(runAfters);
  methods[8].selector = @selector(addFailureWithNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "test_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "notifier_", "LOrgJunitRunnerNotificationRunNotifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "description__", "LOrgJunitRunnerDescription;", .constantValue.asLong = 0, 0x12, 8, -1, -1, -1 },
    { "testMethod_", "LOrgJunitInternalRunnersTestMethod;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LOrgJunitInternalRunnersTestMethod;LOrgJunitRunnerNotificationRunNotifier;LOrgJunitRunnerDescription;", "runWithTimeout", "J", "runBeforesThenTestThenAfters", "LJavaLangRunnable;", "LOrgJunitInternalRunnersFailedBefore;", "addFailure", "LNSException;", "description", (void *)&OrgJunitInternalRunnersMethodRoadie__Annotations$0 };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersMethodRoadie = { "MethodRoadie", "org.junit.internal.runners", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, -1, 9 };
  return &_OrgJunitInternalRunnersMethodRoadie;
}

@end

void OrgJunitInternalRunnersMethodRoadie_initWithId_withOrgJunitInternalRunnersTestMethod_withOrgJunitRunnerNotificationRunNotifier_withOrgJunitRunnerDescription_(OrgJunitInternalRunnersMethodRoadie *self, id test, OrgJunitInternalRunnersTestMethod *method, OrgJunitRunnerNotificationRunNotifier *notifier, OrgJunitRunnerDescription *description_) {
  NSObject_init(self);
  JreStrongAssign(&self->test_, test);
  JreStrongAssign(&self->notifier_, notifier);
  JreStrongAssign(&self->description__, description_);
  JreStrongAssign(&self->testMethod_, method);
}

OrgJunitInternalRunnersMethodRoadie *new_OrgJunitInternalRunnersMethodRoadie_initWithId_withOrgJunitInternalRunnersTestMethod_withOrgJunitRunnerNotificationRunNotifier_withOrgJunitRunnerDescription_(id test, OrgJunitInternalRunnersTestMethod *method, OrgJunitRunnerNotificationRunNotifier *notifier, OrgJunitRunnerDescription *description_) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersMethodRoadie, initWithId_withOrgJunitInternalRunnersTestMethod_withOrgJunitRunnerNotificationRunNotifier_withOrgJunitRunnerDescription_, test, method, notifier, description_)
}

OrgJunitInternalRunnersMethodRoadie *create_OrgJunitInternalRunnersMethodRoadie_initWithId_withOrgJunitInternalRunnersTestMethod_withOrgJunitRunnerNotificationRunNotifier_withOrgJunitRunnerDescription_(id test, OrgJunitInternalRunnersTestMethod *method, OrgJunitRunnerNotificationRunNotifier *notifier, OrgJunitRunnerDescription *description_) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersMethodRoadie, initWithId_withOrgJunitInternalRunnersTestMethod_withOrgJunitRunnerNotificationRunNotifier_withOrgJunitRunnerDescription_, test, method, notifier, description_)
}

void OrgJunitInternalRunnersMethodRoadie_runWithTimeoutWithLong_(OrgJunitInternalRunnersMethodRoadie *self, jlong timeout) {
  [self runBeforesThenTestThenAftersWithJavaLangRunnable:create_OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(self, timeout)];
}

void OrgJunitInternalRunnersMethodRoadie_runBefores(OrgJunitInternalRunnersMethodRoadie *self) {
  @try {
    @try {
      id<JavaUtilList> befores = [((OrgJunitInternalRunnersTestMethod *) nil_chk(self->testMethod_)) getBefores];
      for (JavaLangReflectMethod * __strong before in nil_chk(befores)) {
        [((JavaLangReflectMethod *) nil_chk(before)) invokeWithId:self->test_ withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
      }
    }
    @catch (JavaLangReflectInvocationTargetException *e) {
      @throw [((JavaLangReflectInvocationTargetException *) nil_chk(e)) getTargetException];
    }
  }
  @catch (OrgJunitInternalAssumptionViolatedException *e) {
    @throw create_OrgJunitInternalRunnersFailedBefore_init();
  }
  @catch (NSException *e) {
    [self addFailureWithNSException:e];
    @throw create_OrgJunitInternalRunnersFailedBefore_init();
  }
}

void OrgJunitInternalRunnersMethodRoadie_runAfters(OrgJunitInternalRunnersMethodRoadie *self) {
  id<JavaUtilList> afters = [((OrgJunitInternalRunnersTestMethod *) nil_chk(self->testMethod_)) getAfters];
  for (JavaLangReflectMethod * __strong after in nil_chk(afters)) {
    @try {
      [((JavaLangReflectMethod *) nil_chk(after)) invokeWithId:self->test_ withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
    }
    @catch (JavaLangReflectInvocationTargetException *e) {
      [self addFailureWithNSException:[((JavaLangReflectInvocationTargetException *) nil_chk(e)) getTargetException]];
    }
    @catch (NSException *e) {
      [self addFailureWithNSException:e];
    }
  }
}

IOSObjectArray *OrgJunitInternalRunnersMethodRoadie__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersMethodRoadie)

@implementation OrgJunitInternalRunnersMethodRoadie_1

- (instancetype)initWithOrgJunitInternalRunnersMethodRoadie:(OrgJunitInternalRunnersMethodRoadie *)outer$
                                                   withLong:(jlong)capture$0 {
  OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(self, outer$, capture$0);
  return self;
}

- (void)run {
  id<JavaUtilConcurrentExecutorService> service = JavaUtilConcurrentExecutors_newSingleThreadExecutor();
  id<JavaUtilConcurrentCallable> callable = create_OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(self);
  id<JavaUtilConcurrentFuture> result = [((id<JavaUtilConcurrentExecutorService>) nil_chk(service)) submitWithJavaUtilConcurrentCallable:callable];
  [service shutdown];
  @try {
    jboolean terminated = [service awaitTerminationWithLong:val$timeout_ withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
    if (!terminated) {
      [service shutdownNow];
    }
    [((id<JavaUtilConcurrentFuture>) nil_chk(result)) getWithLong:0 withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  }
  @catch (JavaUtilConcurrentTimeoutException *e) {
    [this$0_ addFailureWithNSException:create_OrgJunitRunnersModelTestTimedOutException_initWithLong_withJavaUtilConcurrentTimeUnit_(val$timeout_, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS))];
  }
  @catch (JavaLangException *e) {
    [this$0_ addFailureWithNSException:e];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitInternalRunnersMethodRoadie:withLong:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitInternalRunnersMethodRoadie;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$timeout_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitInternalRunnersMethodRoadie;", "runWithTimeoutWithLong:" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersMethodRoadie_1 = { "", "org.junit.internal.runners", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
  return &_OrgJunitInternalRunnersMethodRoadie_1;
}

@end

void OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(OrgJunitInternalRunnersMethodRoadie_1 *self, OrgJunitInternalRunnersMethodRoadie *outer$, jlong capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$timeout_ = capture$0;
  NSObject_init(self);
}

OrgJunitInternalRunnersMethodRoadie_1 *new_OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(OrgJunitInternalRunnersMethodRoadie *outer$, jlong capture$0) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersMethodRoadie_1, initWithOrgJunitInternalRunnersMethodRoadie_withLong_, outer$, capture$0)
}

OrgJunitInternalRunnersMethodRoadie_1 *create_OrgJunitInternalRunnersMethodRoadie_1_initWithOrgJunitInternalRunnersMethodRoadie_withLong_(OrgJunitInternalRunnersMethodRoadie *outer$, jlong capture$0) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersMethodRoadie_1, initWithOrgJunitInternalRunnersMethodRoadie_withLong_, outer$, capture$0)
}

@implementation OrgJunitInternalRunnersMethodRoadie_1_1

- (instancetype)initWithOrgJunitInternalRunnersMethodRoadie_1:(OrgJunitInternalRunnersMethodRoadie_1 *)outer$ {
  OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(self, outer$);
  return self;
}

- (id)call {
  [this$0_->this$0_ runTestMethod];
  return nil;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitInternalRunnersMethodRoadie_1:);
  methods[1].selector = @selector(call);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitInternalRunnersMethodRoadie_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LOrgJunitInternalRunnersMethodRoadie_1;", "run", "Ljava/lang/Object;Ljava/util/concurrent/Callable<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersMethodRoadie_1_1 = { "", "org.junit.internal.runners", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
  return &_OrgJunitInternalRunnersMethodRoadie_1_1;
}

@end

void OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(OrgJunitInternalRunnersMethodRoadie_1_1 *self, OrgJunitInternalRunnersMethodRoadie_1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgJunitInternalRunnersMethodRoadie_1_1 *new_OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(OrgJunitInternalRunnersMethodRoadie_1 *outer$) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersMethodRoadie_1_1, initWithOrgJunitInternalRunnersMethodRoadie_1_, outer$)
}

OrgJunitInternalRunnersMethodRoadie_1_1 *create_OrgJunitInternalRunnersMethodRoadie_1_1_initWithOrgJunitInternalRunnersMethodRoadie_1_(OrgJunitInternalRunnersMethodRoadie_1 *outer$) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersMethodRoadie_1_1, initWithOrgJunitInternalRunnersMethodRoadie_1_, outer$)
}

@implementation OrgJunitInternalRunnersMethodRoadie_2

- (instancetype)initWithOrgJunitInternalRunnersMethodRoadie:(OrgJunitInternalRunnersMethodRoadie *)outer$ {
  OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(self, outer$);
  return self;
}

- (void)run {
  [this$0_ runTestMethod];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitInternalRunnersMethodRoadie:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitInternalRunnersMethodRoadie;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitInternalRunnersMethodRoadie;", "runTest" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersMethodRoadie_2 = { "", "org.junit.internal.runners", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_OrgJunitInternalRunnersMethodRoadie_2;
}

@end

void OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(OrgJunitInternalRunnersMethodRoadie_2 *self, OrgJunitInternalRunnersMethodRoadie *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgJunitInternalRunnersMethodRoadie_2 *new_OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(OrgJunitInternalRunnersMethodRoadie *outer$) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersMethodRoadie_2, initWithOrgJunitInternalRunnersMethodRoadie_, outer$)
}

OrgJunitInternalRunnersMethodRoadie_2 *create_OrgJunitInternalRunnersMethodRoadie_2_initWithOrgJunitInternalRunnersMethodRoadie_(OrgJunitInternalRunnersMethodRoadie *outer$) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersMethodRoadie_2, initWithOrgJunitInternalRunnersMethodRoadie_, outer$)
}
