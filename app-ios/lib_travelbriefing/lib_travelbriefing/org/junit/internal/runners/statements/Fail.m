//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/runners/statements/Fail.java
//

#include "J2ObjC_source.h"
#include "org/junit/internal/runners/statements/Fail.h"
#include "org/junit/runners/model/Statement.h"

@interface OrgJunitInternalRunnersStatementsFail () {
 @public
  NSException *error_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsFail, error_, NSException *)

@implementation OrgJunitInternalRunnersStatementsFail

- (instancetype)initWithNSException:(NSException *)e {
  OrgJunitInternalRunnersStatementsFail_initWithNSException_(self, e);
  return self;
}

- (void)evaluate {
  @throw error_;
}

- (void)dealloc {
  RELEASE_(error_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSException:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "error_", "LNSException;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSException;" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersStatementsFail = { "Fail", "org.junit.internal.runners.statements", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalRunnersStatementsFail;
}

@end

void OrgJunitInternalRunnersStatementsFail_initWithNSException_(OrgJunitInternalRunnersStatementsFail *self, NSException *e) {
  OrgJunitRunnersModelStatement_init(self);
  JreStrongAssign(&self->error_, e);
}

OrgJunitInternalRunnersStatementsFail *new_OrgJunitInternalRunnersStatementsFail_initWithNSException_(NSException *e) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersStatementsFail, initWithNSException_, e)
}

OrgJunitInternalRunnersStatementsFail *create_OrgJunitInternalRunnersStatementsFail_initWithNSException_(NSException *e) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersStatementsFail, initWithNSException_, e)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersStatementsFail)
