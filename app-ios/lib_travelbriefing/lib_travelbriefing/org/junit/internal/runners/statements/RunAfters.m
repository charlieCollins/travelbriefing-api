//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/runners/statements/RunAfters.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/junit/internal/runners/statements/RunAfters.h"
#include "org/junit/runners/model/FrameworkMethod.h"
#include "org/junit/runners/model/MultipleFailureException.h"
#include "org/junit/runners/model/Statement.h"

@interface OrgJunitInternalRunnersStatementsRunAfters () {
 @public
  OrgJunitRunnersModelStatement *next_;
  id target_;
  id<JavaUtilList> afters_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsRunAfters, next_, OrgJunitRunnersModelStatement *)
J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsRunAfters, target_, id)
J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersStatementsRunAfters, afters_, id<JavaUtilList>)

@implementation OrgJunitInternalRunnersStatementsRunAfters

- (instancetype)initWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)next
                                     withJavaUtilList:(id<JavaUtilList>)afters
                                               withId:(id)target {
  OrgJunitInternalRunnersStatementsRunAfters_initWithOrgJunitRunnersModelStatement_withJavaUtilList_withId_(self, next, afters, target);
  return self;
}

- (void)evaluate {
  id<JavaUtilList> errors = create_JavaUtilArrayList_init();
  @try {
    [((OrgJunitRunnersModelStatement *) nil_chk(next_)) evaluate];
  }
  @catch (NSException *e) {
    [errors addWithId:e];
  }
  @finally {
    for (OrgJunitRunnersModelFrameworkMethod * __strong each in nil_chk(afters_)) {
      @try {
        [((OrgJunitRunnersModelFrameworkMethod *) nil_chk(each)) invokeExplosivelyWithId:target_ withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
      }
      @catch (NSException *e) {
        [errors addWithId:e];
      }
    }
  }
  OrgJunitRunnersModelMultipleFailureException_assertEmptyWithJavaUtilList_(errors);
}

- (void)dealloc {
  RELEASE_(next_);
  RELEASE_(target_);
  RELEASE_(afters_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnersModelStatement:withJavaUtilList:withId:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "next_", "LOrgJunitRunnersModelStatement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "target_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "afters_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitRunnersModelStatement;LJavaUtilList;LNSObject;", "(Lorg/junit/runners/model/Statement;Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;Ljava/lang/Object;)V", "LNSException;", "Ljava/util/List<Lorg/junit/runners/model/FrameworkMethod;>;" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersStatementsRunAfters = { "RunAfters", "org.junit.internal.runners.statements", ptrTable, methods, fields, 7, 0x1, 2, 3, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalRunnersStatementsRunAfters;
}

@end

void OrgJunitInternalRunnersStatementsRunAfters_initWithOrgJunitRunnersModelStatement_withJavaUtilList_withId_(OrgJunitInternalRunnersStatementsRunAfters *self, OrgJunitRunnersModelStatement *next, id<JavaUtilList> afters, id target) {
  OrgJunitRunnersModelStatement_init(self);
  JreStrongAssign(&self->next_, next);
  JreStrongAssign(&self->afters_, afters);
  JreStrongAssign(&self->target_, target);
}

OrgJunitInternalRunnersStatementsRunAfters *new_OrgJunitInternalRunnersStatementsRunAfters_initWithOrgJunitRunnersModelStatement_withJavaUtilList_withId_(OrgJunitRunnersModelStatement *next, id<JavaUtilList> afters, id target) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersStatementsRunAfters, initWithOrgJunitRunnersModelStatement_withJavaUtilList_withId_, next, afters, target)
}

OrgJunitInternalRunnersStatementsRunAfters *create_OrgJunitInternalRunnersStatementsRunAfters_initWithOrgJunitRunnersModelStatement_withJavaUtilList_withId_(OrgJunitRunnersModelStatement *next, id<JavaUtilList> afters, id target) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersStatementsRunAfters, initWithOrgJunitRunnersModelStatement_withJavaUtilList_withId_, next, afters, target)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersStatementsRunAfters)
