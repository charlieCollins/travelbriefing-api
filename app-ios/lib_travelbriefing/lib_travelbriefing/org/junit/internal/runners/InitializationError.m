//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/runners/InitializationError.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/junit/internal/runners/InitializationError.h"

@interface OrgJunitInternalRunnersInitializationError () {
 @public
  id<JavaUtilList> fErrors_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersInitializationError, fErrors_, id<JavaUtilList>)

inline jlong OrgJunitInternalRunnersInitializationError_get_serialVersionUID();
#define OrgJunitInternalRunnersInitializationError_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJunitInternalRunnersInitializationError, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *OrgJunitInternalRunnersInitializationError__Annotations$0();

@implementation OrgJunitInternalRunnersInitializationError

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)errors {
  OrgJunitInternalRunnersInitializationError_initWithJavaUtilList_(self, errors);
  return self;
}

- (instancetype)initWithNSExceptionArray:(IOSObjectArray *)errors {
  OrgJunitInternalRunnersInitializationError_initWithNSExceptionArray_(self, errors);
  return self;
}

- (instancetype)initWithNSString:(NSString *)string {
  OrgJunitInternalRunnersInitializationError_initWithNSString_(self, string);
  return self;
}

- (id<JavaUtilList>)getCauses {
  return fErrors_;
}

- (void)dealloc {
  RELEASE_(fErrors_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x81, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(initWithNSExceptionArray:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(getCauses);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJunitInternalRunnersInitializationError_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "fErrors_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Throwable;>;)V", "[LNSException;", "LNSString;", "()Ljava/util/List<Ljava/lang/Throwable;>;", "Ljava/util/List<Ljava/lang/Throwable;>;", (void *)&OrgJunitInternalRunnersInitializationError__Annotations$0 };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersInitializationError = { "InitializationError", "org.junit.internal.runners", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, 6 };
  return &_OrgJunitInternalRunnersInitializationError;
}

@end

void OrgJunitInternalRunnersInitializationError_initWithJavaUtilList_(OrgJunitInternalRunnersInitializationError *self, id<JavaUtilList> errors) {
  JavaLangException_init(self);
  JreStrongAssign(&self->fErrors_, errors);
}

OrgJunitInternalRunnersInitializationError *new_OrgJunitInternalRunnersInitializationError_initWithJavaUtilList_(id<JavaUtilList> errors) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersInitializationError, initWithJavaUtilList_, errors)
}

OrgJunitInternalRunnersInitializationError *create_OrgJunitInternalRunnersInitializationError_initWithJavaUtilList_(id<JavaUtilList> errors) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersInitializationError, initWithJavaUtilList_, errors)
}

void OrgJunitInternalRunnersInitializationError_initWithNSExceptionArray_(OrgJunitInternalRunnersInitializationError *self, IOSObjectArray *errors) {
  OrgJunitInternalRunnersInitializationError_initWithJavaUtilList_(self, JavaUtilArrays_asListWithNSObjectArray_(errors));
}

OrgJunitInternalRunnersInitializationError *new_OrgJunitInternalRunnersInitializationError_initWithNSExceptionArray_(IOSObjectArray *errors) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersInitializationError, initWithNSExceptionArray_, errors)
}

OrgJunitInternalRunnersInitializationError *create_OrgJunitInternalRunnersInitializationError_initWithNSExceptionArray_(IOSObjectArray *errors) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersInitializationError, initWithNSExceptionArray_, errors)
}

void OrgJunitInternalRunnersInitializationError_initWithNSString_(OrgJunitInternalRunnersInitializationError *self, NSString *string) {
  OrgJunitInternalRunnersInitializationError_initWithNSExceptionArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangException_initWithNSString_(string) } count:1 type:NSException_class_()]);
}

OrgJunitInternalRunnersInitializationError *new_OrgJunitInternalRunnersInitializationError_initWithNSString_(NSString *string) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersInitializationError, initWithNSString_, string)
}

OrgJunitInternalRunnersInitializationError *create_OrgJunitInternalRunnersInitializationError_initWithNSString_(NSString *string) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersInitializationError, initWithNSString_, string)
}

IOSObjectArray *OrgJunitInternalRunnersInitializationError__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersInitializationError)
