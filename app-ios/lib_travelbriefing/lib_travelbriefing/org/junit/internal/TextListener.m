//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/TextListener.java
//

#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/text/NumberFormat.h"
#include "java/util/List.h"
#include "org/junit/internal/JUnitSystem.h"
#include "org/junit/internal/TextListener.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/Result.h"
#include "org/junit/runner/notification/Failure.h"
#include "org/junit/runner/notification/RunListener.h"

@interface OrgJunitInternalTextListener () {
 @public
  JavaIoPrintStream *writer_;
}

- (JavaIoPrintStream *)getWriter;

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalTextListener, writer_, JavaIoPrintStream *)

__attribute__((unused)) static JavaIoPrintStream *OrgJunitInternalTextListener_getWriter(OrgJunitInternalTextListener *self);

@implementation OrgJunitInternalTextListener

- (instancetype)initWithOrgJunitInternalJUnitSystem:(id<OrgJunitInternalJUnitSystem>)system {
  OrgJunitInternalTextListener_initWithOrgJunitInternalJUnitSystem_(self, system);
  return self;
}

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)writer {
  OrgJunitInternalTextListener_initWithJavaIoPrintStream_(self, writer);
  return self;
}

- (void)testRunFinishedWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result {
  [self printHeaderWithLong:[((OrgJunitRunnerResult *) nil_chk(result)) getRunTime]];
  [self printFailuresWithOrgJunitRunnerResult:result];
  [self printFooterWithOrgJunitRunnerResult:result];
}

- (void)testStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  [((JavaIoPrintStream *) nil_chk(writer_)) appendWithChar:'.'];
}

- (void)testFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure {
  [((JavaIoPrintStream *) nil_chk(writer_)) appendWithChar:'E'];
}

- (void)testIgnoredWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_ {
  [((JavaIoPrintStream *) nil_chk(writer_)) appendWithChar:'I'];
}

- (JavaIoPrintStream *)getWriter {
  return OrgJunitInternalTextListener_getWriter(self);
}

- (void)printHeaderWithLong:(jlong)runTime {
  [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) println];
  [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printlnWithNSString:JreStrcat("$$", @"Time: ", [self elapsedTimeAsStringWithLong:runTime])];
}

- (void)printFailuresWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result {
  id<JavaUtilList> failures = [((OrgJunitRunnerResult *) nil_chk(result)) getFailures];
  if ([((id<JavaUtilList>) nil_chk(failures)) size] == 0) {
    return;
  }
  if ([failures size] == 1) {
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printlnWithNSString:JreStrcat("$I$", @"There was ", [failures size], @" failure:")];
  }
  else {
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printlnWithNSString:JreStrcat("$I$", @"There were ", [failures size], @" failures:")];
  }
  jint i = 1;
  for (OrgJunitRunnerNotificationFailure * __strong each in failures) {
    [self printFailureWithOrgJunitRunnerNotificationFailure:each withNSString:JreStrcat("I", i++)];
  }
}

- (void)printFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)each
                                             withNSString:(NSString *)prefix {
  [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printlnWithNSString:JreStrcat("$$$", prefix, @") ", [((OrgJunitRunnerNotificationFailure *) nil_chk(each)) getTestHeader])];
  [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printWithNSString:[each getTrace]];
}

- (void)printFooterWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result {
  if ([((OrgJunitRunnerResult *) nil_chk(result)) wasSuccessful]) {
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) println];
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printWithNSString:@"OK"];
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printlnWithNSString:JreStrcat("$I$$C", @" (", [result getRunCount], @" test", ([result getRunCount] == 1 ? @"" : @"s"), ')')];
  }
  else {
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) println];
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printlnWithNSString:@"FAILURES!!!"];
    [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) printlnWithNSString:JreStrcat("$I$I", @"Tests run: ", [result getRunCount], @",  Failures: ", [result getFailureCount])];
  }
  [((JavaIoPrintStream *) nil_chk(OrgJunitInternalTextListener_getWriter(self))) println];
}

- (NSString *)elapsedTimeAsStringWithLong:(jlong)runTime {
  return [((JavaTextNumberFormat *) nil_chk(JavaTextNumberFormat_getInstance())) formatWithDouble:(jdouble) runTime / 1000];
}

- (void)dealloc {
  RELEASE_(writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 11, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 14, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 15, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitInternalJUnitSystem:);
  methods[1].selector = @selector(initWithJavaIoPrintStream:);
  methods[2].selector = @selector(testRunFinishedWithOrgJunitRunnerResult:);
  methods[3].selector = @selector(testStartedWithOrgJunitRunnerDescription:);
  methods[4].selector = @selector(testFailureWithOrgJunitRunnerNotificationFailure:);
  methods[5].selector = @selector(testIgnoredWithOrgJunitRunnerDescription:);
  methods[6].selector = @selector(getWriter);
  methods[7].selector = @selector(printHeaderWithLong:);
  methods[8].selector = @selector(printFailuresWithOrgJunitRunnerResult:);
  methods[9].selector = @selector(printFailureWithOrgJunitRunnerNotificationFailure:withNSString:);
  methods[10].selector = @selector(printFooterWithOrgJunitRunnerResult:);
  methods[11].selector = @selector(elapsedTimeAsStringWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitInternalJUnitSystem;", "LJavaIoPrintStream;", "testRunFinished", "LOrgJunitRunnerResult;", "testStarted", "LOrgJunitRunnerDescription;", "testFailure", "LOrgJunitRunnerNotificationFailure;", "testIgnored", "printHeader", "J", "printFailures", "printFailure", "LOrgJunitRunnerNotificationFailure;LNSString;", "printFooter", "elapsedTimeAsString" };
  static const J2ObjcClassInfo _OrgJunitInternalTextListener = { "TextListener", "org.junit.internal", ptrTable, methods, fields, 7, 0x1, 12, 1, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalTextListener;
}

@end

void OrgJunitInternalTextListener_initWithOrgJunitInternalJUnitSystem_(OrgJunitInternalTextListener *self, id<OrgJunitInternalJUnitSystem> system) {
  OrgJunitInternalTextListener_initWithJavaIoPrintStream_(self, [((id<OrgJunitInternalJUnitSystem>) nil_chk(system)) out]);
}

OrgJunitInternalTextListener *new_OrgJunitInternalTextListener_initWithOrgJunitInternalJUnitSystem_(id<OrgJunitInternalJUnitSystem> system) {
  J2OBJC_NEW_IMPL(OrgJunitInternalTextListener, initWithOrgJunitInternalJUnitSystem_, system)
}

OrgJunitInternalTextListener *create_OrgJunitInternalTextListener_initWithOrgJunitInternalJUnitSystem_(id<OrgJunitInternalJUnitSystem> system) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalTextListener, initWithOrgJunitInternalJUnitSystem_, system)
}

void OrgJunitInternalTextListener_initWithJavaIoPrintStream_(OrgJunitInternalTextListener *self, JavaIoPrintStream *writer) {
  OrgJunitRunnerNotificationRunListener_init(self);
  JreStrongAssign(&self->writer_, writer);
}

OrgJunitInternalTextListener *new_OrgJunitInternalTextListener_initWithJavaIoPrintStream_(JavaIoPrintStream *writer) {
  J2OBJC_NEW_IMPL(OrgJunitInternalTextListener, initWithJavaIoPrintStream_, writer)
}

OrgJunitInternalTextListener *create_OrgJunitInternalTextListener_initWithJavaIoPrintStream_(JavaIoPrintStream *writer) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalTextListener, initWithJavaIoPrintStream_, writer)
}

JavaIoPrintStream *OrgJunitInternalTextListener_getWriter(OrgJunitInternalTextListener *self) {
  return self->writer_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalTextListener)
