//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/core/Is.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/hamcrest/BaseMatcher.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Factory.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/core/Is.h"
#include "org/hamcrest/core/IsEqual.h"
#include "org/hamcrest/core/IsInstanceOf.h"

@interface OrgHamcrestCoreIs () {
 @public
  id<OrgHamcrestMatcher> matcher_;
}

@end

J2OBJC_FIELD_SETTER(OrgHamcrestCoreIs, matcher_, id<OrgHamcrestMatcher>)

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIs__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIs__Annotations$1();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIs__Annotations$2();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIs__Annotations$3();

@implementation OrgHamcrestCoreIs

- (instancetype)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher {
  OrgHamcrestCoreIs_initWithOrgHamcrestMatcher_(self, matcher);
  return self;
}

- (jboolean)matchesWithId:(id)arg {
  return [((id<OrgHamcrestMatcher>) nil_chk(matcher_)) matchesWithId:arg];
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk([((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:@"is "])) appendDescriptionOfWithOrgHamcrestSelfDescribing:matcher_];
}

- (void)describeMismatchWithId:(id)item
    withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatchDescription {
  [((id<OrgHamcrestMatcher>) nil_chk(matcher_)) describeMismatchWithId:item withOrgHamcrestDescription:mismatchDescription];
}

+ (id<OrgHamcrestMatcher>)isWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher {
  return OrgHamcrestCoreIs_isWithOrgHamcrestMatcher_(matcher);
}

+ (id<OrgHamcrestMatcher>)isWithId:(id)value {
  return OrgHamcrestCoreIs_isWithId_(value);
}

+ (id<OrgHamcrestMatcher>)isWithIOSClass:(IOSClass *)type {
  return OrgHamcrestCoreIs_isWithIOSClass_(type);
}

+ (id<OrgHamcrestMatcher>)isAWithIOSClass:(IOSClass *)type {
  return OrgHamcrestCoreIs_isAWithIOSClass_(type);
}

- (void)dealloc {
  RELEASE_(matcher_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 8, 0, -1, 9, 10, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 8, 3, -1, 11, 12, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 8, 13, -1, 14, 15, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 16, 13, -1, 14, 17, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgHamcrestMatcher:);
  methods[1].selector = @selector(matchesWithId:);
  methods[2].selector = @selector(describeToWithOrgHamcrestDescription:);
  methods[3].selector = @selector(describeMismatchWithId:withOrgHamcrestDescription:);
  methods[4].selector = @selector(isWithOrgHamcrestMatcher:);
  methods[5].selector = @selector(isWithId:);
  methods[6].selector = @selector(isWithIOSClass:);
  methods[7].selector = @selector(isAWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "matcher_", "LOrgHamcrestMatcher;", .constantValue.asLong = 0, 0x12, -1, -1, 18, -1 },
  };
  static const void *ptrTable[] = { "LOrgHamcrestMatcher;", "(Lorg/hamcrest/Matcher<TT;>;)V", "matches", "LNSObject;", "describeTo", "LOrgHamcrestDescription;", "describeMismatch", "LNSObject;LOrgHamcrestDescription;", "is", "<T:Ljava/lang/Object;>(Lorg/hamcrest/Matcher<TT;>;)Lorg/hamcrest/Matcher<TT;>;", (void *)&OrgHamcrestCoreIs__Annotations$0, "<T:Ljava/lang/Object;>(TT;)Lorg/hamcrest/Matcher<TT;>;", (void *)&OrgHamcrestCoreIs__Annotations$1, "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Lorg/hamcrest/Matcher<TT;>;", (void *)&OrgHamcrestCoreIs__Annotations$2, "isA", (void *)&OrgHamcrestCoreIs__Annotations$3, "Lorg/hamcrest/Matcher<TT;>;", "<T:Ljava/lang/Object;>Lorg/hamcrest/BaseMatcher<TT;>;" };
  static const J2ObjcClassInfo _OrgHamcrestCoreIs = { "Is", "org.hamcrest.core", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, 19, -1 };
  return &_OrgHamcrestCoreIs;
}

@end

void OrgHamcrestCoreIs_initWithOrgHamcrestMatcher_(OrgHamcrestCoreIs *self, id<OrgHamcrestMatcher> matcher) {
  OrgHamcrestBaseMatcher_init(self);
  JreStrongAssign(&self->matcher_, matcher);
}

OrgHamcrestCoreIs *new_OrgHamcrestCoreIs_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher) {
  J2OBJC_NEW_IMPL(OrgHamcrestCoreIs, initWithOrgHamcrestMatcher_, matcher)
}

OrgHamcrestCoreIs *create_OrgHamcrestCoreIs_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher) {
  J2OBJC_CREATE_IMPL(OrgHamcrestCoreIs, initWithOrgHamcrestMatcher_, matcher)
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIs_isWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher) {
  OrgHamcrestCoreIs_initialize();
  return create_OrgHamcrestCoreIs_initWithOrgHamcrestMatcher_(matcher);
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIs_isWithId_(id value) {
  OrgHamcrestCoreIs_initialize();
  return OrgHamcrestCoreIs_isWithOrgHamcrestMatcher_(OrgHamcrestCoreIsEqual_equalToWithId_(value));
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIs_isWithIOSClass_(IOSClass *type) {
  OrgHamcrestCoreIs_initialize();
  id<OrgHamcrestMatcher> typeMatcher = OrgHamcrestCoreIsInstanceOf_instanceOfWithIOSClass_(type);
  return OrgHamcrestCoreIs_isWithOrgHamcrestMatcher_(typeMatcher);
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIs_isAWithIOSClass_(IOSClass *type) {
  OrgHamcrestCoreIs_initialize();
  id<OrgHamcrestMatcher> typeMatcher = OrgHamcrestCoreIsInstanceOf_instanceOfWithIOSClass_(type);
  return OrgHamcrestCoreIs_isWithOrgHamcrestMatcher_(typeMatcher);
}

IOSObjectArray *OrgHamcrestCoreIs__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIs__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIs__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory(), create_JavaLangDeprecated() } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIs__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestCoreIs)
