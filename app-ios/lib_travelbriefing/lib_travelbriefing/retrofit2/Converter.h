//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/retrofit2/Converter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Retrofit2Converter")
#ifdef RESTRICT_Retrofit2Converter
#define INCLUDE_ALL_Retrofit2Converter 0
#else
#define INCLUDE_ALL_Retrofit2Converter 1
#endif
#undef RESTRICT_Retrofit2Converter

#if !defined (Retrofit2Converter_) && (INCLUDE_ALL_Retrofit2Converter || defined(INCLUDE_Retrofit2Converter))
#define Retrofit2Converter_

@protocol Retrofit2Converter < JavaObject >

- (id)convertWithId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2Converter)

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2Converter)

#endif

#if !defined (Retrofit2Converter_Factory_) && (INCLUDE_ALL_Retrofit2Converter || defined(INCLUDE_Retrofit2Converter_Factory))
#define Retrofit2Converter_Factory_

@class IOSObjectArray;
@class Retrofit2Retrofit;
@protocol JavaLangReflectType;
@protocol Retrofit2Converter;

@interface Retrofit2Converter_Factory : NSObject

#pragma mark Public

- (instancetype)init;

- (id<Retrofit2Converter>)requestBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)parameterAnnotations
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)methodAnnotations
                                                withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit;

- (id<Retrofit2Converter>)responseBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                 withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations
                                                 withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit;

- (id<Retrofit2Converter>)stringConverterWithJavaLangReflectType:(id<JavaLangReflectType>)type
                           withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations
                                           withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2Converter_Factory)

FOUNDATION_EXPORT void Retrofit2Converter_Factory_init(Retrofit2Converter_Factory *self);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2Converter_Factory)

#endif

#pragma pop_macro("INCLUDE_ALL_Retrofit2Converter")
