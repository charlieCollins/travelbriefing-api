//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/observers/SafeObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexObserversSafeObserver")
#ifdef RESTRICT_IoReactivexObserversSafeObserver
#define INCLUDE_ALL_IoReactivexObserversSafeObserver 0
#else
#define INCLUDE_ALL_IoReactivexObserversSafeObserver 1
#endif
#undef RESTRICT_IoReactivexObserversSafeObserver

#if !defined (IoReactivexObserversSafeObserver_) && (INCLUDE_ALL_IoReactivexObserversSafeObserver || defined(INCLUDE_IoReactivexObserversSafeObserver))
#define IoReactivexObserversSafeObserver_

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "io/reactivex/Observer.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@interface IoReactivexObserversSafeObserver : NSObject < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexObserver> actual_;
  id<IoReactivexDisposablesDisposable> s_;
  jboolean done_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

#pragma mark Package-Private

- (void)onCompleteNoSubscription;

- (void)onNextNoSubscription;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexObserversSafeObserver)

J2OBJC_FIELD_SETTER(IoReactivexObserversSafeObserver, actual_, id<IoReactivexObserver>)
J2OBJC_FIELD_SETTER(IoReactivexObserversSafeObserver, s_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexObserversSafeObserver_initWithIoReactivexObserver_(IoReactivexObserversSafeObserver *self, id<IoReactivexObserver> actual);

FOUNDATION_EXPORT IoReactivexObserversSafeObserver *new_IoReactivexObserversSafeObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexObserversSafeObserver *create_IoReactivexObserversSafeObserver_initWithIoReactivexObserver_(id<IoReactivexObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexObserversSafeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexObserversSafeObserver")
