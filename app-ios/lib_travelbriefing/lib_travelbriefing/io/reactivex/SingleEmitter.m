//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/SingleEmitter.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/SingleEmitter.h"

@interface IoReactivexSingleEmitter : NSObject

@end

@implementation IoReactivexSingleEmitter

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(onSuccessWithId:);
  methods[1].selector = @selector(onErrorWithNSException:);
  methods[2].selector = @selector(setDisposableWithIoReactivexDisposablesDisposable:);
  methods[3].selector = @selector(setCancellableWithIoReactivexFunctionsCancellable:);
  methods[4].selector = @selector(isDisposed);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onSuccess", "LNSObject;", "(TT;)V", "onError", "LNSException;", "setDisposable", "LIoReactivexDisposablesDisposable;", "setCancellable", "LIoReactivexFunctionsCancellable;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _IoReactivexSingleEmitter = { "SingleEmitter", "io.reactivex", ptrTable, methods, NULL, 7, 0x609, 5, 0, -1, -1, -1, 9, -1 };
  return &_IoReactivexSingleEmitter;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(IoReactivexSingleEmitter)
