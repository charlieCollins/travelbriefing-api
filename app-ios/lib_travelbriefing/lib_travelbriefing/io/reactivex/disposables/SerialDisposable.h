//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/disposables/SerialDisposable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexDisposablesSerialDisposable")
#ifdef RESTRICT_IoReactivexDisposablesSerialDisposable
#define INCLUDE_ALL_IoReactivexDisposablesSerialDisposable 0
#else
#define INCLUDE_ALL_IoReactivexDisposablesSerialDisposable 1
#endif
#undef RESTRICT_IoReactivexDisposablesSerialDisposable

#if !defined (IoReactivexDisposablesSerialDisposable_) && (INCLUDE_ALL_IoReactivexDisposablesSerialDisposable || defined(INCLUDE_IoReactivexDisposablesSerialDisposable))
#define IoReactivexDisposablesSerialDisposable_

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@class JavaUtilConcurrentAtomicAtomicReference;

@interface IoReactivexDisposablesSerialDisposable : NSObject < IoReactivexDisposablesDisposable > {
 @public
  JavaUtilConcurrentAtomicAtomicReference *resource_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)initialDisposable;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (jboolean)isDisposed;

- (jboolean)replaceWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)next;

- (jboolean)setWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)next;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexDisposablesSerialDisposable)

J2OBJC_FIELD_SETTER(IoReactivexDisposablesSerialDisposable, resource_, JavaUtilConcurrentAtomicAtomicReference *)

FOUNDATION_EXPORT void IoReactivexDisposablesSerialDisposable_init(IoReactivexDisposablesSerialDisposable *self);

FOUNDATION_EXPORT IoReactivexDisposablesSerialDisposable *new_IoReactivexDisposablesSerialDisposable_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexDisposablesSerialDisposable *create_IoReactivexDisposablesSerialDisposable_init();

FOUNDATION_EXPORT void IoReactivexDisposablesSerialDisposable_initWithIoReactivexDisposablesDisposable_(IoReactivexDisposablesSerialDisposable *self, id<IoReactivexDisposablesDisposable> initialDisposable);

FOUNDATION_EXPORT IoReactivexDisposablesSerialDisposable *new_IoReactivexDisposablesSerialDisposable_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> initialDisposable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexDisposablesSerialDisposable *create_IoReactivexDisposablesSerialDisposable_initWithIoReactivexDisposablesDisposable_(id<IoReactivexDisposablesDisposable> initialDisposable);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexDisposablesSerialDisposable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexDisposablesSerialDisposable")
