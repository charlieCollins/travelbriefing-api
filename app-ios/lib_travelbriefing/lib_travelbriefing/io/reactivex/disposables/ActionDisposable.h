//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/disposables/ActionDisposable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexDisposablesActionDisposable")
#ifdef RESTRICT_IoReactivexDisposablesActionDisposable
#define INCLUDE_ALL_IoReactivexDisposablesActionDisposable 0
#else
#define INCLUDE_ALL_IoReactivexDisposablesActionDisposable 1
#endif
#undef RESTRICT_IoReactivexDisposablesActionDisposable

#if !defined (IoReactivexDisposablesActionDisposable_) && (INCLUDE_ALL_IoReactivexDisposablesActionDisposable || defined(INCLUDE_IoReactivexDisposablesActionDisposable))
#define IoReactivexDisposablesActionDisposable_

#define RESTRICT_IoReactivexDisposablesReferenceDisposable 1
#define INCLUDE_IoReactivexDisposablesReferenceDisposable 1
#include "io/reactivex/disposables/ReferenceDisposable.h"

@protocol IoReactivexFunctionsAction;

@interface IoReactivexDisposablesActionDisposable : IoReactivexDisposablesReferenceDisposable

#pragma mark Public

- (id<IoReactivexFunctionsAction>)get;

- (id<IoReactivexFunctionsAction>)getAndSetWithId:(id<IoReactivexFunctionsAction>)arg0;

#pragma mark Protected

- (void)onDisposedWithId:(id<IoReactivexFunctionsAction>)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)value;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexDisposablesActionDisposable)

FOUNDATION_EXPORT void IoReactivexDisposablesActionDisposable_initWithIoReactivexFunctionsAction_(IoReactivexDisposablesActionDisposable *self, id<IoReactivexFunctionsAction> value);

FOUNDATION_EXPORT IoReactivexDisposablesActionDisposable *new_IoReactivexDisposablesActionDisposable_initWithIoReactivexFunctionsAction_(id<IoReactivexFunctionsAction> value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexDisposablesActionDisposable *create_IoReactivexDisposablesActionDisposable_initWithIoReactivexFunctionsAction_(id<IoReactivexFunctionsAction> value);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexDisposablesActionDisposable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexDisposablesActionDisposable")
