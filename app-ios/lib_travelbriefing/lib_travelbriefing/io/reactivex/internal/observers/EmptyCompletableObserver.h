//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/observers/EmptyCompletableObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversEmptyCompletableObserver")
#ifdef RESTRICT_IoReactivexInternalObserversEmptyCompletableObserver
#define INCLUDE_ALL_IoReactivexInternalObserversEmptyCompletableObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversEmptyCompletableObserver 1
#endif
#undef RESTRICT_IoReactivexInternalObserversEmptyCompletableObserver

#if !defined (IoReactivexInternalObserversEmptyCompletableObserver_) && (INCLUDE_ALL_IoReactivexInternalObserversEmptyCompletableObserver || defined(INCLUDE_IoReactivexInternalObserversEmptyCompletableObserver))
#define IoReactivexInternalObserversEmptyCompletableObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexCompletableObserver 1
#define INCLUDE_IoReactivexCompletableObserver 1
#include "io/reactivex/CompletableObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@interface IoReactivexInternalObserversEmptyCompletableObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexCompletableObserver, IoReactivexDisposablesDisposable >

#pragma mark Public

- (instancetype)init;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversEmptyCompletableObserver)

FOUNDATION_EXPORT void IoReactivexInternalObserversEmptyCompletableObserver_init(IoReactivexInternalObserversEmptyCompletableObserver *self);

FOUNDATION_EXPORT IoReactivexInternalObserversEmptyCompletableObserver *new_IoReactivexInternalObserversEmptyCompletableObserver_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversEmptyCompletableObserver *create_IoReactivexInternalObserversEmptyCompletableObserver_init();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversEmptyCompletableObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversEmptyCompletableObserver")
