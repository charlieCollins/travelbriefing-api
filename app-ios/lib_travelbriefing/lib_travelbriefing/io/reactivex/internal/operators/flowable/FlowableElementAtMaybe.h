//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableElementAtMaybe.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe

#if !defined (IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe))
#define IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_

#define RESTRICT_IoReactivexMaybe 1
#define INCLUDE_IoReactivexMaybe 1
#include "io/reactivex/Maybe.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToFlowable 1
#define INCLUDE_IoReactivexInternalFuseableFuseToFlowable 1
#include "io/reactivex/internal/fuseable/FuseToFlowable.h"

@class IoReactivexFlowable;
@protocol IoReactivexMaybeObserver;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe : IoReactivexMaybe < IoReactivexInternalFuseableFuseToFlowable > {
 @public
  id<OrgReactivestreamsPublisher> source_;
  jlong index_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                                           withLong:(jlong)index;

- (IoReactivexFlowable *)fuseToFlowable;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe, source_, id<OrgReactivestreamsPublisher>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_initWithOrgReactivestreamsPublisher_withLong_(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe *self, id<OrgReactivestreamsPublisher> source, jlong index);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe *new_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_initWithOrgReactivestreamsPublisher_withLong_(id<OrgReactivestreamsPublisher> source, jlong index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe *create_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_initWithOrgReactivestreamsPublisher_withLong_(id<OrgReactivestreamsPublisher> source, jlong index);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber_

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexMaybeObserver;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber : NSObject < OrgReactivestreamsSubscriber, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexMaybeObserver> actual_;
  jlong index_;
  id<OrgReactivestreamsSubscription> s_;
  jlong count_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexMaybeObserver:(id<IoReactivexMaybeObserver>)actual
                                        withLong:(jlong)index;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber, actual_, id<IoReactivexMaybeObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber_initWithIoReactivexMaybeObserver_withLong_(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber *self, id<IoReactivexMaybeObserver> actual, jlong index);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber_initWithIoReactivexMaybeObserver_withLong_(id<IoReactivexMaybeObserver> actual, jlong index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber_initWithIoReactivexMaybeObserver_withLong_(id<IoReactivexMaybeObserver> actual, jlong index);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe_ElementAtSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableElementAtMaybe")
