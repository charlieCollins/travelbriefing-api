//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableBufferExactBoundary.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary))
#define IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "io/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream.h"

@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  id<OrgReactivestreamsPublisher> boundary_;
  id<JavaUtilConcurrentCallable> bufferSupplier_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                    withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)boundary
                     withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier;

- (id<JavaUtilCollection>)blockingFirst;

- (id<JavaUtilCollection>)blockingFirstWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingLast;

- (id<JavaUtilCollection>)blockingLastWithId:(id<JavaUtilCollection>)arg0;

- (id<JavaUtilCollection>)blockingSingle;

- (id<JavaUtilCollection>)blockingSingleWithId:(id<JavaUtilCollection>)arg0;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary, boundary_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary, bufferSupplier_, id<JavaUtilConcurrentCallable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withJavaUtilConcurrentCallable_(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary *self, id<OrgReactivestreamsPublisher> source, id<OrgReactivestreamsPublisher> boundary, id<JavaUtilConcurrentCallable> bufferSupplier);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary *new_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withJavaUtilConcurrentCallable_(id<OrgReactivestreamsPublisher> source, id<OrgReactivestreamsPublisher> boundary, id<JavaUtilConcurrentCallable> bufferSupplier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary *create_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_initWithOrgReactivestreamsPublisher_withOrgReactivestreamsPublisher_withJavaUtilConcurrentCallable_(id<OrgReactivestreamsPublisher> source, id<OrgReactivestreamsPublisher> boundary, id<JavaUtilConcurrentCallable> bufferSupplier);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_

#define RESTRICT_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#define INCLUDE_IoReactivexInternalSubscribersQueueDrainSubscriber 1
#include "io/reactivex/internal/subscribers/QueueDrainSubscriber.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "org/reactivestreams/Subscription.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentCallable;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber : IoReactivexInternalSubscribersQueueDrainSubscriber < OrgReactivestreamsSubscriber, OrgReactivestreamsSubscription, IoReactivexDisposablesDisposable > {
 @public
  id<JavaUtilConcurrentCallable> bufferSupplier_;
  id<OrgReactivestreamsPublisher> boundary_;
  id<OrgReactivestreamsSubscription> s_;
  id<IoReactivexDisposablesDisposable> other_;
  id<JavaUtilCollection> buffer_;
}

#pragma mark Public

- (jboolean)acceptWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)a
                                            withId:(id<JavaUtilCollection>)v;

- (void)cancel;

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                      withJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)bufferSupplier
                     withOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)boundary;

- (void)next;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber, bufferSupplier_, id<JavaUtilConcurrentCallable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber, boundary_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber, other_, id<IoReactivexDisposablesDisposable>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber, buffer_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *self, id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, id<OrgReactivestreamsPublisher> boundary);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *new_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, id<OrgReactivestreamsPublisher> boundary) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *create_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_initWithOrgReactivestreamsSubscriber_withJavaUtilConcurrentCallable_withOrgReactivestreamsPublisher_(id<OrgReactivestreamsSubscriber> actual, id<JavaUtilConcurrentCallable> bufferSupplier, id<OrgReactivestreamsPublisher> boundary);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber_

#define RESTRICT_IoReactivexSubscribersDisposableSubscriber 1
#define INCLUDE_IoReactivexSubscribersDisposableSubscriber 1
#include "io/reactivex/subscribers/DisposableSubscriber.h"

@class IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber : IoReactivexSubscribersDisposableSubscriber {
 @public
  IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *parent_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber:(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber, parent_, IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber *self, IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *parent);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber *new_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber *create_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber_initWithIoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber_(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferExactBoundarySubscriber *parent);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary_BufferBoundarySubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableBufferExactBoundary")
