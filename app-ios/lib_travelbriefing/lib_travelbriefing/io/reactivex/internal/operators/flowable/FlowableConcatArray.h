//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableConcatArray.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatArray")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatArray
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatArray 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatArray 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableConcatArray

#if !defined (IoReactivexInternalOperatorsFlowableFlowableConcatArray_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatArray || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableConcatArray))
#define IoReactivexInternalOperatorsFlowableFlowableConcatArray_

#define RESTRICT_IoReactivexFlowable 1
#define INCLUDE_IoReactivexFlowable 1
#include "io/reactivex/Flowable.h"

@class IOSObjectArray;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableConcatArray : IoReactivexFlowable {
 @public
  IOSObjectArray *sources_;
  jboolean delayError_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisherArray:(IOSObjectArray *)sources
                                             withBoolean:(jboolean)delayError;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableConcatArray)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatArray, sources_, IOSObjectArray *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableConcatArray_initWithOrgReactivestreamsPublisherArray_withBoolean_(IoReactivexInternalOperatorsFlowableFlowableConcatArray *self, IOSObjectArray *sources, jboolean delayError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatArray *new_IoReactivexInternalOperatorsFlowableFlowableConcatArray_initWithOrgReactivestreamsPublisherArray_withBoolean_(IOSObjectArray *sources, jboolean delayError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatArray *create_IoReactivexInternalOperatorsFlowableFlowableConcatArray_initWithOrgReactivestreamsPublisherArray_withBoolean_(IOSObjectArray *sources, jboolean delayError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableConcatArray)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatArray || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber_

#define RESTRICT_IoReactivexInternalSubscriptionsSubscriptionArbiter 1
#define INCLUDE_IoReactivexInternalSubscriptionsSubscriptionArbiter 1
#include "io/reactivex/internal/subscriptions/SubscriptionArbiter.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

@class IOSObjectArray;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol JavaUtilList;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber : IoReactivexInternalSubscriptionsSubscriptionArbiter < OrgReactivestreamsSubscriber > {
 @public
  id<OrgReactivestreamsSubscriber> actual_ConcatArraySubscriber_;
  IOSObjectArray *sources_;
  jboolean delayError_;
  JavaUtilConcurrentAtomicAtomicInteger *wip_;
  jint index_;
  id<JavaUtilList> errors_;
  jlong produced_;
}

#pragma mark Public

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsPublisherArray:(IOSObjectArray *)sources
                                             withBoolean:(jboolean)delayError
                        withOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber, actual_ConcatArraySubscriber_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber, sources_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber, wip_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber, errors_, id<JavaUtilList>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber_initWithOrgReactivestreamsPublisherArray_withBoolean_withOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber *self, IOSObjectArray *sources, jboolean delayError, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber *new_IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber_initWithOrgReactivestreamsPublisherArray_withBoolean_withOrgReactivestreamsSubscriber_(IOSObjectArray *sources, jboolean delayError, id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber *create_IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber_initWithOrgReactivestreamsPublisherArray_withBoolean_withOrgReactivestreamsSubscriber_(IOSObjectArray *sources, jboolean delayError, id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableConcatArray_ConcatArraySubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableConcatArray")
