//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableCount.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCount")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableCount
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCount 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCount 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableCount

#if !defined (IoReactivexInternalOperatorsFlowableFlowableCount_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCount || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableCount))
#define IoReactivexInternalOperatorsFlowableFlowableCount_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "io/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream.h"

@class JavaLangLong;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableCount : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source;

- (JavaLangLong *)blockingFirst;

- (JavaLangLong *)blockingFirstWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingLast;

- (JavaLangLong *)blockingLastWithId:(JavaLangLong *)arg0;

- (JavaLangLong *)blockingSingle;

- (JavaLangLong *)blockingSingleWithId:(JavaLangLong *)arg0;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableCount)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableCount_initWithOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableCount *self, id<OrgReactivestreamsPublisher> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCount *new_IoReactivexInternalOperatorsFlowableFlowableCount_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCount *create_IoReactivexInternalOperatorsFlowableFlowableCount_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableCount)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCount || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber_

#define RESTRICT_IoReactivexInternalSubscriptionsDeferredScalarSubscription 1
#define INCLUDE_IoReactivexInternalSubscriptionsDeferredScalarSubscription 1
#include "io/reactivex/internal/subscriptions/DeferredScalarSubscription.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

@class JavaLangLong;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber : IoReactivexInternalSubscriptionsDeferredScalarSubscription < OrgReactivestreamsSubscriber > {
 @public
  id<OrgReactivestreamsSubscription> s_;
  jlong count_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (JavaLangLong *)poll;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber *self, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableCount_CountSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableCount")
