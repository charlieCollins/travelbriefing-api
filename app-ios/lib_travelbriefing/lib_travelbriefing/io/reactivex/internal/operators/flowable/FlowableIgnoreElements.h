//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableIgnoreElements.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements))
#define IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "io/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream.h"

@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableIgnoreElements : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)t;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_initWithOrgReactivestreamsPublisher_(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements *self, id<OrgReactivestreamsPublisher> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableIgnoreElements *new_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableIgnoreElements *create_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_initWithOrgReactivestreamsPublisher_(id<OrgReactivestreamsPublisher> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber_

#define RESTRICT_IoReactivexInternalFuseableQueueSubscription 1
#define INCLUDE_IoReactivexInternalFuseableQueueSubscription 1
#include "io/reactivex/internal/fuseable/QueueSubscription.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber : NSObject < IoReactivexInternalFuseableQueueSubscription, OrgReactivestreamsSubscriber > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  id<OrgReactivestreamsSubscription> s_;
}

#pragma mark Public

- (void)cancel;

- (void)clear;

- (jboolean)isEmpty;

- (jboolean)offerWithId:(id)e;

- (jboolean)offerWithId:(id)v1
                 withId:(id)v2;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (id)poll;

- (void)requestWithLong:(jlong)n;

- (jint)requestFusionWithInt:(jint)mode;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber_initWithOrgReactivestreamsSubscriber_(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber *self, id<OrgReactivestreamsSubscriber> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber_initWithOrgReactivestreamsSubscriber_(id<OrgReactivestreamsSubscriber> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableIgnoreElements_IgnoreElementsSubscriber)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableIgnoreElements")
