//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/single/SingleDelayWithSingle.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithSingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDelayWithSingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithSingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithSingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDelayWithSingle

#if !defined (IoReactivexInternalOperatorsSingleSingleDelayWithSingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithSingle || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDelayWithSingle))
#define IoReactivexInternalOperatorsSingleSingleDelayWithSingle_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "io/reactivex/Single.h"

@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDelayWithSingle : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexSingleSource> other_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
                    withIoReactivexSingleSource:(id<IoReactivexSingleSource>)other;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDelayWithSingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithSingle, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithSingle, other_, id<IoReactivexSingleSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDelayWithSingle_initWithIoReactivexSingleSource_withIoReactivexSingleSource_(IoReactivexInternalOperatorsSingleSingleDelayWithSingle *self, id<IoReactivexSingleSource> source, id<IoReactivexSingleSource> other);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithSingle *new_IoReactivexInternalOperatorsSingleSingleDelayWithSingle_initWithIoReactivexSingleSource_withIoReactivexSingleSource_(id<IoReactivexSingleSource> source, id<IoReactivexSingleSource> other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithSingle *create_IoReactivexInternalOperatorsSingleSingleDelayWithSingle_initWithIoReactivexSingleSource_withIoReactivexSingleSource_(id<IoReactivexSingleSource> source, id<IoReactivexSingleSource> other);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDelayWithSingle)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithSingle || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver))
#define IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "io/reactivex/SingleObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexSingleObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexSingleSource> source_;
}

#pragma mark Public

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                      withIoReactivexSingleSource:(id<IoReactivexSingleSource>)source;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver, source_, id<IoReactivexSingleSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver_initWithIoReactivexSingleObserver_withIoReactivexSingleSource_(IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver *self, id<IoReactivexSingleObserver> actual, id<IoReactivexSingleSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver *new_IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver_initWithIoReactivexSingleObserver_withIoReactivexSingleSource_(id<IoReactivexSingleObserver> actual, id<IoReactivexSingleSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver *create_IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver_initWithIoReactivexSingleObserver_withIoReactivexSingleSource_(id<IoReactivexSingleObserver> actual, id<IoReactivexSingleSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDelayWithSingle_OtherObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDelayWithSingle")
