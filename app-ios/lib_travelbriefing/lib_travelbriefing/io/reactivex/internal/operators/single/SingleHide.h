//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/single/SingleHide.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleHide")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleHide
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleHide 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleHide 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleHide

#if !defined (IoReactivexInternalOperatorsSingleSingleHide_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleHide || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleHide))
#define IoReactivexInternalOperatorsSingleSingleHide_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "io/reactivex/Single.h"

@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleHide : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleHide)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleHide, source_, id<IoReactivexSingleSource>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleHide_initWithIoReactivexSingleSource_(IoReactivexInternalOperatorsSingleSingleHide *self, id<IoReactivexSingleSource> source);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleHide *new_IoReactivexInternalOperatorsSingleSingleHide_initWithIoReactivexSingleSource_(id<IoReactivexSingleSource> source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleHide *create_IoReactivexInternalOperatorsSingleSingleHide_initWithIoReactivexSingleSource_(id<IoReactivexSingleSource> source);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleHide)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleHide || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver))
#define IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver_

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "io/reactivex/SingleObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@interface IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver : NSObject < IoReactivexSingleObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver_initWithIoReactivexSingleObserver_(IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver *self, id<IoReactivexSingleObserver> actual);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver *new_IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver_initWithIoReactivexSingleObserver_(id<IoReactivexSingleObserver> actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver *create_IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver_initWithIoReactivexSingleObserver_(id<IoReactivexSingleObserver> actual);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleHide_HideSingleObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleHide")
