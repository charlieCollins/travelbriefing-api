//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/observable/ObservableTakeUntil.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/ObservableSource.h"
#include "io/reactivex/Observer.h"
#include "io/reactivex/disposables/Disposable.h"
#include "io/reactivex/internal/disposables/ArrayCompositeDisposable.h"
#include "io/reactivex/internal/disposables/DisposableHelper.h"
#include "io/reactivex/internal/operators/observable/AbstractObservableWithUpstream.h"
#include "io/reactivex/internal/operators/observable/ObservableTakeUntil.h"
#include "io/reactivex/observers/SerializedObserver.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"

@interface IoReactivexInternalOperatorsObservableObservableTakeUntil_1 : NSObject < IoReactivexObserver > {
 @public
  IoReactivexInternalDisposablesArrayCompositeDisposable *val$frc_;
  IoReactivexObserversSerializedObserver *val$serial_;
}

- (instancetype)initWithIoReactivexInternalDisposablesArrayCompositeDisposable:(IoReactivexInternalDisposablesArrayCompositeDisposable *)capture$0
                                    withIoReactivexObserversSerializedObserver:(IoReactivexObserversSerializedObserver *)capture$1;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onComplete;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableTakeUntil_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(IoReactivexInternalOperatorsObservableObservableTakeUntil_1 *self, IoReactivexInternalDisposablesArrayCompositeDisposable *capture$0, IoReactivexObserversSerializedObserver *capture$1);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableTakeUntil_1 *new_IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(IoReactivexInternalDisposablesArrayCompositeDisposable *capture$0, IoReactivexObserversSerializedObserver *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableTakeUntil_1 *create_IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(IoReactivexInternalDisposablesArrayCompositeDisposable *capture$0, IoReactivexObserversSerializedObserver *capture$1);

inline jlong IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_get_serialVersionUID();
#define IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_serialVersionUID 3451719290311127173LL
J2OBJC_STATIC_FIELD_CONSTANT(IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver, serialVersionUID, jlong)

@implementation IoReactivexInternalOperatorsObservableObservableTakeUntil

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                    withIoReactivexObservableSource:(id<IoReactivexObservableSource>)other {
  IoReactivexInternalOperatorsObservableObservableTakeUntil_initWithIoReactivexObservableSource_withIoReactivexObservableSource_(self, source, other);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)child {
  IoReactivexObserversSerializedObserver *serial = create_IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_(child);
  IoReactivexInternalDisposablesArrayCompositeDisposable *frc = create_IoReactivexInternalDisposablesArrayCompositeDisposable_initWithInt_(2);
  IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver *tus = create_IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(serial, frc);
  [((id<IoReactivexObserver>) nil_chk(child)) onSubscribeWithIoReactivexDisposablesDisposable:frc];
  [((id<IoReactivexObservableSource>) nil_chk(other_)) subscribeWithIoReactivexObserver:create_IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(frc, serial)];
  [((id<IoReactivexObservableSource>) nil_chk(source_)) subscribeWithIoReactivexObserver:tus];
}

- (void)dealloc {
  RELEASE_(other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservableSource:withIoReactivexObservableSource:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "other_", "LIoReactivexObservableSource;", .constantValue.asLong = 0, 0x10, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObservableSource;LIoReactivexObservableSource;", "(Lio/reactivex/ObservableSource<TT;>;Lio/reactivex/ObservableSource<+TU;>;)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TT;>;)V", "Lio/reactivex/ObservableSource<+TU;>;", "LIoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver;", "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableTakeUntil = { "ObservableTakeUntil", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 6, -1, 7, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableTakeUntil;
}

@end

void IoReactivexInternalOperatorsObservableObservableTakeUntil_initWithIoReactivexObservableSource_withIoReactivexObservableSource_(IoReactivexInternalOperatorsObservableObservableTakeUntil *self, id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other) {
  IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream_initWithIoReactivexObservableSource_(self, source);
  JreStrongAssign(&self->other_, other);
}

IoReactivexInternalOperatorsObservableObservableTakeUntil *new_IoReactivexInternalOperatorsObservableObservableTakeUntil_initWithIoReactivexObservableSource_withIoReactivexObservableSource_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableTakeUntil, initWithIoReactivexObservableSource_withIoReactivexObservableSource_, source, other)
}

IoReactivexInternalOperatorsObservableObservableTakeUntil *create_IoReactivexInternalOperatorsObservableObservableTakeUntil_initWithIoReactivexObservableSource_withIoReactivexObservableSource_(id<IoReactivexObservableSource> source, id<IoReactivexObservableSource> other) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableTakeUntil, initWithIoReactivexObservableSource_withIoReactivexObservableSource_, source, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableTakeUntil)

@implementation IoReactivexInternalOperatorsObservableObservableTakeUntil_1

- (instancetype)initWithIoReactivexInternalDisposablesArrayCompositeDisposable:(IoReactivexInternalDisposablesArrayCompositeDisposable *)capture$0
                                    withIoReactivexObserversSerializedObserver:(IoReactivexObserversSerializedObserver *)capture$1 {
  IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(self, capture$0, capture$1);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s {
  [((IoReactivexInternalDisposablesArrayCompositeDisposable *) nil_chk(val$frc_)) setResourceWithInt:1 withIoReactivexDisposablesDisposable:s];
}

- (void)onNextWithId:(id)t {
  [((IoReactivexInternalDisposablesArrayCompositeDisposable *) nil_chk(val$frc_)) dispose];
  [((IoReactivexObserversSerializedObserver *) nil_chk(val$serial_)) onComplete];
}

- (void)onErrorWithNSException:(NSException *)t {
  [((IoReactivexInternalDisposablesArrayCompositeDisposable *) nil_chk(val$frc_)) dispose];
  [((IoReactivexObserversSerializedObserver *) nil_chk(val$serial_)) onErrorWithNSException:t];
}

- (void)onComplete {
  [((IoReactivexInternalDisposablesArrayCompositeDisposable *) nil_chk(val$frc_)) dispose];
  [((IoReactivexObserversSerializedObserver *) nil_chk(val$serial_)) onComplete];
}

- (void)dealloc {
  RELEASE_(val$frc_);
  RELEASE_(val$serial_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalDisposablesArrayCompositeDisposable:withIoReactivexObserversSerializedObserver:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$frc_", "LIoReactivexInternalDisposablesArrayCompositeDisposable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$serial_", "LIoReactivexObserversSerializedObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "(TU;)V", "onError", "LNSException;", "Lio/reactivex/observers/SerializedObserver<TT;>;", "LIoReactivexInternalOperatorsObservableObservableTakeUntil;", "subscribeActualWithIoReactivexObserver:", "Ljava/lang/Object;Lio/reactivex/Observer<TU;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableTakeUntil_1 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 5, 2, 8, -1, 9, 10, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableTakeUntil_1;
}

@end

void IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(IoReactivexInternalOperatorsObservableObservableTakeUntil_1 *self, IoReactivexInternalDisposablesArrayCompositeDisposable *capture$0, IoReactivexObserversSerializedObserver *capture$1) {
  JreStrongAssign(&self->val$frc_, capture$0);
  JreStrongAssign(&self->val$serial_, capture$1);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableTakeUntil_1 *new_IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(IoReactivexInternalDisposablesArrayCompositeDisposable *capture$0, IoReactivexObserversSerializedObserver *capture$1) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableTakeUntil_1, initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_, capture$0, capture$1)
}

IoReactivexInternalOperatorsObservableObservableTakeUntil_1 *create_IoReactivexInternalOperatorsObservableObservableTakeUntil_1_initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_(IoReactivexInternalDisposablesArrayCompositeDisposable *capture$0, IoReactivexObserversSerializedObserver *capture$1) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableTakeUntil_1, initWithIoReactivexInternalDisposablesArrayCompositeDisposable_withIoReactivexObserversSerializedObserver_, capture$0, capture$1)
}

@implementation IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
withIoReactivexInternalDisposablesArrayCompositeDisposable:(IoReactivexInternalDisposablesArrayCompositeDisposable *)frc {
  IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(self, actual, frc);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s {
  if (IoReactivexInternalDisposablesDisposableHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_(self->s_, s)) {
    JreStrongAssign(&self->s_, s);
    [((IoReactivexInternalDisposablesArrayCompositeDisposable *) nil_chk(frc_)) setResourceWithInt:0 withIoReactivexDisposablesDisposable:s];
  }
}

- (void)onNextWithId:(id)t {
  [((id<IoReactivexObserver>) nil_chk(actual_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)t {
  [((IoReactivexInternalDisposablesArrayCompositeDisposable *) nil_chk(frc_)) dispose];
  [((id<IoReactivexObserver>) nil_chk(actual_)) onErrorWithNSException:t];
}

- (void)onComplete {
  [((IoReactivexInternalDisposablesArrayCompositeDisposable *) nil_chk(frc_)) dispose];
  [((id<IoReactivexObserver>) nil_chk(actual_)) onComplete];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(frc_);
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:withIoReactivexInternalDisposablesArrayCompositeDisposable:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onComplete);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "actual_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "frc_", "LIoReactivexInternalDisposablesArrayCompositeDisposable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "s_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;LIoReactivexInternalDisposablesArrayCompositeDisposable;", "(Lio/reactivex/Observer<-TT;>;Lio/reactivex/internal/disposables/ArrayCompositeDisposable;)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lio/reactivex/Observer<-TT;>;", "LIoReactivexInternalOperatorsObservableObservableTakeUntil;", "<T:Ljava/lang/Object;>Ljava/util/concurrent/atomic/AtomicBoolean;Lio/reactivex/Observer<TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver = { "TakeUntilObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 5, 4, 10, -1, -1, 11, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver *self, id<IoReactivexObserver> actual, IoReactivexInternalDisposablesArrayCompositeDisposable *frc) {
  JavaUtilConcurrentAtomicAtomicBoolean_init(self);
  JreStrongAssign(&self->actual_, actual);
  JreStrongAssign(&self->frc_, frc);
}

IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver *new_IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(id<IoReactivexObserver> actual, IoReactivexInternalDisposablesArrayCompositeDisposable *frc) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver, initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_, actual, frc)
}

IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver *create_IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver_initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_(id<IoReactivexObserver> actual, IoReactivexInternalDisposablesArrayCompositeDisposable *frc) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver, initWithIoReactivexObserver_withIoReactivexInternalDisposablesArrayCompositeDisposable_, actual, frc)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableTakeUntil_TakeUntilObserver)
