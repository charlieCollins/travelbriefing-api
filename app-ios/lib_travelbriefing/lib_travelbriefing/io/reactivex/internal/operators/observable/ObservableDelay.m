//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/observable/ObservableDelay.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/ObservableSource.h"
#include "io/reactivex/Observer.h"
#include "io/reactivex/Scheduler.h"
#include "io/reactivex/disposables/Disposable.h"
#include "io/reactivex/internal/disposables/DisposableHelper.h"
#include "io/reactivex/internal/operators/observable/AbstractObservableWithUpstream.h"
#include "io/reactivex/internal/operators/observable/ObservableDelay.h"
#include "io/reactivex/observers/SerializedObserver.h"
#include "java/lang/Runnable.h"
#include "java/util/concurrent/TimeUnit.h"

@interface IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *this$0_;
  id val$t_;
}

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *)outer$
                                                                                     withId:(id)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 *self, IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, id capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 *new_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, id capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 *create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, id capture$0);

@interface IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *this$0_;
  NSException *val$t_;
}

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *)outer$
                                                                            withNSException:(NSException *)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 *self, IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, NSException *capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 *new_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 *create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, NSException *capture$0);

@interface IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *this$0_;
}

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3)

__attribute__((unused)) static void IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 *self, IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$);

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 *new_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 *create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$);

@implementation IoReactivexInternalOperatorsObservableObservableDelay

- (instancetype)initWithIoReactivexObservableSource:(id<IoReactivexObservableSource>)source
                                           withLong:(jlong)delay
                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                           withIoReactivexScheduler:(IoReactivexScheduler *)scheduler
                                        withBoolean:(jboolean)delayError {
  IoReactivexInternalOperatorsObservableObservableDelay_initWithIoReactivexObservableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(self, source, delay, unit, scheduler, delayError);
  return self;
}

- (void)subscribeActualWithIoReactivexObserver:(id<IoReactivexObserver>)t {
  id<IoReactivexObserver> s;
  if (delayError_) {
    s = t;
  }
  else {
    s = create_IoReactivexObserversSerializedObserver_initWithIoReactivexObserver_(t);
  }
  IoReactivexScheduler_Worker *w = [((IoReactivexScheduler *) nil_chk(scheduler_)) createWorker];
  [((id<IoReactivexObservableSource>) nil_chk(source_)) subscribeWithIoReactivexObserver:create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_initWithIoReactivexObserver_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(s, delay_, unit_, w, delayError_)];
}

- (void)dealloc {
  RELEASE_(unit_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObservableSource:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:withBoolean:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delay_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObservableSource;JLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;Z", "(Lio/reactivex/ObservableSource<TT;>;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler;Z)V", "subscribeActual", "LIoReactivexObserver;", "(Lio/reactivex/Observer<-TT;>;)V", "LIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;", "<T:Ljava/lang/Object;>Lio/reactivex/internal/operators/observable/AbstractObservableWithUpstream<TT;TT;>;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDelay = { "ObservableDelay", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x11, 2, 4, -1, 5, -1, 6, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDelay;
}

@end

void IoReactivexInternalOperatorsObservableObservableDelay_initWithIoReactivexObservableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(IoReactivexInternalOperatorsObservableObservableDelay *self, id<IoReactivexObservableSource> source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError) {
  IoReactivexInternalOperatorsObservableAbstractObservableWithUpstream_initWithIoReactivexObservableSource_(self, source);
  self->delay_ = delay;
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->scheduler_, scheduler);
  self->delayError_ = delayError;
}

IoReactivexInternalOperatorsObservableObservableDelay *new_IoReactivexInternalOperatorsObservableObservableDelay_initWithIoReactivexObservableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(id<IoReactivexObservableSource> source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDelay, initWithIoReactivexObservableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_, source, delay, unit, scheduler, delayError)
}

IoReactivexInternalOperatorsObservableObservableDelay *create_IoReactivexInternalOperatorsObservableObservableDelay_initWithIoReactivexObservableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(id<IoReactivexObservableSource> source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDelay, initWithIoReactivexObservableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_, source, delay, unit, scheduler, delayError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableDelay)

@implementation IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver

- (instancetype)initWithIoReactivexObserver:(id<IoReactivexObserver>)actual
                                   withLong:(jlong)delay
             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
            withIoReactivexScheduler_Worker:(IoReactivexScheduler_Worker *)w
                                withBoolean:(jboolean)delayError {
  IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_initWithIoReactivexObserver_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(self, actual, delay, unit, w, delayError);
  return self;
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s {
  if (IoReactivexInternalDisposablesDisposableHelper_validateWithIoReactivexDisposablesDisposable_withIoReactivexDisposablesDisposable_(self->s_, s)) {
    JreStrongAssign(&self->s_, s);
    [((id<IoReactivexObserver>) nil_chk(actual_)) onSubscribeWithIoReactivexDisposablesDisposable:self];
  }
}

- (void)onNextWithId:(id)t {
  [((IoReactivexScheduler_Worker *) nil_chk(w_)) scheduleWithJavaLangRunnable:create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(self, t) withLong:delay_ withJavaUtilConcurrentTimeUnit:unit_];
}

- (void)onErrorWithNSException:(NSException *)t {
  [((IoReactivexScheduler_Worker *) nil_chk(w_)) scheduleWithJavaLangRunnable:create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(self, t) withLong:delayError_ ? delay_ : 0 withJavaUtilConcurrentTimeUnit:unit_];
}

- (void)onComplete {
  [((IoReactivexScheduler_Worker *) nil_chk(w_)) scheduleWithJavaLangRunnable:create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(self) withLong:delay_ withJavaUtilConcurrentTimeUnit:unit_];
}

- (void)dispose {
  [((id<IoReactivexDisposablesDisposable>) nil_chk(s_)) dispose];
  [((IoReactivexScheduler_Worker *) nil_chk(w_)) dispose];
}

- (jboolean)isDisposed {
  return [((IoReactivexScheduler_Worker *) nil_chk(w_)) isDisposed];
}

- (void)dealloc {
  RELEASE_(actual_);
  RELEASE_(unit_);
  RELEASE_(w_);
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexObserver:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler_Worker:withBoolean:);
  methods[1].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  methods[2].selector = @selector(onNextWithId:);
  methods[3].selector = @selector(onErrorWithNSException:);
  methods[4].selector = @selector(onComplete);
  methods[5].selector = @selector(dispose);
  methods[6].selector = @selector(isDisposed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", "LIoReactivexObserver;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "delay_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "w_", "LIoReactivexScheduler_Worker;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "s_", "LIoReactivexDisposablesDisposable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexObserver;JLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler_Worker;Z", "(Lio/reactivex/Observer<-TT;>;JLjava/util/concurrent/TimeUnit;Lio/reactivex/Scheduler$Worker;Z)V", "onSubscribe", "LIoReactivexDisposablesDisposable;", "onNext", "LNSObject;", "(TT;)V", "onError", "LNSException;", "Lio/reactivex/Observer<-TT;>;", "LIoReactivexInternalOperatorsObservableObservableDelay;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lio/reactivex/Observer<TT;>;Lio/reactivex/disposables/Disposable;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver = { "DelayObserver", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x18, 7, 6, 10, -1, -1, 11, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;
}

@end

void IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_initWithIoReactivexObserver_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *self, id<IoReactivexObserver> actual, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w, jboolean delayError) {
  NSObject_init(self);
  JreStrongAssign(&self->actual_, actual);
  self->delay_ = delay;
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->w_, w);
  self->delayError_ = delayError;
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *new_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_initWithIoReactivexObserver_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(id<IoReactivexObserver> actual, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w, jboolean delayError) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver, initWithIoReactivexObserver_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_, actual, delay, unit, w, delayError)
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_initWithIoReactivexObserver_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_(id<IoReactivexObserver> actual, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *w, jboolean delayError) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver, initWithIoReactivexObserver_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_withBoolean_, actual, delay, unit, w, delayError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver)

@implementation IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *)outer$
                                                                                     withId:(id)capture$0 {
  IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(self, outer$, capture$0);
  return self;
}

- (void)run {
  [((id<IoReactivexObserver>) nil_chk(this$0_->actual_)) onNextWithId:val$t_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:withId:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
    { "val$t_", "LNSObject;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver<TT;>;", "TT;", "LIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;", "onNextWithId:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, -1, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1;
}

@end

void IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 *self, IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, id capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$t_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 *new_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, id capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1, initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_, outer$, capture$0)
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1 *create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, id capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_1, initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withId_, outer$, capture$0)
}

@implementation IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *)outer$
                                                                            withNSException:(NSException *)capture$0 {
  IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(self, outer$, capture$0);
  return self;
}

- (void)run {
  @try {
    [((id<IoReactivexObserver>) nil_chk(this$0_->actual_)) onErrorWithNSException:val$t_];
  }
  @finally {
    [((IoReactivexScheduler_Worker *) nil_chk(this$0_->w_)) dispose];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:withNSException:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
    { "val$t_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver<TT;>;", "LIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;", "onErrorWithNSException:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 2, 1, -1, 2, -1, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2;
}

@end

void IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 *self, IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, NSException *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$t_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 *new_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, NSException *capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2, initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_, outer$, capture$0)
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2 *create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$, NSException *capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_2, initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_withNSException_, outer$, capture$0)
}

@implementation IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3

- (instancetype)initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *)outer$ {
  IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(self, outer$);
  return self;
}

- (void)run {
  @try {
    [((id<IoReactivexObserver>) nil_chk(this$0_->actual_)) onComplete];
  }
  @finally {
    [((IoReactivexScheduler_Worker *) nil_chk(this$0_->w_)) dispose];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Lio/reactivex/internal/operators/observable/ObservableDelay$DelayObserver<TT;>;", "LIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver;", "onComplete" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 = { "", "io.reactivex.internal.operators.observable", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3;
}

@end

void IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 *self, IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 *new_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3, initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_, outer$)
}

IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3 *create_IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3_initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_3, initWithIoReactivexInternalOperatorsObservableObservableDelay_DelayObserver_, outer$)
}
