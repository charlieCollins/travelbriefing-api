//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/completable/CompletableDelay.java
//

#include "J2ObjC_source.h"
#include "io/reactivex/Completable.h"
#include "io/reactivex/CompletableObserver.h"
#include "io/reactivex/CompletableSource.h"
#include "io/reactivex/Scheduler.h"
#include "io/reactivex/disposables/CompositeDisposable.h"
#include "io/reactivex/disposables/Disposable.h"
#include "io/reactivex/internal/operators/completable/CompletableDelay.h"
#include "java/lang/Runnable.h"
#include "java/util/concurrent/TimeUnit.h"

@interface IoReactivexInternalOperatorsCompletableCompletableDelay_1 : NSObject < IoReactivexCompletableObserver > {
 @public
  IoReactivexInternalOperatorsCompletableCompletableDelay *this$0_;
  IoReactivexDisposablesCompositeDisposable *val$set_;
  id<IoReactivexCompletableObserver> val$s_;
}

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableDelay:(IoReactivexInternalOperatorsCompletableCompletableDelay *)outer$
                                  withIoReactivexDisposablesCompositeDisposable:(IoReactivexDisposablesCompositeDisposable *)capture$0
                                             withIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)capture$1;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableDelay_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *self, IoReactivexInternalOperatorsCompletableCompletableDelay *outer$, IoReactivexDisposablesCompositeDisposable *capture$0, id<IoReactivexCompletableObserver> capture$1);

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletableDelay_1 *new_IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDelay *outer$, IoReactivexDisposablesCompositeDisposable *capture$0, id<IoReactivexCompletableObserver> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletableDelay_1 *create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDelay *outer$, IoReactivexDisposablesCompositeDisposable *capture$0, id<IoReactivexCompletableObserver> capture$1);

@interface IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsCompletableCompletableDelay_1 *this$0_;
}

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1:(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableDelay_1_1)

__attribute__((unused)) static void IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 *self, IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$);

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 *new_IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 *create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$);

@interface IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 : NSObject < JavaLangRunnable > {
 @public
  IoReactivexInternalOperatorsCompletableCompletableDelay_1 *this$0_;
  NSException *val$e_;
}

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1:(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *)outer$
                                                                  withNSException:(NSException *)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsCompletableCompletableDelay_1_2)

__attribute__((unused)) static void IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 *self, IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$, NSException *capture$0);

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 *new_IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$, NSException *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 *create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$, NSException *capture$0);

@implementation IoReactivexInternalOperatorsCompletableCompletableDelay

- (instancetype)initWithIoReactivexCompletableSource:(id<IoReactivexCompletableSource>)source
                                            withLong:(jlong)delay
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                            withIoReactivexScheduler:(IoReactivexScheduler *)scheduler
                                         withBoolean:(jboolean)delayError {
  IoReactivexInternalOperatorsCompletableCompletableDelay_initWithIoReactivexCompletableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(self, source, delay, unit, scheduler, delayError);
  return self;
}

- (void)subscribeActualWithIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)s {
  IoReactivexDisposablesCompositeDisposable *set = create_IoReactivexDisposablesCompositeDisposable_init();
  [((id<IoReactivexCompletableSource>) nil_chk(source_)) subscribeWithIoReactivexCompletableObserver:create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(self, set, s)];
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(unit_);
  RELEASE_(scheduler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexCompletableSource:withLong:withJavaUtilConcurrentTimeUnit:withIoReactivexScheduler:withBoolean:);
  methods[1].selector = @selector(subscribeActualWithIoReactivexCompletableObserver:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LIoReactivexCompletableSource;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delay_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unit_", "LJavaUtilConcurrentTimeUnit;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scheduler_", "LIoReactivexScheduler;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delayError_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexCompletableSource;JLJavaUtilConcurrentTimeUnit;LIoReactivexScheduler;Z", "subscribeActual", "LIoReactivexCompletableObserver;" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableDelay = { "CompletableDelay", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x11, 2, 5, -1, -1, -1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableDelay;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableDelay_initWithIoReactivexCompletableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(IoReactivexInternalOperatorsCompletableCompletableDelay *self, id<IoReactivexCompletableSource> source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError) {
  IoReactivexCompletable_init(self);
  JreStrongAssign(&self->source_, source);
  self->delay_ = delay;
  JreStrongAssign(&self->unit_, unit);
  JreStrongAssign(&self->scheduler_, scheduler);
  self->delayError_ = delayError;
}

IoReactivexInternalOperatorsCompletableCompletableDelay *new_IoReactivexInternalOperatorsCompletableCompletableDelay_initWithIoReactivexCompletableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(id<IoReactivexCompletableSource> source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay, initWithIoReactivexCompletableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_, source, delay, unit, scheduler, delayError)
}

IoReactivexInternalOperatorsCompletableCompletableDelay *create_IoReactivexInternalOperatorsCompletableCompletableDelay_initWithIoReactivexCompletableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_(id<IoReactivexCompletableSource> source, jlong delay, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler, jboolean delayError) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay, initWithIoReactivexCompletableSource_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_withBoolean_, source, delay, unit, scheduler, delayError)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(IoReactivexInternalOperatorsCompletableCompletableDelay)

@implementation IoReactivexInternalOperatorsCompletableCompletableDelay_1

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableDelay:(IoReactivexInternalOperatorsCompletableCompletableDelay *)outer$
                                  withIoReactivexDisposablesCompositeDisposable:(IoReactivexDisposablesCompositeDisposable *)capture$0
                                             withIoReactivexCompletableObserver:(id<IoReactivexCompletableObserver>)capture$1 {
  IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)onComplete {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(val$set_)) addWithIoReactivexDisposablesDisposable:[((IoReactivexScheduler *) nil_chk(this$0_->scheduler_)) scheduleDirectWithJavaLangRunnable:create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(self) withLong:this$0_->delay_ withJavaUtilConcurrentTimeUnit:this$0_->unit_]];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(val$set_)) addWithIoReactivexDisposablesDisposable:[((IoReactivexScheduler *) nil_chk(this$0_->scheduler_)) scheduleDirectWithJavaLangRunnable:create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(self, e) withLong:this$0_->delayError_ ? this$0_->delay_ : 0 withJavaUtilConcurrentTimeUnit:this$0_->unit_]];
}

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d {
  [((IoReactivexDisposablesCompositeDisposable *) nil_chk(val$set_)) addWithIoReactivexDisposablesDisposable:d];
  [((id<IoReactivexCompletableObserver>) nil_chk(val$s_)) onSubscribeWithIoReactivexDisposablesDisposable:val$set_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$set_);
  RELEASE_(val$s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletableDelay:withIoReactivexDisposablesCompositeDisposable:withIoReactivexCompletableObserver:);
  methods[1].selector = @selector(onComplete);
  methods[2].selector = @selector(onErrorWithNSException:);
  methods[3].selector = @selector(onSubscribeWithIoReactivexDisposablesDisposable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletableDelay;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$set_", "LIoReactivexDisposablesCompositeDisposable;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$s_", "LIoReactivexCompletableObserver;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onError", "LNSException;", "onSubscribe", "LIoReactivexDisposablesDisposable;", "LIoReactivexInternalOperatorsCompletableCompletableDelay;", "subscribeActualWithIoReactivexCompletableObserver:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableDelay_1 = { "", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x8018, 4, 3, 4, -1, 5, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableDelay_1;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *self, IoReactivexInternalOperatorsCompletableCompletableDelay *outer$, IoReactivexDisposablesCompositeDisposable *capture$0, id<IoReactivexCompletableObserver> capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$set_, capture$0);
  JreStrongAssign(&self->val$s_, capture$1);
  NSObject_init(self);
}

IoReactivexInternalOperatorsCompletableCompletableDelay_1 *new_IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDelay *outer$, IoReactivexDisposablesCompositeDisposable *capture$0, id<IoReactivexCompletableObserver> capture$1) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay_1, initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_, outer$, capture$0, capture$1)
}

IoReactivexInternalOperatorsCompletableCompletableDelay_1 *create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_(IoReactivexInternalOperatorsCompletableCompletableDelay *outer$, IoReactivexDisposablesCompositeDisposable *capture$0, id<IoReactivexCompletableObserver> capture$1) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay_1, initWithIoReactivexInternalOperatorsCompletableCompletableDelay_withIoReactivexDisposablesCompositeDisposable_withIoReactivexCompletableObserver_, outer$, capture$0, capture$1)
}

@implementation IoReactivexInternalOperatorsCompletableCompletableDelay_1_1

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1:(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *)outer$ {
  IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(self, outer$);
  return self;
}

- (void)run {
  [((id<IoReactivexCompletableObserver>) nil_chk(this$0_->val$s_)) onComplete];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletableDelay_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsCompletableCompletableDelay_1;", "onComplete" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 = { "", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableDelay_1_1;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 *self, IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 *new_IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay_1_1, initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_, outer$)
}

IoReactivexInternalOperatorsCompletableCompletableDelay_1_1 *create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_1_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay_1_1, initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_, outer$)
}

@implementation IoReactivexInternalOperatorsCompletableCompletableDelay_1_2

- (instancetype)initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1:(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *)outer$
                                                                  withNSException:(NSException *)capture$0 {
  IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(self, outer$, capture$0);
  return self;
}

- (void)run {
  [((id<IoReactivexCompletableObserver>) nil_chk(this$0_->val$s_)) onErrorWithNSException:val$e_];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$e_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1:withNSException:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LIoReactivexInternalOperatorsCompletableCompletableDelay_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$e_", "LNSException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIoReactivexInternalOperatorsCompletableCompletableDelay_1;", "onErrorWithNSException:" };
  static const J2ObjcClassInfo _IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 = { "", "io.reactivex.internal.operators.completable", ptrTable, methods, fields, 7, 0x8018, 2, 2, 0, -1, 1, -1, -1 };
  return &_IoReactivexInternalOperatorsCompletableCompletableDelay_1_2;
}

@end

void IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 *self, IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$, NSException *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$e_, capture$0);
  NSObject_init(self);
}

IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 *new_IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$, NSException *capture$0) {
  J2OBJC_NEW_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay_1_2, initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_, outer$, capture$0)
}

IoReactivexInternalOperatorsCompletableCompletableDelay_1_2 *create_IoReactivexInternalOperatorsCompletableCompletableDelay_1_2_initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_(IoReactivexInternalOperatorsCompletableCompletableDelay_1 *outer$, NSException *capture$0) {
  J2OBJC_CREATE_IMPL(IoReactivexInternalOperatorsCompletableCompletableDelay_1_2, initWithIoReactivexInternalOperatorsCompletableCompletableDelay_1_withNSException_, outer$, capture$0)
}
