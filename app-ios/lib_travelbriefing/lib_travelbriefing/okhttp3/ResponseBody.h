//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/ResponseBody.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3ResponseBody")
#ifdef RESTRICT_Okhttp3ResponseBody
#define INCLUDE_ALL_Okhttp3ResponseBody 0
#else
#define INCLUDE_ALL_Okhttp3ResponseBody 1
#endif
#undef RESTRICT_Okhttp3ResponseBody

#if !defined (Okhttp3ResponseBody_) && (INCLUDE_ALL_Okhttp3ResponseBody || defined(INCLUDE_Okhttp3ResponseBody))
#define Okhttp3ResponseBody_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaIoReader;
@class Okhttp3MediaType;
@protocol OkioBufferedSource;

@interface Okhttp3ResponseBody : NSObject < JavaIoCloseable >

#pragma mark Public

- (instancetype)init;

- (IOSByteArray *)bytes;

- (JavaIoInputStream *)byteStream;

- (JavaIoReader *)charStream;

- (void)close;

- (jlong)contentLength;

- (Okhttp3MediaType *)contentType;

+ (Okhttp3ResponseBody *)createWithOkhttp3MediaType:(Okhttp3MediaType *)contentType
                                      withByteArray:(IOSByteArray *)content;

+ (Okhttp3ResponseBody *)createWithOkhttp3MediaType:(Okhttp3MediaType *)contentType
                                           withLong:(jlong)contentLength
                             withOkioBufferedSource:(id<OkioBufferedSource>)content;

+ (Okhttp3ResponseBody *)createWithOkhttp3MediaType:(Okhttp3MediaType *)contentType
                                       withNSString:(NSString *)content;

- (id<OkioBufferedSource>)source;

- (NSString *)string;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3ResponseBody)

FOUNDATION_EXPORT void Okhttp3ResponseBody_init(Okhttp3ResponseBody *self);

FOUNDATION_EXPORT Okhttp3ResponseBody *Okhttp3ResponseBody_createWithOkhttp3MediaType_withNSString_(Okhttp3MediaType *contentType, NSString *content);

FOUNDATION_EXPORT Okhttp3ResponseBody *Okhttp3ResponseBody_createWithOkhttp3MediaType_withByteArray_(Okhttp3MediaType *contentType, IOSByteArray *content);

FOUNDATION_EXPORT Okhttp3ResponseBody *Okhttp3ResponseBody_createWithOkhttp3MediaType_withLong_withOkioBufferedSource_(Okhttp3MediaType *contentType, jlong contentLength, id<OkioBufferedSource> content);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3ResponseBody)

#endif

#if !defined (Okhttp3ResponseBody_BomAwareReader_) && (INCLUDE_ALL_Okhttp3ResponseBody || defined(INCLUDE_Okhttp3ResponseBody_BomAwareReader))
#define Okhttp3ResponseBody_BomAwareReader_

#define RESTRICT_JavaIoReader 1
#define INCLUDE_JavaIoReader 1
#include "java/io/Reader.h"

@class IOSCharArray;
@class JavaNioCharsetCharset;
@protocol OkioBufferedSource;

@interface Okhttp3ResponseBody_BomAwareReader : JavaIoReader

#pragma mark Public

- (void)close;

- (jint)readWithCharArray:(IOSCharArray *)cbuf
                  withInt:(jint)off
                  withInt:(jint)len;

#pragma mark Package-Private

- (instancetype)initWithOkioBufferedSource:(id<OkioBufferedSource>)source
                 withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3ResponseBody_BomAwareReader)

FOUNDATION_EXPORT void Okhttp3ResponseBody_BomAwareReader_initWithOkioBufferedSource_withJavaNioCharsetCharset_(Okhttp3ResponseBody_BomAwareReader *self, id<OkioBufferedSource> source, JavaNioCharsetCharset *charset);

FOUNDATION_EXPORT Okhttp3ResponseBody_BomAwareReader *new_Okhttp3ResponseBody_BomAwareReader_initWithOkioBufferedSource_withJavaNioCharsetCharset_(id<OkioBufferedSource> source, JavaNioCharsetCharset *charset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3ResponseBody_BomAwareReader *create_Okhttp3ResponseBody_BomAwareReader_initWithOkioBufferedSource_withJavaNioCharsetCharset_(id<OkioBufferedSource> source, JavaNioCharsetCharset *charset);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3ResponseBody_BomAwareReader)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3ResponseBody")
