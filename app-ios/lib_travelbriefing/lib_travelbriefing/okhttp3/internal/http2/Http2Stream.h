//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/http2/Http2Stream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttp2Http2Stream")
#ifdef RESTRICT_Okhttp3InternalHttp2Http2Stream
#define INCLUDE_ALL_Okhttp3InternalHttp2Http2Stream 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttp2Http2Stream 1
#endif
#undef RESTRICT_Okhttp3InternalHttp2Http2Stream

#if !defined (Okhttp3InternalHttp2Http2Stream_) && (INCLUDE_ALL_Okhttp3InternalHttp2Http2Stream || defined(INCLUDE_Okhttp3InternalHttp2Http2Stream))
#define Okhttp3InternalHttp2Http2Stream_

@class Okhttp3InternalHttp2ErrorCode;
@class Okhttp3InternalHttp2Http2Connection;
@class Okhttp3InternalHttp2Http2Stream_FramingSink;
@class Okhttp3InternalHttp2Http2Stream_StreamTimeout;
@class OkioTimeout;
@protocol JavaUtilList;
@protocol OkioBufferedSource;
@protocol OkioSink;
@protocol OkioSource;

@interface Okhttp3InternalHttp2Http2Stream : NSObject {
 @public
  jlong unacknowledgedBytesRead_;
  jlong bytesLeftInWriteWindow_;
  jint id__;
  Okhttp3InternalHttp2Http2Connection *connection_;
  Okhttp3InternalHttp2Http2Stream_FramingSink *sink_;
  Okhttp3InternalHttp2Http2Stream_StreamTimeout *readTimeout_;
  Okhttp3InternalHttp2Http2Stream_StreamTimeout *writeTimeout_;
  Okhttp3InternalHttp2ErrorCode *errorCode_;
}

#pragma mark Public

- (void)closeWithOkhttp3InternalHttp2ErrorCode:(Okhttp3InternalHttp2ErrorCode *)rstStatusCode;

- (void)closeLaterWithOkhttp3InternalHttp2ErrorCode:(Okhttp3InternalHttp2ErrorCode *)errorCode;

- (Okhttp3InternalHttp2Http2Connection *)getConnection;

- (Okhttp3InternalHttp2ErrorCode *)getErrorCode;

- (jint)getId;

- (id<JavaUtilList>)getRequestHeaders;

- (id<OkioSink>)getSink;

- (id<OkioSource>)getSource;

- (jboolean)isLocallyInitiated;

- (jboolean)isOpen;

- (OkioTimeout *)readTimeout;

- (void)sendResponseHeadersWithJavaUtilList:(id<JavaUtilList>)responseHeaders
                                withBoolean:(jboolean)outArg;

- (id<JavaUtilList>)takeResponseHeaders;

- (OkioTimeout *)writeTimeout;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)id_
withOkhttp3InternalHttp2Http2Connection:(Okhttp3InternalHttp2Http2Connection *)connection
                withBoolean:(jboolean)outFinished
                withBoolean:(jboolean)inFinished
           withJavaUtilList:(id<JavaUtilList>)requestHeaders;

- (void)addBytesToWriteWindowWithLong:(jlong)delta;

- (void)cancelStreamIfNecessary;

- (void)checkOutNotClosed;

- (void)receiveDataWithOkioBufferedSource:(id<OkioBufferedSource>)inArg
                                  withInt:(jint)length;

- (void)receiveFin;

- (void)receiveHeadersWithJavaUtilList:(id<JavaUtilList>)headers;

- (void)receiveRstStreamWithOkhttp3InternalHttp2ErrorCode:(Okhttp3InternalHttp2ErrorCode *)errorCode;

- (void)waitForIo;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttp2Http2Stream)

J2OBJC_FIELD_SETTER(Okhttp3InternalHttp2Http2Stream, connection_, Okhttp3InternalHttp2Http2Connection *)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttp2Http2Stream, sink_, Okhttp3InternalHttp2Http2Stream_FramingSink *)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttp2Http2Stream, readTimeout_, Okhttp3InternalHttp2Http2Stream_StreamTimeout *)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttp2Http2Stream, writeTimeout_, Okhttp3InternalHttp2Http2Stream_StreamTimeout *)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttp2Http2Stream, errorCode_, Okhttp3InternalHttp2ErrorCode *)

FOUNDATION_EXPORT void Okhttp3InternalHttp2Http2Stream_initWithInt_withOkhttp3InternalHttp2Http2Connection_withBoolean_withBoolean_withJavaUtilList_(Okhttp3InternalHttp2Http2Stream *self, jint id_, Okhttp3InternalHttp2Http2Connection *connection, jboolean outFinished, jboolean inFinished, id<JavaUtilList> requestHeaders);

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Stream *new_Okhttp3InternalHttp2Http2Stream_initWithInt_withOkhttp3InternalHttp2Http2Connection_withBoolean_withBoolean_withJavaUtilList_(jint id_, Okhttp3InternalHttp2Http2Connection *connection, jboolean outFinished, jboolean inFinished, id<JavaUtilList> requestHeaders) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Stream *create_Okhttp3InternalHttp2Http2Stream_initWithInt_withOkhttp3InternalHttp2Http2Connection_withBoolean_withBoolean_withJavaUtilList_(jint id_, Okhttp3InternalHttp2Http2Connection *connection, jboolean outFinished, jboolean inFinished, id<JavaUtilList> requestHeaders);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp2Http2Stream)

#endif

#if !defined (Okhttp3InternalHttp2Http2Stream_FramingSink_) && (INCLUDE_ALL_Okhttp3InternalHttp2Http2Stream || defined(INCLUDE_Okhttp3InternalHttp2Http2Stream_FramingSink))
#define Okhttp3InternalHttp2Http2Stream_FramingSink_

#define RESTRICT_OkioSink 1
#define INCLUDE_OkioSink 1
#include "okio/Sink.h"

@class Okhttp3InternalHttp2Http2Stream;
@class OkioBuffer;
@class OkioTimeout;

@interface Okhttp3InternalHttp2Http2Stream_FramingSink : NSObject < OkioSink > {
 @public
  jboolean closed_;
  jboolean finished_;
}

#pragma mark Public

- (void)close;

- (void)flush;

- (OkioTimeout *)timeout;

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount;

#pragma mark Package-Private

- (instancetype)initWithOkhttp3InternalHttp2Http2Stream:(Okhttp3InternalHttp2Http2Stream *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttp2Http2Stream_FramingSink)

FOUNDATION_EXPORT void Okhttp3InternalHttp2Http2Stream_FramingSink_initWithOkhttp3InternalHttp2Http2Stream_(Okhttp3InternalHttp2Http2Stream_FramingSink *self, Okhttp3InternalHttp2Http2Stream *outer$);

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Stream_FramingSink *new_Okhttp3InternalHttp2Http2Stream_FramingSink_initWithOkhttp3InternalHttp2Http2Stream_(Okhttp3InternalHttp2Http2Stream *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Stream_FramingSink *create_Okhttp3InternalHttp2Http2Stream_FramingSink_initWithOkhttp3InternalHttp2Http2Stream_(Okhttp3InternalHttp2Http2Stream *outer$);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp2Http2Stream_FramingSink)

#endif

#if !defined (Okhttp3InternalHttp2Http2Stream_StreamTimeout_) && (INCLUDE_ALL_Okhttp3InternalHttp2Http2Stream || defined(INCLUDE_Okhttp3InternalHttp2Http2Stream_StreamTimeout))
#define Okhttp3InternalHttp2Http2Stream_StreamTimeout_

#define RESTRICT_OkioAsyncTimeout 1
#define INCLUDE_OkioAsyncTimeout 1
#include "okio/AsyncTimeout.h"

@class JavaIoIOException;
@class Okhttp3InternalHttp2Http2Stream;

@interface Okhttp3InternalHttp2Http2Stream_StreamTimeout : OkioAsyncTimeout

#pragma mark Public

- (void)exitAndThrowIfTimedOut;

#pragma mark Protected

- (JavaIoIOException *)newTimeoutExceptionWithJavaIoIOException:(JavaIoIOException *)cause OBJC_METHOD_FAMILY_NONE;

- (void)timedOut;

#pragma mark Package-Private

- (instancetype)initWithOkhttp3InternalHttp2Http2Stream:(Okhttp3InternalHttp2Http2Stream *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttp2Http2Stream_StreamTimeout)

FOUNDATION_EXPORT void Okhttp3InternalHttp2Http2Stream_StreamTimeout_initWithOkhttp3InternalHttp2Http2Stream_(Okhttp3InternalHttp2Http2Stream_StreamTimeout *self, Okhttp3InternalHttp2Http2Stream *outer$);

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Stream_StreamTimeout *new_Okhttp3InternalHttp2Http2Stream_StreamTimeout_initWithOkhttp3InternalHttp2Http2Stream_(Okhttp3InternalHttp2Http2Stream *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttp2Http2Stream_StreamTimeout *create_Okhttp3InternalHttp2Http2Stream_StreamTimeout_initWithOkhttp3InternalHttp2Http2Stream_(Okhttp3InternalHttp2Http2Stream *outer$);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp2Http2Stream_StreamTimeout)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttp2Http2Stream")
