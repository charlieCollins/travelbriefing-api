//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/http2/Http2.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttp2Http2")
#ifdef RESTRICT_Okhttp3InternalHttp2Http2
#define INCLUDE_ALL_Okhttp3InternalHttp2Http2 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttp2Http2 1
#endif
#undef RESTRICT_Okhttp3InternalHttp2Http2

#if !defined (Okhttp3InternalHttp2Http2_) && (INCLUDE_ALL_Okhttp3InternalHttp2Http2 || defined(INCLUDE_Okhttp3InternalHttp2Http2))
#define Okhttp3InternalHttp2Http2_

@class IOSObjectArray;
@class JavaIoIOException;
@class JavaLangIllegalArgumentException;
@class OkioByteString;

@interface Okhttp3InternalHttp2Http2 : NSObject

#pragma mark Package-Private

+ (NSString *)formatFlagsWithByte:(jbyte)type
                         withByte:(jbyte)flags;

+ (NSString *)frameLogWithBoolean:(jboolean)inbound
                          withInt:(jint)streamId
                          withInt:(jint)length
                         withByte:(jbyte)type
                         withByte:(jbyte)flags;

+ (JavaLangIllegalArgumentException *)illegalArgumentWithNSString:(NSString *)message
                                                withNSObjectArray:(IOSObjectArray *)args;

+ (JavaIoIOException *)ioExceptionWithNSString:(NSString *)message
                             withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_STATIC_INIT(Okhttp3InternalHttp2Http2)

inline OkioByteString *Okhttp3InternalHttp2Http2_get_CONNECTION_PREFACE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OkioByteString *Okhttp3InternalHttp2Http2_CONNECTION_PREFACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalHttp2Http2, CONNECTION_PREFACE, OkioByteString *)

inline jint Okhttp3InternalHttp2Http2_get_INITIAL_MAX_FRAME_SIZE();
#define Okhttp3InternalHttp2Http2_INITIAL_MAX_FRAME_SIZE 16384
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, INITIAL_MAX_FRAME_SIZE, jint)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_DATA();
#define Okhttp3InternalHttp2Http2_TYPE_DATA 0
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_DATA, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_HEADERS();
#define Okhttp3InternalHttp2Http2_TYPE_HEADERS 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_HEADERS, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_PRIORITY();
#define Okhttp3InternalHttp2Http2_TYPE_PRIORITY 2
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_PRIORITY, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_RST_STREAM();
#define Okhttp3InternalHttp2Http2_TYPE_RST_STREAM 3
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_RST_STREAM, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_SETTINGS();
#define Okhttp3InternalHttp2Http2_TYPE_SETTINGS 4
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_SETTINGS, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_PUSH_PROMISE();
#define Okhttp3InternalHttp2Http2_TYPE_PUSH_PROMISE 5
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_PUSH_PROMISE, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_PING();
#define Okhttp3InternalHttp2Http2_TYPE_PING 6
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_PING, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_GOAWAY();
#define Okhttp3InternalHttp2Http2_TYPE_GOAWAY 7
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_GOAWAY, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_WINDOW_UPDATE();
#define Okhttp3InternalHttp2Http2_TYPE_WINDOW_UPDATE 8
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_WINDOW_UPDATE, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_TYPE_CONTINUATION();
#define Okhttp3InternalHttp2Http2_TYPE_CONTINUATION 9
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, TYPE_CONTINUATION, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_NONE();
#define Okhttp3InternalHttp2Http2_FLAG_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_NONE, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_ACK();
#define Okhttp3InternalHttp2Http2_FLAG_ACK 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_ACK, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_END_STREAM();
#define Okhttp3InternalHttp2Http2_FLAG_END_STREAM 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_END_STREAM, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_END_HEADERS();
#define Okhttp3InternalHttp2Http2_FLAG_END_HEADERS 4
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_END_HEADERS, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_END_PUSH_PROMISE();
#define Okhttp3InternalHttp2Http2_FLAG_END_PUSH_PROMISE 4
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_END_PUSH_PROMISE, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_PADDED();
#define Okhttp3InternalHttp2Http2_FLAG_PADDED 8
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_PADDED, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_PRIORITY();
#define Okhttp3InternalHttp2Http2_FLAG_PRIORITY 32
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_PRIORITY, jbyte)

inline jbyte Okhttp3InternalHttp2Http2_get_FLAG_COMPRESSED();
#define Okhttp3InternalHttp2Http2_FLAG_COMPRESSED 32
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttp2Http2, FLAG_COMPRESSED, jbyte)

inline IOSObjectArray *Okhttp3InternalHttp2Http2_get_FLAGS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *Okhttp3InternalHttp2Http2_FLAGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalHttp2Http2, FLAGS, IOSObjectArray *)

inline IOSObjectArray *Okhttp3InternalHttp2Http2_get_BINARY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *Okhttp3InternalHttp2Http2_BINARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalHttp2Http2, BINARY, IOSObjectArray *)

FOUNDATION_EXPORT JavaLangIllegalArgumentException *Okhttp3InternalHttp2Http2_illegalArgumentWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args);

FOUNDATION_EXPORT JavaIoIOException *Okhttp3InternalHttp2Http2_ioExceptionWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args);

FOUNDATION_EXPORT NSString *Okhttp3InternalHttp2Http2_frameLogWithBoolean_withInt_withInt_withByte_withByte_(jboolean inbound, jint streamId, jint length, jbyte type, jbyte flags);

FOUNDATION_EXPORT NSString *Okhttp3InternalHttp2Http2_formatFlagsWithByte_withByte_(jbyte type, jbyte flags);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp2Http2)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttp2Http2")
