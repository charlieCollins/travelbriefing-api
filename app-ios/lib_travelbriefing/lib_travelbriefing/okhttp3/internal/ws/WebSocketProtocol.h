//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/ws/WebSocketProtocol.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalWsWebSocketProtocol")
#ifdef RESTRICT_Okhttp3InternalWsWebSocketProtocol
#define INCLUDE_ALL_Okhttp3InternalWsWebSocketProtocol 0
#else
#define INCLUDE_ALL_Okhttp3InternalWsWebSocketProtocol 1
#endif
#undef RESTRICT_Okhttp3InternalWsWebSocketProtocol

#if !defined (Okhttp3InternalWsWebSocketProtocol_) && (INCLUDE_ALL_Okhttp3InternalWsWebSocketProtocol || defined(INCLUDE_Okhttp3InternalWsWebSocketProtocol))
#define Okhttp3InternalWsWebSocketProtocol_

@class IOSByteArray;

@interface Okhttp3InternalWsWebSocketProtocol : NSObject

#pragma mark Public

+ (NSString *)acceptHeaderWithNSString:(NSString *)key;

#pragma mark Package-Private

+ (NSString *)closeCodeExceptionMessageWithInt:(jint)code;

+ (void)toggleMaskWithByteArray:(IOSByteArray *)buffer
                       withLong:(jlong)byteCount
                  withByteArray:(IOSByteArray *)key
                       withLong:(jlong)frameBytesRead;

+ (void)validateCloseCodeWithInt:(jint)code;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalWsWebSocketProtocol)

inline NSString *Okhttp3InternalWsWebSocketProtocol_get_ACCEPT_MAGIC();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *Okhttp3InternalWsWebSocketProtocol_ACCEPT_MAGIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalWsWebSocketProtocol, ACCEPT_MAGIC, NSString *)

inline jint Okhttp3InternalWsWebSocketProtocol_get_B0_FLAG_FIN();
#define Okhttp3InternalWsWebSocketProtocol_B0_FLAG_FIN 128
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, B0_FLAG_FIN, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_B0_FLAG_RSV1();
#define Okhttp3InternalWsWebSocketProtocol_B0_FLAG_RSV1 64
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, B0_FLAG_RSV1, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_B0_FLAG_RSV2();
#define Okhttp3InternalWsWebSocketProtocol_B0_FLAG_RSV2 32
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, B0_FLAG_RSV2, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_B0_FLAG_RSV3();
#define Okhttp3InternalWsWebSocketProtocol_B0_FLAG_RSV3 16
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, B0_FLAG_RSV3, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_B0_MASK_OPCODE();
#define Okhttp3InternalWsWebSocketProtocol_B0_MASK_OPCODE 15
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, B0_MASK_OPCODE, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_OPCODE_FLAG_CONTROL();
#define Okhttp3InternalWsWebSocketProtocol_OPCODE_FLAG_CONTROL 8
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, OPCODE_FLAG_CONTROL, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_B1_FLAG_MASK();
#define Okhttp3InternalWsWebSocketProtocol_B1_FLAG_MASK 128
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, B1_FLAG_MASK, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_B1_MASK_LENGTH();
#define Okhttp3InternalWsWebSocketProtocol_B1_MASK_LENGTH 127
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, B1_MASK_LENGTH, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_OPCODE_CONTINUATION();
#define Okhttp3InternalWsWebSocketProtocol_OPCODE_CONTINUATION 0
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, OPCODE_CONTINUATION, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_OPCODE_TEXT();
#define Okhttp3InternalWsWebSocketProtocol_OPCODE_TEXT 1
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, OPCODE_TEXT, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_OPCODE_BINARY();
#define Okhttp3InternalWsWebSocketProtocol_OPCODE_BINARY 2
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, OPCODE_BINARY, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_OPCODE_CONTROL_CLOSE();
#define Okhttp3InternalWsWebSocketProtocol_OPCODE_CONTROL_CLOSE 8
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, OPCODE_CONTROL_CLOSE, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_OPCODE_CONTROL_PING();
#define Okhttp3InternalWsWebSocketProtocol_OPCODE_CONTROL_PING 9
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, OPCODE_CONTROL_PING, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_OPCODE_CONTROL_PONG();
#define Okhttp3InternalWsWebSocketProtocol_OPCODE_CONTROL_PONG 10
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, OPCODE_CONTROL_PONG, jint)

inline jlong Okhttp3InternalWsWebSocketProtocol_get_PAYLOAD_BYTE_MAX();
#define Okhttp3InternalWsWebSocketProtocol_PAYLOAD_BYTE_MAX 125LL
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, PAYLOAD_BYTE_MAX, jlong)

inline jlong Okhttp3InternalWsWebSocketProtocol_get_CLOSE_MESSAGE_MAX();
#define Okhttp3InternalWsWebSocketProtocol_CLOSE_MESSAGE_MAX 123LL
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, CLOSE_MESSAGE_MAX, jlong)

inline jint Okhttp3InternalWsWebSocketProtocol_get_PAYLOAD_SHORT();
#define Okhttp3InternalWsWebSocketProtocol_PAYLOAD_SHORT 126
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, PAYLOAD_SHORT, jint)

inline jlong Okhttp3InternalWsWebSocketProtocol_get_PAYLOAD_SHORT_MAX();
#define Okhttp3InternalWsWebSocketProtocol_PAYLOAD_SHORT_MAX 65535LL
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, PAYLOAD_SHORT_MAX, jlong)

inline jint Okhttp3InternalWsWebSocketProtocol_get_PAYLOAD_LONG();
#define Okhttp3InternalWsWebSocketProtocol_PAYLOAD_LONG 127
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, PAYLOAD_LONG, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_CLOSE_CLIENT_GOING_AWAY();
#define Okhttp3InternalWsWebSocketProtocol_CLOSE_CLIENT_GOING_AWAY 1001
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, CLOSE_CLIENT_GOING_AWAY, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_CLOSE_PROTOCOL_EXCEPTION();
#define Okhttp3InternalWsWebSocketProtocol_CLOSE_PROTOCOL_EXCEPTION 1002
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, CLOSE_PROTOCOL_EXCEPTION, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_CLOSE_NO_STATUS_CODE();
#define Okhttp3InternalWsWebSocketProtocol_CLOSE_NO_STATUS_CODE 1005
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, CLOSE_NO_STATUS_CODE, jint)

inline jint Okhttp3InternalWsWebSocketProtocol_get_CLOSE_ABNORMAL_TERMINATION();
#define Okhttp3InternalWsWebSocketProtocol_CLOSE_ABNORMAL_TERMINATION 1006
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalWsWebSocketProtocol, CLOSE_ABNORMAL_TERMINATION, jint)

FOUNDATION_EXPORT void Okhttp3InternalWsWebSocketProtocol_toggleMaskWithByteArray_withLong_withByteArray_withLong_(IOSByteArray *buffer, jlong byteCount, IOSByteArray *key, jlong frameBytesRead);

FOUNDATION_EXPORT NSString *Okhttp3InternalWsWebSocketProtocol_closeCodeExceptionMessageWithInt_(jint code);

FOUNDATION_EXPORT void Okhttp3InternalWsWebSocketProtocol_validateCloseCodeWithInt_(jint code);

FOUNDATION_EXPORT NSString *Okhttp3InternalWsWebSocketProtocol_acceptHeaderWithNSString_(NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalWsWebSocketProtocol)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalWsWebSocketProtocol")
