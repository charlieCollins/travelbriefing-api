//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/http/HttpCodec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttpHttpCodec")
#ifdef RESTRICT_Okhttp3InternalHttpHttpCodec
#define INCLUDE_ALL_Okhttp3InternalHttpHttpCodec 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttpHttpCodec 1
#endif
#undef RESTRICT_Okhttp3InternalHttpHttpCodec

#if !defined (Okhttp3InternalHttpHttpCodec_) && (INCLUDE_ALL_Okhttp3InternalHttpHttpCodec || defined(INCLUDE_Okhttp3InternalHttpHttpCodec))
#define Okhttp3InternalHttpHttpCodec_

@class Okhttp3Request;
@class Okhttp3Response;
@class Okhttp3ResponseBody;
@class Okhttp3Response_Builder;
@protocol OkioSink;

@protocol Okhttp3InternalHttpHttpCodec < JavaObject >

- (id<OkioSink>)createRequestBodyWithOkhttp3Request:(Okhttp3Request *)request
                                           withLong:(jlong)contentLength;

- (void)writeRequestHeadersWithOkhttp3Request:(Okhttp3Request *)request;

- (void)flushRequest;

- (void)finishRequest;

- (Okhttp3Response_Builder *)readResponseHeadersWithBoolean:(jboolean)expectContinue;

- (Okhttp3ResponseBody *)openResponseBodyWithOkhttp3Response:(Okhttp3Response *)response;

- (void)cancel;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttpHttpCodec)

inline jint Okhttp3InternalHttpHttpCodec_get_DISCARD_STREAM_TIMEOUT_MILLIS();
#define Okhttp3InternalHttpHttpCodec_DISCARD_STREAM_TIMEOUT_MILLIS 100
J2OBJC_STATIC_FIELD_CONSTANT(Okhttp3InternalHttpHttpCodec, DISCARD_STREAM_TIMEOUT_MILLIS, jint)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttpHttpCodec)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttpHttpCodec")
