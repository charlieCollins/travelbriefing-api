//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/retrofit2/Converter.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/reflect/Type.h"
#include "retrofit2/Converter.h"
#include "retrofit2/Retrofit.h"

@interface Retrofit2Converter : NSObject

@end

@implementation Retrofit2Converter

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSObject;", 0x401, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(convertWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convert", "LNSObject;", "LJavaIoIOException;", "(TF;)TT;", "LRetrofit2Converter_Factory;", "<F:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _Retrofit2Converter = { "Converter", "retrofit2", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, 4, -1, 5, -1 };
  return &_Retrofit2Converter;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(Retrofit2Converter)

@implementation Retrofit2Converter_Factory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  Retrofit2Converter_Factory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<Retrofit2Converter>)responseBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                 withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations
                                                 withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit {
  return nil;
}

- (id<Retrofit2Converter>)requestBodyConverterWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)parameterAnnotations
                                withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)methodAnnotations
                                                withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit {
  return nil;
}

- (id<Retrofit2Converter>)stringConverterWithJavaLangReflectType:(id<JavaLangReflectType>)type
                           withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations
                                           withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LRetrofit2Converter;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LRetrofit2Converter;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LRetrofit2Converter;", 0x1, 6, 1, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(responseBodyConverterWithJavaLangReflectType:withJavaLangAnnotationAnnotationArray:withRetrofit2Retrofit:);
  methods[2].selector = @selector(requestBodyConverterWithJavaLangReflectType:withJavaLangAnnotationAnnotationArray:withJavaLangAnnotationAnnotationArray:withRetrofit2Retrofit:);
  methods[3].selector = @selector(stringConverterWithJavaLangReflectType:withJavaLangAnnotationAnnotationArray:withRetrofit2Retrofit:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "responseBodyConverter", "LJavaLangReflectType;[LJavaLangAnnotationAnnotation;LRetrofit2Retrofit;", "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter<Lokhttp3/ResponseBody;*>;", "requestBodyConverter", "LJavaLangReflectType;[LJavaLangAnnotationAnnotation;[LJavaLangAnnotationAnnotation;LRetrofit2Retrofit;", "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter<*Lokhttp3/RequestBody;>;", "stringConverter", "(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter<*Ljava/lang/String;>;", "LRetrofit2Converter;" };
  static const J2ObjcClassInfo _Retrofit2Converter_Factory = { "Factory", "retrofit2", ptrTable, methods, NULL, 7, 0x409, 4, 0, 8, -1, -1, -1, -1 };
  return &_Retrofit2Converter_Factory;
}

@end

void Retrofit2Converter_Factory_init(Retrofit2Converter_Factory *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(Retrofit2Converter_Factory)
