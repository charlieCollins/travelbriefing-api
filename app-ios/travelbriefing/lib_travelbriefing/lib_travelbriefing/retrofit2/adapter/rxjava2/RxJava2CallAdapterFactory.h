//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/retrofit2/adapter/rxjava2/RxJava2CallAdapterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory")
#ifdef RESTRICT_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory
#define INCLUDE_ALL_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory 0
#else
#define INCLUDE_ALL_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory 1
#endif
#undef RESTRICT_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory

#if !defined (Retrofit2AdapterRxjava2RxJava2CallAdapterFactory_) && (INCLUDE_ALL_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory || defined(INCLUDE_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory))
#define Retrofit2AdapterRxjava2RxJava2CallAdapterFactory_

#define RESTRICT_Retrofit2CallAdapter 1
#define INCLUDE_Retrofit2CallAdapter_Factory 1
#include "retrofit2/CallAdapter.h"

@class IOSObjectArray;
@class IoReactivexScheduler;
@class Retrofit2Retrofit;
@protocol JavaLangReflectType;
@protocol Retrofit2CallAdapter;

@interface Retrofit2AdapterRxjava2RxJava2CallAdapterFactory : Retrofit2CallAdapter_Factory

#pragma mark Public

+ (Retrofit2AdapterRxjava2RxJava2CallAdapterFactory *)create;

+ (Retrofit2AdapterRxjava2RxJava2CallAdapterFactory *)createAsync;

+ (Retrofit2AdapterRxjava2RxJava2CallAdapterFactory *)createWithSchedulerWithIoReactivexScheduler:(IoReactivexScheduler *)scheduler;

- (id<Retrofit2CallAdapter>)getWithJavaLangReflectType:(id<JavaLangReflectType>)returnType
                 withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)annotations
                                 withRetrofit2Retrofit:(Retrofit2Retrofit *)retrofit;

@end

J2OBJC_EMPTY_STATIC_INIT(Retrofit2AdapterRxjava2RxJava2CallAdapterFactory)

FOUNDATION_EXPORT Retrofit2AdapterRxjava2RxJava2CallAdapterFactory *Retrofit2AdapterRxjava2RxJava2CallAdapterFactory_create();

FOUNDATION_EXPORT Retrofit2AdapterRxjava2RxJava2CallAdapterFactory *Retrofit2AdapterRxjava2RxJava2CallAdapterFactory_createAsync();

FOUNDATION_EXPORT Retrofit2AdapterRxjava2RxJava2CallAdapterFactory *Retrofit2AdapterRxjava2RxJava2CallAdapterFactory_createWithSchedulerWithIoReactivexScheduler_(IoReactivexScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(Retrofit2AdapterRxjava2RxJava2CallAdapterFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_Retrofit2AdapterRxjava2RxJava2CallAdapterFactory")
