//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okio/AsyncTimeout.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OkioAsyncTimeout")
#ifdef RESTRICT_OkioAsyncTimeout
#define INCLUDE_ALL_OkioAsyncTimeout 0
#else
#define INCLUDE_ALL_OkioAsyncTimeout 1
#endif
#undef RESTRICT_OkioAsyncTimeout

#if !defined (OkioAsyncTimeout_) && (INCLUDE_ALL_OkioAsyncTimeout || defined(INCLUDE_OkioAsyncTimeout))
#define OkioAsyncTimeout_

#define RESTRICT_OkioTimeout 1
#define INCLUDE_OkioTimeout 1
#include "okio/Timeout.h"

@class JavaIoIOException;
@protocol OkioSink;
@protocol OkioSource;

@interface OkioAsyncTimeout : OkioTimeout

#pragma mark Public

- (instancetype)init;

- (void)enter;

- (jboolean)exit;

- (id<OkioSink>)sinkWithOkioSink:(id<OkioSink>)sink;

- (id<OkioSource>)sourceWithOkioSource:(id<OkioSource>)source;

#pragma mark Protected

- (JavaIoIOException *)newTimeoutExceptionWithJavaIoIOException:(JavaIoIOException *)cause OBJC_METHOD_FAMILY_NONE;

- (void)timedOut;

#pragma mark Package-Private

+ (OkioAsyncTimeout *)awaitTimeout;

- (void)exitWithBoolean:(jboolean)throwOnTimeout;

- (JavaIoIOException *)exitWithJavaIoIOException:(JavaIoIOException *)cause;

@end

J2OBJC_STATIC_INIT(OkioAsyncTimeout)

FOUNDATION_EXPORT void OkioAsyncTimeout_init(OkioAsyncTimeout *self);

FOUNDATION_EXPORT OkioAsyncTimeout *new_OkioAsyncTimeout_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OkioAsyncTimeout *create_OkioAsyncTimeout_init();

FOUNDATION_EXPORT OkioAsyncTimeout *OkioAsyncTimeout_awaitTimeout();

J2OBJC_TYPE_LITERAL_HEADER(OkioAsyncTimeout)

#endif

#pragma pop_macro("INCLUDE_ALL_OkioAsyncTimeout")
