//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/observers/BaseTestConsumer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexObserversBaseTestConsumer")
#ifdef RESTRICT_IoReactivexObserversBaseTestConsumer
#define INCLUDE_ALL_IoReactivexObserversBaseTestConsumer 0
#else
#define INCLUDE_ALL_IoReactivexObserversBaseTestConsumer 1
#endif
#undef RESTRICT_IoReactivexObserversBaseTestConsumer

#if !defined (IoReactivexObserversBaseTestConsumer_) && (INCLUDE_ALL_IoReactivexObserversBaseTestConsumer || defined(INCLUDE_IoReactivexObserversBaseTestConsumer))
#define IoReactivexObserversBaseTestConsumer_

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangAssertionError;
@class JavaLangThread;
@class JavaUtilConcurrentCountDownLatch;
@class JavaUtilConcurrentTimeUnit;
@protocol IoReactivexFunctionsPredicate;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface IoReactivexObserversBaseTestConsumer : NSObject < IoReactivexDisposablesDisposable > {
 @public
  JavaUtilConcurrentCountDownLatch *done_;
  id<JavaUtilList> values_;
  id<JavaUtilList> errors_;
  jlong completions_;
  JavaLangThread *lastThread_;
  jboolean checkSubscriptionOnce_;
  jint initialFusionMode_;
  jint establishedFusionMode_;
}

#pragma mark Public

- (instancetype)init;

- (IoReactivexObserversBaseTestConsumer *)assertComplete;

- (IoReactivexObserversBaseTestConsumer *)assertEmpty;

- (IoReactivexObserversBaseTestConsumer *)assertErrorWithIOSClass:(IOSClass *)errorClass;

- (IoReactivexObserversBaseTestConsumer *)assertErrorWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)errorPredicate;

- (IoReactivexObserversBaseTestConsumer *)assertErrorWithNSException:(NSException *)error;

- (IoReactivexObserversBaseTestConsumer *)assertErrorMessageWithNSString:(NSString *)message;

- (IoReactivexObserversBaseTestConsumer *)assertFailureWithIOSClass:(IOSClass *)error
                                                  withNSObjectArray:(IOSObjectArray *)values;

- (IoReactivexObserversBaseTestConsumer *)assertFailureWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)errorPredicate
                                                                       withNSObjectArray:(IOSObjectArray *)values;

- (IoReactivexObserversBaseTestConsumer *)assertFailureAndMessageWithIOSClass:(IOSClass *)error
                                                                 withNSString:(NSString *)message
                                                            withNSObjectArray:(IOSObjectArray *)values;

- (IoReactivexObserversBaseTestConsumer *)assertNeverWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)valuePredicate;

- (IoReactivexObserversBaseTestConsumer *)assertNeverWithId:(id)value;

- (IoReactivexObserversBaseTestConsumer *)assertNoErrors;

- (IoReactivexObserversBaseTestConsumer *)assertNotComplete;

- (IoReactivexObserversBaseTestConsumer *)assertNotSubscribed;

- (IoReactivexObserversBaseTestConsumer *)assertNotTerminated;

- (IoReactivexObserversBaseTestConsumer *)assertNoValues;

- (IoReactivexObserversBaseTestConsumer *)assertResultWithNSObjectArray:(IOSObjectArray *)values;

- (IoReactivexObserversBaseTestConsumer *)assertSubscribed;

- (IoReactivexObserversBaseTestConsumer *)assertTerminated;

- (IoReactivexObserversBaseTestConsumer *)assertValueWithIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)valuePredicate;

- (IoReactivexObserversBaseTestConsumer *)assertValueWithId:(id)value;

- (IoReactivexObserversBaseTestConsumer *)assertValueAtWithInt:(jint)index
                             withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)valuePredicate;

- (IoReactivexObserversBaseTestConsumer *)assertValueCountWithInt:(jint)count;

- (IoReactivexObserversBaseTestConsumer *)assertValuesWithNSObjectArray:(IOSObjectArray *)values;

- (IoReactivexObserversBaseTestConsumer *)assertValueSequenceWithJavaLangIterable:(id<JavaLangIterable>)sequence;

- (IoReactivexObserversBaseTestConsumer *)assertValueSetWithJavaUtilCollection:(id<JavaUtilCollection>)expected;

- (IoReactivexObserversBaseTestConsumer *)await;

- (jboolean)awaitWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (IoReactivexObserversBaseTestConsumer *)awaitDoneWithLong:(jlong)time
                             withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (jboolean)awaitTerminalEvent;

- (jboolean)awaitTerminalEventWithLong:(jlong)duration
        withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (jlong)completions;

- (jint)errorCount;

- (id<JavaUtilList>)errors;

- (id<JavaUtilList>)getEvents;

- (jboolean)isTerminated;

- (JavaLangThread *)lastThread;

+ (NSString *)valueAndClassWithId:(id)o;

- (jint)valueCount;

- (id<JavaUtilList>)values;

#pragma mark Protected

- (JavaLangAssertionError *)failWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexObserversBaseTestConsumer)

J2OBJC_FIELD_SETTER(IoReactivexObserversBaseTestConsumer, done_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(IoReactivexObserversBaseTestConsumer, values_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(IoReactivexObserversBaseTestConsumer, errors_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(IoReactivexObserversBaseTestConsumer, lastThread_, JavaLangThread *)

FOUNDATION_EXPORT void IoReactivexObserversBaseTestConsumer_init(IoReactivexObserversBaseTestConsumer *self);

FOUNDATION_EXPORT NSString *IoReactivexObserversBaseTestConsumer_valueAndClassWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexObserversBaseTestConsumer)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexObserversBaseTestConsumer")
