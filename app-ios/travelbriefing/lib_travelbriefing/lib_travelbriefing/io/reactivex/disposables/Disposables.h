//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/disposables/Disposables.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexDisposablesDisposables")
#ifdef RESTRICT_IoReactivexDisposablesDisposables
#define INCLUDE_ALL_IoReactivexDisposablesDisposables 0
#else
#define INCLUDE_ALL_IoReactivexDisposablesDisposables 1
#endif
#undef RESTRICT_IoReactivexDisposablesDisposables

#if !defined (IoReactivexDisposablesDisposables_) && (INCLUDE_ALL_IoReactivexDisposablesDisposables || defined(INCLUDE_IoReactivexDisposablesDisposables))
#define IoReactivexDisposablesDisposables_

@protocol IoReactivexDisposablesDisposable;
@protocol IoReactivexFunctionsAction;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentFuture;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexDisposablesDisposables : NSObject

#pragma mark Public

+ (id<IoReactivexDisposablesDisposable>)disposed;

+ (id<IoReactivexDisposablesDisposable>)empty;

+ (id<IoReactivexDisposablesDisposable>)fromActionWithIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)run;

+ (id<IoReactivexDisposablesDisposable>)fromFutureWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;

+ (id<IoReactivexDisposablesDisposable>)fromFutureWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                                                   withBoolean:(jboolean)allowInterrupt;

+ (id<IoReactivexDisposablesDisposable>)fromRunnableWithJavaLangRunnable:(id<JavaLangRunnable>)run;

+ (id<IoReactivexDisposablesDisposable>)fromSubscriptionWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)subscription;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexDisposablesDisposables)

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromRunnableWithJavaLangRunnable_(id<JavaLangRunnable> run);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromActionWithIoReactivexFunctionsAction_(id<IoReactivexFunctionsAction> run);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromFutureWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromFutureWithJavaUtilConcurrentFuture_withBoolean_(id<JavaUtilConcurrentFuture> future, jboolean allowInterrupt);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_fromSubscriptionWithOrgReactivestreamsSubscription_(id<OrgReactivestreamsSubscription> subscription);

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_empty();

FOUNDATION_EXPORT id<IoReactivexDisposablesDisposable> IoReactivexDisposablesDisposables_disposed();

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexDisposablesDisposables)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexDisposablesDisposables")
