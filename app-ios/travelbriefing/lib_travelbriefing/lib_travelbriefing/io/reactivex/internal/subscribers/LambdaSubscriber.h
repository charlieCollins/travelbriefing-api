//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/subscribers/LambdaSubscriber.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalSubscribersLambdaSubscriber")
#ifdef RESTRICT_IoReactivexInternalSubscribersLambdaSubscriber
#define INCLUDE_ALL_IoReactivexInternalSubscribersLambdaSubscriber 0
#else
#define INCLUDE_ALL_IoReactivexInternalSubscribersLambdaSubscriber 1
#endif
#undef RESTRICT_IoReactivexInternalSubscribersLambdaSubscriber

#if !defined (IoReactivexInternalSubscribersLambdaSubscriber_) && (INCLUDE_ALL_IoReactivexInternalSubscribersLambdaSubscriber || defined(INCLUDE_IoReactivexInternalSubscribersLambdaSubscriber))
#define IoReactivexInternalSubscribersLambdaSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "org/reactivestreams/Subscription.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexFunctionsAction;
@protocol IoReactivexFunctionsConsumer;

@interface IoReactivexInternalSubscribersLambdaSubscriber : JavaUtilConcurrentAtomicAtomicReference < OrgReactivestreamsSubscriber, OrgReactivestreamsSubscription, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexFunctionsConsumer> onNext_;
  id<IoReactivexFunctionsConsumer> onError_;
  id<IoReactivexFunctionsAction> onComplete_;
  id<IoReactivexFunctionsConsumer> onSubscribe_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onNext
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onError
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onComplete
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSubscribe;

- (void)cancel;

- (void)dispose;

- (id<OrgReactivestreamsSubscription>)get;

- (id<OrgReactivestreamsSubscription>)getAndSetWithId:(id<OrgReactivestreamsSubscription>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalSubscribersLambdaSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersLambdaSubscriber, onNext_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersLambdaSubscriber, onError_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersLambdaSubscriber, onComplete_, id<IoReactivexFunctionsAction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalSubscribersLambdaSubscriber, onSubscribe_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalSubscribersLambdaSubscriber_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_(IoReactivexInternalSubscribersLambdaSubscriber *self, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsConsumer> onSubscribe);

FOUNDATION_EXPORT IoReactivexInternalSubscribersLambdaSubscriber *new_IoReactivexInternalSubscribersLambdaSubscriber_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsConsumer> onSubscribe) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalSubscribersLambdaSubscriber *create_IoReactivexInternalSubscribersLambdaSubscriber_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsConsumer> onSubscribe);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalSubscribersLambdaSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalSubscribersLambdaSubscriber")
