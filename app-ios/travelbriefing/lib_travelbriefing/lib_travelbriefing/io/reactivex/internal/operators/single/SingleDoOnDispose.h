//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/single/SingleDoOnDispose.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnDispose")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoOnDispose
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnDispose 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnDispose 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoOnDispose

#if !defined (IoReactivexInternalOperatorsSingleSingleDoOnDispose_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnDispose || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDoOnDispose))
#define IoReactivexInternalOperatorsSingleSingleDoOnDispose_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "io/reactivex/Single.h"

@protocol IoReactivexFunctionsAction;
@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDoOnDispose : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexFunctionsAction> onDispose_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
                 withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onDispose;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDoOnDispose)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnDispose, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnDispose, onDispose_, id<IoReactivexFunctionsAction>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDoOnDispose_initWithIoReactivexSingleSource_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsSingleSingleDoOnDispose *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsAction> onDispose);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnDispose *new_IoReactivexInternalOperatorsSingleSingleDoOnDispose_initWithIoReactivexSingleSource_withIoReactivexFunctionsAction_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsAction> onDispose) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnDispose *create_IoReactivexInternalOperatorsSingleSingleDoOnDispose_initWithIoReactivexSingleSource_withIoReactivexFunctionsAction_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsAction> onDispose);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDoOnDispose)

#endif

#if !defined (IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnDispose || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver))
#define IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexSingleObserver 1
#define INCLUDE_IoReactivexSingleObserver 1
#include "io/reactivex/SingleObserver.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexFunctionsAction;

@interface IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexSingleObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexDisposablesDisposable> d_;
}

#pragma mark Public

- (void)dispose;

- (id<IoReactivexFunctionsAction>)get;

- (id<IoReactivexFunctionsAction>)getAndSetWithId:(id<IoReactivexFunctionsAction>)arg0;

- (jboolean)isDisposed;

- (void)onErrorWithNSException:(NSException *)e;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)d;

- (void)onSuccessWithId:(id)value;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                   withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onDispose;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver, d_, id<IoReactivexDisposablesDisposable>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsAction_(IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver *self, id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsAction> onDispose);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver *new_IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsAction_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsAction> onDispose) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver *create_IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver_initWithIoReactivexSingleObserver_withIoReactivexFunctionsAction_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsAction> onDispose);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDoOnDispose_DoOnDisposeObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnDispose")
