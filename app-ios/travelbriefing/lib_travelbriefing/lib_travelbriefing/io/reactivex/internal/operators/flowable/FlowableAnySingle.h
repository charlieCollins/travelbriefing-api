//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableAnySingle.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAnySingle")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableAnySingle
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAnySingle 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAnySingle 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableAnySingle

#if !defined (IoReactivexInternalOperatorsFlowableFlowableAnySingle_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAnySingle || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableAnySingle))
#define IoReactivexInternalOperatorsFlowableFlowableAnySingle_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "io/reactivex/Single.h"

#define RESTRICT_IoReactivexInternalFuseableFuseToFlowable 1
#define INCLUDE_IoReactivexInternalFuseableFuseToFlowable 1
#include "io/reactivex/internal/fuseable/FuseToFlowable.h"

@class IoReactivexFlowable;
@class JavaLangBoolean;
@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexSingleObserver;
@protocol OrgReactivestreamsPublisher;

@interface IoReactivexInternalOperatorsFlowableFlowableAnySingle : IoReactivexSingle < IoReactivexInternalFuseableFuseToFlowable > {
 @public
  id<OrgReactivestreamsPublisher> source_;
  id<IoReactivexFunctionsPredicate> predicate_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                  withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

- (JavaLangBoolean *)blockingGet;

- (IoReactivexFlowable *)fuseToFlowable;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableAnySingle)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAnySingle, source_, id<OrgReactivestreamsPublisher>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAnySingle, predicate_, id<IoReactivexFunctionsPredicate>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableAnySingle_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsFlowableFlowableAnySingle *self, id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableAnySingle *new_IoReactivexInternalOperatorsFlowableFlowableAnySingle_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsPredicate_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableAnySingle *create_IoReactivexInternalOperatorsFlowableFlowableAnySingle_initWithOrgReactivestreamsPublisher_withIoReactivexFunctionsPredicate_(id<OrgReactivestreamsPublisher> source, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableAnySingle)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAnySingle || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber_

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexFunctionsPredicate;
@protocol IoReactivexSingleObserver;
@protocol OrgReactivestreamsSubscription;

@interface IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber : NSObject < OrgReactivestreamsSubscriber, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexSingleObserver> actual_;
  id<IoReactivexFunctionsPredicate> predicate_;
  id<OrgReactivestreamsSubscription> s_;
  jboolean done_;
}

#pragma mark Public

- (void)dispose;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

#pragma mark Package-Private

- (instancetype)initWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)actual
                withIoReactivexFunctionsPredicate:(id<IoReactivexFunctionsPredicate>)predicate;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber, actual_, id<IoReactivexSingleObserver>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber, predicate_, id<IoReactivexFunctionsPredicate>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber, s_, id<OrgReactivestreamsSubscription>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber_initWithIoReactivexSingleObserver_withIoReactivexFunctionsPredicate_(IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber *self, id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsPredicate> predicate);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber *new_IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber_initWithIoReactivexSingleObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsPredicate> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber *create_IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber_initWithIoReactivexSingleObserver_withIoReactivexFunctionsPredicate_(id<IoReactivexSingleObserver> actual, id<IoReactivexFunctionsPredicate> predicate);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableAnySingle_AnySubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableAnySingle")
