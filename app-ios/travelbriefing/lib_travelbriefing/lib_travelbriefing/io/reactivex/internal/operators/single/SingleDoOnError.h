//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/single/SingleDoOnError.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnError")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoOnError
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnError 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnError 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoOnError

#if !defined (IoReactivexInternalOperatorsSingleSingleDoOnError_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnError || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDoOnError))
#define IoReactivexInternalOperatorsSingleSingleDoOnError_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "io/reactivex/Single.h"

@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDoOnError : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexFunctionsConsumer> onError_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
               withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onError;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDoOnError)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnError, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnError, onError_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDoOnError_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsSingleSingleDoOnError *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onError);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnError *new_IoReactivexInternalOperatorsSingleSingleDoOnError_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onError) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnError *create_IoReactivexInternalOperatorsSingleSingleDoOnError_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onError);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDoOnError)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnError")
