//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/single/SingleDoOnSuccess.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnSuccess")
#ifdef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoOnSuccess
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnSuccess 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnSuccess 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsSingleSingleDoOnSuccess

#if !defined (IoReactivexInternalOperatorsSingleSingleDoOnSuccess_) && (INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnSuccess || defined(INCLUDE_IoReactivexInternalOperatorsSingleSingleDoOnSuccess))
#define IoReactivexInternalOperatorsSingleSingleDoOnSuccess_

#define RESTRICT_IoReactivexSingle 1
#define INCLUDE_IoReactivexSingle 1
#include "io/reactivex/Single.h"

@protocol IoReactivexFunctionsConsumer;
@protocol IoReactivexSingleObserver;
@protocol IoReactivexSingleSource;

@interface IoReactivexInternalOperatorsSingleSingleDoOnSuccess : IoReactivexSingle {
 @public
  id<IoReactivexSingleSource> source_;
  id<IoReactivexFunctionsConsumer> onSuccess_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexSingleSource:(id<IoReactivexSingleSource>)source
               withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSuccess;

#pragma mark Protected

- (void)subscribeActualWithIoReactivexSingleObserver:(id<IoReactivexSingleObserver>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsSingleSingleDoOnSuccess)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnSuccess, source_, id<IoReactivexSingleSource>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsSingleSingleDoOnSuccess, onSuccess_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsSingleSingleDoOnSuccess_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(IoReactivexInternalOperatorsSingleSingleDoOnSuccess *self, id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onSuccess);

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnSuccess *new_IoReactivexInternalOperatorsSingleSingleDoOnSuccess_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onSuccess) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsSingleSingleDoOnSuccess *create_IoReactivexInternalOperatorsSingleSingleDoOnSuccess_initWithIoReactivexSingleSource_withIoReactivexFunctionsConsumer_(id<IoReactivexSingleSource> source, id<IoReactivexFunctionsConsumer> onSuccess);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsSingleSingleDoOnSuccess)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsSingleSingleDoOnSuccess")
