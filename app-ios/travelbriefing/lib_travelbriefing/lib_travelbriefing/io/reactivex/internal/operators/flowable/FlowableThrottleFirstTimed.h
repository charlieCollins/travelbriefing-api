//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/operators/flowable/FlowableThrottleFirstTimed.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed")
#ifdef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed 0
#else
#define INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed 1
#endif
#undef RESTRICT_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed

#if !defined (IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed))
#define IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_

#define RESTRICT_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#define INCLUDE_IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream 1
#include "io/reactivex/internal/operators/flowable/AbstractFlowableWithUpstream.h"

@class IoReactivexScheduler;
@class JavaUtilConcurrentTimeUnit;
@protocol OrgReactivestreamsPublisher;
@protocol OrgReactivestreamsSubscriber;

@interface IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed : IoReactivexInternalOperatorsFlowableAbstractFlowableWithUpstream {
 @public
  jlong timeout_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler *scheduler_;
}

#pragma mark Public

- (instancetype)initWithOrgReactivestreamsPublisher:(id<OrgReactivestreamsPublisher>)source
                                           withLong:(jlong)timeout
                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                           withIoReactivexScheduler:(IoReactivexScheduler *)scheduler;

#pragma mark Protected

- (void)subscribeActualWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed, scheduler_, IoReactivexScheduler *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_initWithOrgReactivestreamsPublisher_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed *self, id<OrgReactivestreamsPublisher> source, jlong timeout, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed *new_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_initWithOrgReactivestreamsPublisher_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<OrgReactivestreamsPublisher> source, jlong timeout, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed *create_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_initWithOrgReactivestreamsPublisher_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_(id<OrgReactivestreamsPublisher> source, jlong timeout, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed)

#endif

#if !defined (IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber_) && (INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed || defined(INCLUDE_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber))
#define IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicLong 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicLong 1
#include "java/util/concurrent/atomic/AtomicLong.h"

#define RESTRICT_OrgReactivestreamsSubscriber 1
#define INCLUDE_OrgReactivestreamsSubscriber 1
#include "org/reactivestreams/Subscriber.h"

#define RESTRICT_OrgReactivestreamsSubscription 1
#define INCLUDE_OrgReactivestreamsSubscription 1
#include "org/reactivestreams/Subscription.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IoReactivexInternalDisposablesSequentialDisposable;
@class IoReactivexScheduler_Worker;
@class JavaUtilConcurrentTimeUnit;

@interface IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber : JavaUtilConcurrentAtomicAtomicLong < OrgReactivestreamsSubscriber, OrgReactivestreamsSubscription, JavaLangRunnable > {
 @public
  id<OrgReactivestreamsSubscriber> actual_;
  jlong timeout_;
  JavaUtilConcurrentTimeUnit *unit_;
  IoReactivexScheduler_Worker *worker_;
  id<OrgReactivestreamsSubscription> s_;
  IoReactivexInternalDisposablesSequentialDisposable *timer_;
  volatile_jboolean gate_;
  jboolean done_;
}

#pragma mark Public

- (void)cancel;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithOrgReactivestreamsSubscription:(id<OrgReactivestreamsSubscription>)s;

- (void)requestWithLong:(jlong)n;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithOrgReactivestreamsSubscriber:(id<OrgReactivestreamsSubscriber>)actual
                                            withLong:(jlong)timeout
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withIoReactivexScheduler_Worker:(IoReactivexScheduler_Worker *)worker;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber)

J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber, actual_, id<OrgReactivestreamsSubscriber>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber, worker_, IoReactivexScheduler_Worker *)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber, s_, id<OrgReactivestreamsSubscription>)
J2OBJC_FIELD_SETTER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber, timer_, IoReactivexInternalDisposablesSequentialDisposable *)

FOUNDATION_EXPORT void IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber_initWithOrgReactivestreamsSubscriber_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber *self, id<OrgReactivestreamsSubscriber> actual, jlong timeout, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *worker);

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber *new_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber_initWithOrgReactivestreamsSubscriber_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(id<OrgReactivestreamsSubscriber> actual, jlong timeout, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *worker) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber *create_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber_initWithOrgReactivestreamsSubscriber_withLong_withJavaUtilConcurrentTimeUnit_withIoReactivexScheduler_Worker_(id<OrgReactivestreamsSubscriber> actual, jlong timeout, JavaUtilConcurrentTimeUnit *unit, IoReactivexScheduler_Worker *worker);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed_DebounceTimedSubscriber)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalOperatorsFlowableFlowableThrottleFirstTimed")
