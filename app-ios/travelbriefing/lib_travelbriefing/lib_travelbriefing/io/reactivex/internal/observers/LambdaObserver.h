//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/observers/LambdaObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversLambdaObserver")
#ifdef RESTRICT_IoReactivexInternalObserversLambdaObserver
#define INCLUDE_ALL_IoReactivexInternalObserversLambdaObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversLambdaObserver 1
#endif
#undef RESTRICT_IoReactivexInternalObserversLambdaObserver

#if !defined (IoReactivexInternalObserversLambdaObserver_) && (INCLUDE_ALL_IoReactivexInternalObserversLambdaObserver || defined(INCLUDE_IoReactivexInternalObserversLambdaObserver))
#define IoReactivexInternalObserversLambdaObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "io/reactivex/Observer.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexFunctionsAction;
@protocol IoReactivexFunctionsConsumer;

@interface IoReactivexInternalObserversLambdaObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexFunctionsConsumer> onNext_;
  id<IoReactivexFunctionsConsumer> onError_;
  id<IoReactivexFunctionsAction> onComplete_;
  id<IoReactivexFunctionsConsumer> onSubscribe_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onNext
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onError
                      withIoReactivexFunctionsAction:(id<IoReactivexFunctionsAction>)onComplete
                    withIoReactivexFunctionsConsumer:(id<IoReactivexFunctionsConsumer>)onSubscribe;

- (void)dispose;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversLambdaObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalObserversLambdaObserver, onNext_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversLambdaObserver, onError_, id<IoReactivexFunctionsConsumer>)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversLambdaObserver, onComplete_, id<IoReactivexFunctionsAction>)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversLambdaObserver, onSubscribe_, id<IoReactivexFunctionsConsumer>)

FOUNDATION_EXPORT void IoReactivexInternalObserversLambdaObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_(IoReactivexInternalObserversLambdaObserver *self, id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsConsumer> onSubscribe);

FOUNDATION_EXPORT IoReactivexInternalObserversLambdaObserver *new_IoReactivexInternalObserversLambdaObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsConsumer> onSubscribe) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversLambdaObserver *create_IoReactivexInternalObserversLambdaObserver_initWithIoReactivexFunctionsConsumer_withIoReactivexFunctionsConsumer_withIoReactivexFunctionsAction_withIoReactivexFunctionsConsumer_(id<IoReactivexFunctionsConsumer> onNext, id<IoReactivexFunctionsConsumer> onError, id<IoReactivexFunctionsAction> onComplete, id<IoReactivexFunctionsConsumer> onSubscribe);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversLambdaObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversLambdaObserver")
