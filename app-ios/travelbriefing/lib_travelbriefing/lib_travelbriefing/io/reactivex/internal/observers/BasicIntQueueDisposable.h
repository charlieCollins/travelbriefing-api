//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/observers/BasicIntQueueDisposable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversBasicIntQueueDisposable")
#ifdef RESTRICT_IoReactivexInternalObserversBasicIntQueueDisposable
#define INCLUDE_ALL_IoReactivexInternalObserversBasicIntQueueDisposable 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversBasicIntQueueDisposable 1
#endif
#undef RESTRICT_IoReactivexInternalObserversBasicIntQueueDisposable

#if !defined (IoReactivexInternalObserversBasicIntQueueDisposable_) && (INCLUDE_ALL_IoReactivexInternalObserversBasicIntQueueDisposable || defined(INCLUDE_IoReactivexInternalObserversBasicIntQueueDisposable))
#define IoReactivexInternalObserversBasicIntQueueDisposable_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicInteger 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicInteger 1
#include "java/util/concurrent/atomic/AtomicInteger.h"

#define RESTRICT_IoReactivexInternalFuseableQueueDisposable 1
#define INCLUDE_IoReactivexInternalFuseableQueueDisposable 1
#include "io/reactivex/internal/fuseable/QueueDisposable.h"

@interface IoReactivexInternalObserversBasicIntQueueDisposable : JavaUtilConcurrentAtomicAtomicInteger < IoReactivexInternalFuseableQueueDisposable >

#pragma mark Public

- (instancetype)init;

- (jboolean)offerWithId:(id)e;

- (jboolean)offerWithId:(id)v1
                 withId:(id)v2;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversBasicIntQueueDisposable)

FOUNDATION_EXPORT void IoReactivexInternalObserversBasicIntQueueDisposable_init(IoReactivexInternalObserversBasicIntQueueDisposable *self);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversBasicIntQueueDisposable)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversBasicIntQueueDisposable")
