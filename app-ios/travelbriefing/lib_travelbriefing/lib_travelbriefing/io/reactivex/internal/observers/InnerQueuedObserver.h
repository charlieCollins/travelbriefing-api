//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/io/reactivex/internal/observers/InnerQueuedObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoReactivexInternalObserversInnerQueuedObserver")
#ifdef RESTRICT_IoReactivexInternalObserversInnerQueuedObserver
#define INCLUDE_ALL_IoReactivexInternalObserversInnerQueuedObserver 0
#else
#define INCLUDE_ALL_IoReactivexInternalObserversInnerQueuedObserver 1
#endif
#undef RESTRICT_IoReactivexInternalObserversInnerQueuedObserver

#if !defined (IoReactivexInternalObserversInnerQueuedObserver_) && (INCLUDE_ALL_IoReactivexInternalObserversInnerQueuedObserver || defined(INCLUDE_IoReactivexInternalObserversInnerQueuedObserver))
#define IoReactivexInternalObserversInnerQueuedObserver_

#define RESTRICT_JavaUtilConcurrentAtomicAtomicReference 1
#define INCLUDE_JavaUtilConcurrentAtomicAtomicReference 1
#include "java/util/concurrent/atomic/AtomicReference.h"

#define RESTRICT_IoReactivexObserver 1
#define INCLUDE_IoReactivexObserver 1
#include "io/reactivex/Observer.h"

#define RESTRICT_IoReactivexDisposablesDisposable 1
#define INCLUDE_IoReactivexDisposablesDisposable 1
#include "io/reactivex/disposables/Disposable.h"

@protocol IoReactivexInternalFuseableSimpleQueue;
@protocol IoReactivexInternalObserversInnerQueuedObserverSupport;

@interface IoReactivexInternalObserversInnerQueuedObserver : JavaUtilConcurrentAtomicAtomicReference < IoReactivexObserver, IoReactivexDisposablesDisposable > {
 @public
  id<IoReactivexInternalObserversInnerQueuedObserverSupport> parent_;
  jint prefetch_;
  id<IoReactivexInternalFuseableSimpleQueue> queue_;
  volatile_jboolean done_;
  jint fusionMode_;
}

#pragma mark Public

- (instancetype)initWithIoReactivexInternalObserversInnerQueuedObserverSupport:(id<IoReactivexInternalObserversInnerQueuedObserverSupport>)parent
                                                                       withInt:(jint)prefetch;

- (void)dispose;

- (jint)fusionMode;

- (id<IoReactivexDisposablesDisposable>)get;

- (id<IoReactivexDisposablesDisposable>)getAndSetWithId:(id<IoReactivexDisposablesDisposable>)arg0;

- (jboolean)isDisposed;

- (jboolean)isDone;

- (void)onComplete;

- (void)onErrorWithNSException:(NSException *)t;

- (void)onNextWithId:(id)t;

- (void)onSubscribeWithIoReactivexDisposablesDisposable:(id<IoReactivexDisposablesDisposable>)s;

- (id<IoReactivexInternalFuseableSimpleQueue>)queue;

- (void)setDone;

@end

J2OBJC_EMPTY_STATIC_INIT(IoReactivexInternalObserversInnerQueuedObserver)

J2OBJC_FIELD_SETTER(IoReactivexInternalObserversInnerQueuedObserver, parent_, id<IoReactivexInternalObserversInnerQueuedObserverSupport>)
J2OBJC_FIELD_SETTER(IoReactivexInternalObserversInnerQueuedObserver, queue_, id<IoReactivexInternalFuseableSimpleQueue>)

FOUNDATION_EXPORT void IoReactivexInternalObserversInnerQueuedObserver_initWithIoReactivexInternalObserversInnerQueuedObserverSupport_withInt_(IoReactivexInternalObserversInnerQueuedObserver *self, id<IoReactivexInternalObserversInnerQueuedObserverSupport> parent, jint prefetch);

FOUNDATION_EXPORT IoReactivexInternalObserversInnerQueuedObserver *new_IoReactivexInternalObserversInnerQueuedObserver_initWithIoReactivexInternalObserversInnerQueuedObserverSupport_withInt_(id<IoReactivexInternalObserversInnerQueuedObserverSupport> parent, jint prefetch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoReactivexInternalObserversInnerQueuedObserver *create_IoReactivexInternalObserversInnerQueuedObserver_initWithIoReactivexInternalObserversInnerQueuedObserverSupport_withInt_(id<IoReactivexInternalObserversInnerQueuedObserverSupport> parent, jint prefetch);

J2OBJC_TYPE_LITERAL_HEADER(IoReactivexInternalObserversInnerQueuedObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_IoReactivexInternalObserversInnerQueuedObserver")
