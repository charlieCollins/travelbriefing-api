//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/http2/PushObserver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttp2PushObserver")
#ifdef RESTRICT_Okhttp3InternalHttp2PushObserver
#define INCLUDE_ALL_Okhttp3InternalHttp2PushObserver 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttp2PushObserver 1
#endif
#undef RESTRICT_Okhttp3InternalHttp2PushObserver

#if !defined (Okhttp3InternalHttp2PushObserver_) && (INCLUDE_ALL_Okhttp3InternalHttp2PushObserver || defined(INCLUDE_Okhttp3InternalHttp2PushObserver))
#define Okhttp3InternalHttp2PushObserver_

@class Okhttp3InternalHttp2ErrorCode;
@protocol JavaUtilList;
@protocol OkioBufferedSource;

@protocol Okhttp3InternalHttp2PushObserver < JavaObject >

- (jboolean)onRequestWithInt:(jint)streamId
            withJavaUtilList:(id<JavaUtilList>)requestHeaders;

- (jboolean)onHeadersWithInt:(jint)streamId
            withJavaUtilList:(id<JavaUtilList>)responseHeaders
                 withBoolean:(jboolean)last;

- (jboolean)onDataWithInt:(jint)streamId
   withOkioBufferedSource:(id<OkioBufferedSource>)source
                  withInt:(jint)byteCount
              withBoolean:(jboolean)last;

- (void)onResetWithInt:(jint)streamId
withOkhttp3InternalHttp2ErrorCode:(Okhttp3InternalHttp2ErrorCode *)errorCode;

@end

@interface Okhttp3InternalHttp2PushObserver : NSObject

@end

J2OBJC_STATIC_INIT(Okhttp3InternalHttp2PushObserver)

inline id<Okhttp3InternalHttp2PushObserver> Okhttp3InternalHttp2PushObserver_get_CANCEL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<Okhttp3InternalHttp2PushObserver> Okhttp3InternalHttp2PushObserver_CANCEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(Okhttp3InternalHttp2PushObserver, CANCEL, id<Okhttp3InternalHttp2PushObserver>)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp2PushObserver)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttp2PushObserver")
