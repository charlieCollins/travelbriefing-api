//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/http2/StreamResetException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttp2StreamResetException")
#ifdef RESTRICT_Okhttp3InternalHttp2StreamResetException
#define INCLUDE_ALL_Okhttp3InternalHttp2StreamResetException 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttp2StreamResetException 1
#endif
#undef RESTRICT_Okhttp3InternalHttp2StreamResetException

#if !defined (Okhttp3InternalHttp2StreamResetException_) && (INCLUDE_ALL_Okhttp3InternalHttp2StreamResetException || defined(INCLUDE_Okhttp3InternalHttp2StreamResetException))
#define Okhttp3InternalHttp2StreamResetException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class Okhttp3InternalHttp2ErrorCode;

@interface Okhttp3InternalHttp2StreamResetException : JavaIoIOException {
 @public
  Okhttp3InternalHttp2ErrorCode *errorCode_;
}

#pragma mark Public

- (instancetype)initWithOkhttp3InternalHttp2ErrorCode:(Okhttp3InternalHttp2ErrorCode *)errorCode;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttp2StreamResetException)

J2OBJC_FIELD_SETTER(Okhttp3InternalHttp2StreamResetException, errorCode_, Okhttp3InternalHttp2ErrorCode *)

FOUNDATION_EXPORT void Okhttp3InternalHttp2StreamResetException_initWithOkhttp3InternalHttp2ErrorCode_(Okhttp3InternalHttp2StreamResetException *self, Okhttp3InternalHttp2ErrorCode *errorCode);

FOUNDATION_EXPORT Okhttp3InternalHttp2StreamResetException *new_Okhttp3InternalHttp2StreamResetException_initWithOkhttp3InternalHttp2ErrorCode_(Okhttp3InternalHttp2ErrorCode *errorCode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttp2StreamResetException *create_Okhttp3InternalHttp2StreamResetException_initWithOkhttp3InternalHttp2ErrorCode_(Okhttp3InternalHttp2ErrorCode *errorCode);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp2StreamResetException)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttp2StreamResetException")
