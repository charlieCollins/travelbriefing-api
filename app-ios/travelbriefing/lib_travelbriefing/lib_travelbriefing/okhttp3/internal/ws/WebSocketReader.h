//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/ws/WebSocketReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalWsWebSocketReader")
#ifdef RESTRICT_Okhttp3InternalWsWebSocketReader
#define INCLUDE_ALL_Okhttp3InternalWsWebSocketReader 0
#else
#define INCLUDE_ALL_Okhttp3InternalWsWebSocketReader 1
#endif
#undef RESTRICT_Okhttp3InternalWsWebSocketReader

#if !defined (Okhttp3InternalWsWebSocketReader_) && (INCLUDE_ALL_Okhttp3InternalWsWebSocketReader || defined(INCLUDE_Okhttp3InternalWsWebSocketReader))
#define Okhttp3InternalWsWebSocketReader_

@class IOSByteArray;
@protocol Okhttp3InternalWsWebSocketReader_FrameCallback;
@protocol OkioBufferedSource;

@interface Okhttp3InternalWsWebSocketReader : NSObject {
 @public
  jboolean isClient_;
  id<OkioBufferedSource> source_;
  id<Okhttp3InternalWsWebSocketReader_FrameCallback> frameCallback_;
  jboolean closed_;
  jint opcode_;
  jlong frameLength_;
  jlong frameBytesRead_;
  jboolean isFinalFrame_;
  jboolean isControlFrame_;
  jboolean isMasked_;
  IOSByteArray *maskKey_;
  IOSByteArray *maskBuffer_;
}

#pragma mark Package-Private

- (instancetype)initWithBoolean:(jboolean)isClient
         withOkioBufferedSource:(id<OkioBufferedSource>)source
withOkhttp3InternalWsWebSocketReader_FrameCallback:(id<Okhttp3InternalWsWebSocketReader_FrameCallback>)frameCallback;

- (void)processNextFrame;

- (void)readUntilNonControlFrame;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalWsWebSocketReader)

J2OBJC_FIELD_SETTER(Okhttp3InternalWsWebSocketReader, source_, id<OkioBufferedSource>)
J2OBJC_FIELD_SETTER(Okhttp3InternalWsWebSocketReader, frameCallback_, id<Okhttp3InternalWsWebSocketReader_FrameCallback>)
J2OBJC_FIELD_SETTER(Okhttp3InternalWsWebSocketReader, maskKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(Okhttp3InternalWsWebSocketReader, maskBuffer_, IOSByteArray *)

FOUNDATION_EXPORT void Okhttp3InternalWsWebSocketReader_initWithBoolean_withOkioBufferedSource_withOkhttp3InternalWsWebSocketReader_FrameCallback_(Okhttp3InternalWsWebSocketReader *self, jboolean isClient, id<OkioBufferedSource> source, id<Okhttp3InternalWsWebSocketReader_FrameCallback> frameCallback);

FOUNDATION_EXPORT Okhttp3InternalWsWebSocketReader *new_Okhttp3InternalWsWebSocketReader_initWithBoolean_withOkioBufferedSource_withOkhttp3InternalWsWebSocketReader_FrameCallback_(jboolean isClient, id<OkioBufferedSource> source, id<Okhttp3InternalWsWebSocketReader_FrameCallback> frameCallback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalWsWebSocketReader *create_Okhttp3InternalWsWebSocketReader_initWithBoolean_withOkioBufferedSource_withOkhttp3InternalWsWebSocketReader_FrameCallback_(jboolean isClient, id<OkioBufferedSource> source, id<Okhttp3InternalWsWebSocketReader_FrameCallback> frameCallback);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalWsWebSocketReader)

#endif

#if !defined (Okhttp3InternalWsWebSocketReader_FrameCallback_) && (INCLUDE_ALL_Okhttp3InternalWsWebSocketReader || defined(INCLUDE_Okhttp3InternalWsWebSocketReader_FrameCallback))
#define Okhttp3InternalWsWebSocketReader_FrameCallback_

@class OkioByteString;

@protocol Okhttp3InternalWsWebSocketReader_FrameCallback < JavaObject >

- (void)onReadMessageWithNSString:(NSString *)text;

- (void)onReadMessageWithOkioByteString:(OkioByteString *)bytes;

- (void)onReadPingWithOkioByteString:(OkioByteString *)buffer;

- (void)onReadPongWithOkioByteString:(OkioByteString *)buffer;

- (void)onReadCloseWithInt:(jint)code
              withNSString:(NSString *)reason;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalWsWebSocketReader_FrameCallback)

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalWsWebSocketReader_FrameCallback)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalWsWebSocketReader")
