//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/Internal.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalInternal")
#ifdef RESTRICT_Okhttp3InternalInternal
#define INCLUDE_ALL_Okhttp3InternalInternal 0
#else
#define INCLUDE_ALL_Okhttp3InternalInternal 1
#endif
#undef RESTRICT_Okhttp3InternalInternal

#if !defined (Okhttp3InternalInternal_) && (INCLUDE_ALL_Okhttp3InternalInternal || defined(INCLUDE_Okhttp3InternalInternal))
#define Okhttp3InternalInternal_

@class JavaNetSocket;
@class JavaxNetSslSSLSocket;
@class Okhttp3Address;
@class Okhttp3ConnectionPool;
@class Okhttp3ConnectionSpec;
@class Okhttp3Headers_Builder;
@class Okhttp3HttpUrl;
@class Okhttp3InternalConnectionRealConnection;
@class Okhttp3InternalConnectionRouteDatabase;
@class Okhttp3InternalConnectionStreamAllocation;
@class Okhttp3OkHttpClient;
@class Okhttp3OkHttpClient_Builder;
@class Okhttp3Request;
@class Okhttp3Response_Builder;
@protocol Okhttp3Call;
@protocol Okhttp3InternalCacheInternalCache;

@interface Okhttp3InternalInternal : NSObject

#pragma mark Public

- (instancetype)init;

- (void)addLenientWithOkhttp3Headers_Builder:(Okhttp3Headers_Builder *)builder
                                withNSString:(NSString *)line;

- (void)addLenientWithOkhttp3Headers_Builder:(Okhttp3Headers_Builder *)builder
                                withNSString:(NSString *)name
                                withNSString:(NSString *)value;

- (void)applyWithOkhttp3ConnectionSpec:(Okhttp3ConnectionSpec *)tlsConfiguration
              withJavaxNetSslSSLSocket:(JavaxNetSslSSLSocket *)sslSocket
                           withBoolean:(jboolean)isFallback;

- (jint)codeWithOkhttp3Response_Builder:(Okhttp3Response_Builder *)responseBuilder;

- (jboolean)connectionBecameIdleWithOkhttp3ConnectionPool:(Okhttp3ConnectionPool *)pool
              withOkhttp3InternalConnectionRealConnection:(Okhttp3InternalConnectionRealConnection *)connection;

- (JavaNetSocket *)deduplicateWithOkhttp3ConnectionPool:(Okhttp3ConnectionPool *)pool
                                     withOkhttp3Address:(Okhttp3Address *)address
          withOkhttp3InternalConnectionStreamAllocation:(Okhttp3InternalConnectionStreamAllocation *)streamAllocation;

- (Okhttp3InternalConnectionRealConnection *)getWithOkhttp3ConnectionPool:(Okhttp3ConnectionPool *)pool
                                                       withOkhttp3Address:(Okhttp3Address *)address
                            withOkhttp3InternalConnectionStreamAllocation:(Okhttp3InternalConnectionStreamAllocation *)streamAllocation;

- (Okhttp3HttpUrl *)getHttpUrlCheckedWithNSString:(NSString *)url;

+ (void)initializeInstanceForTests OBJC_METHOD_FAMILY_NONE;

- (id<Okhttp3Call>)newWebSocketCallWithOkhttp3OkHttpClient:(Okhttp3OkHttpClient *)client
                                        withOkhttp3Request:(Okhttp3Request *)request OBJC_METHOD_FAMILY_NONE;

- (void)putWithOkhttp3ConnectionPool:(Okhttp3ConnectionPool *)pool
withOkhttp3InternalConnectionRealConnection:(Okhttp3InternalConnectionRealConnection *)connection;

- (Okhttp3InternalConnectionRouteDatabase *)routeDatabaseWithOkhttp3ConnectionPool:(Okhttp3ConnectionPool *)connectionPool;

- (void)setCacheWithOkhttp3OkHttpClient_Builder:(Okhttp3OkHttpClient_Builder *)builder
          withOkhttp3InternalCacheInternalCache:(id<Okhttp3InternalCacheInternalCache>)internalCache;

- (Okhttp3InternalConnectionStreamAllocation *)streamAllocationWithOkhttp3Call:(id<Okhttp3Call>)call;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalInternal)

inline Okhttp3InternalInternal *Okhttp3InternalInternal_get_instance();
inline Okhttp3InternalInternal *Okhttp3InternalInternal_set_instance(Okhttp3InternalInternal *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT Okhttp3InternalInternal *Okhttp3InternalInternal_instance;
J2OBJC_STATIC_FIELD_OBJ(Okhttp3InternalInternal, instance, Okhttp3InternalInternal *)

FOUNDATION_EXPORT void Okhttp3InternalInternal_init(Okhttp3InternalInternal *self);

FOUNDATION_EXPORT void Okhttp3InternalInternal_initializeInstanceForTests();

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalInternal)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalInternal")
