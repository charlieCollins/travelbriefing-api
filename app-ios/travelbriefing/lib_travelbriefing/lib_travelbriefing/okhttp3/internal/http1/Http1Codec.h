//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/okhttp3/internal/http1/Http1Codec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Okhttp3InternalHttp1Http1Codec")
#ifdef RESTRICT_Okhttp3InternalHttp1Http1Codec
#define INCLUDE_ALL_Okhttp3InternalHttp1Http1Codec 0
#else
#define INCLUDE_ALL_Okhttp3InternalHttp1Http1Codec 1
#endif
#undef RESTRICT_Okhttp3InternalHttp1Http1Codec

#if !defined (Okhttp3InternalHttp1Http1Codec_) && (INCLUDE_ALL_Okhttp3InternalHttp1Http1Codec || defined(INCLUDE_Okhttp3InternalHttp1Http1Codec))
#define Okhttp3InternalHttp1Http1Codec_

#define RESTRICT_Okhttp3InternalHttpHttpCodec 1
#define INCLUDE_Okhttp3InternalHttpHttpCodec 1
#include "okhttp3/internal/http/HttpCodec.h"

@class Okhttp3Headers;
@class Okhttp3HttpUrl;
@class Okhttp3InternalConnectionStreamAllocation;
@class Okhttp3OkHttpClient;
@class Okhttp3Request;
@class Okhttp3Response;
@class Okhttp3ResponseBody;
@class Okhttp3Response_Builder;
@class OkioForwardingTimeout;
@protocol OkioBufferedSink;
@protocol OkioBufferedSource;
@protocol OkioSink;
@protocol OkioSource;

@interface Okhttp3InternalHttp1Http1Codec : NSObject < Okhttp3InternalHttpHttpCodec > {
 @public
  Okhttp3OkHttpClient *client_;
  Okhttp3InternalConnectionStreamAllocation *streamAllocation_;
  id<OkioBufferedSource> source_;
  id<OkioBufferedSink> sink_;
  jint state_;
}

#pragma mark Public

- (instancetype)initWithOkhttp3OkHttpClient:(Okhttp3OkHttpClient *)client
withOkhttp3InternalConnectionStreamAllocation:(Okhttp3InternalConnectionStreamAllocation *)streamAllocation
                     withOkioBufferedSource:(id<OkioBufferedSource>)source
                       withOkioBufferedSink:(id<OkioBufferedSink>)sink;

- (void)cancel;

- (id<OkioSink>)createRequestBodyWithOkhttp3Request:(Okhttp3Request *)request
                                           withLong:(jlong)contentLength;

- (void)finishRequest;

- (void)flushRequest;

- (jboolean)isClosed;

- (id<OkioSink>)newChunkedSink OBJC_METHOD_FAMILY_NONE;

- (id<OkioSource>)newChunkedSourceWithOkhttp3HttpUrl:(Okhttp3HttpUrl *)url OBJC_METHOD_FAMILY_NONE;

- (id<OkioSink>)newFixedLengthSinkWithLong:(jlong)contentLength OBJC_METHOD_FAMILY_NONE;

- (id<OkioSource>)newFixedLengthSourceWithLong:(jlong)length OBJC_METHOD_FAMILY_NONE;

- (id<OkioSource>)newUnknownLengthSource OBJC_METHOD_FAMILY_NONE;

- (Okhttp3ResponseBody *)openResponseBodyWithOkhttp3Response:(Okhttp3Response *)response;

- (Okhttp3Headers *)readHeaders;

- (Okhttp3Response_Builder *)readResponseHeadersWithBoolean:(jboolean)expectContinue;

- (void)writeRequestWithOkhttp3Headers:(Okhttp3Headers *)headers
                          withNSString:(NSString *)requestLine;

- (void)writeRequestHeadersWithOkhttp3Request:(Okhttp3Request *)request;

#pragma mark Package-Private

- (void)detachTimeoutWithOkioForwardingTimeout:(OkioForwardingTimeout *)timeout;

@end

J2OBJC_EMPTY_STATIC_INIT(Okhttp3InternalHttp1Http1Codec)

J2OBJC_FIELD_SETTER(Okhttp3InternalHttp1Http1Codec, client_, Okhttp3OkHttpClient *)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttp1Http1Codec, streamAllocation_, Okhttp3InternalConnectionStreamAllocation *)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttp1Http1Codec, source_, id<OkioBufferedSource>)
J2OBJC_FIELD_SETTER(Okhttp3InternalHttp1Http1Codec, sink_, id<OkioBufferedSink>)

FOUNDATION_EXPORT void Okhttp3InternalHttp1Http1Codec_initWithOkhttp3OkHttpClient_withOkhttp3InternalConnectionStreamAllocation_withOkioBufferedSource_withOkioBufferedSink_(Okhttp3InternalHttp1Http1Codec *self, Okhttp3OkHttpClient *client, Okhttp3InternalConnectionStreamAllocation *streamAllocation, id<OkioBufferedSource> source, id<OkioBufferedSink> sink);

FOUNDATION_EXPORT Okhttp3InternalHttp1Http1Codec *new_Okhttp3InternalHttp1Http1Codec_initWithOkhttp3OkHttpClient_withOkhttp3InternalConnectionStreamAllocation_withOkioBufferedSource_withOkioBufferedSink_(Okhttp3OkHttpClient *client, Okhttp3InternalConnectionStreamAllocation *streamAllocation, id<OkioBufferedSource> source, id<OkioBufferedSink> sink) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Okhttp3InternalHttp1Http1Codec *create_Okhttp3InternalHttp1Http1Codec_initWithOkhttp3OkHttpClient_withOkhttp3InternalConnectionStreamAllocation_withOkioBufferedSource_withOkioBufferedSink_(Okhttp3OkHttpClient *client, Okhttp3InternalConnectionStreamAllocation *streamAllocation, id<OkioBufferedSource> source, id<OkioBufferedSink> sink);

J2OBJC_TYPE_LITERAL_HEADER(Okhttp3InternalHttp1Http1Codec)

#endif

#pragma pop_macro("INCLUDE_ALL_Okhttp3InternalHttp1Http1Codec")
