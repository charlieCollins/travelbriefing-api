//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/core/IsAnything.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "org/hamcrest/BaseMatcher.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Factory.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/core/IsAnything.h"

@interface OrgHamcrestCoreIsAnything () {
 @public
  NSString *message_;
}

@end

J2OBJC_FIELD_SETTER(OrgHamcrestCoreIsAnything, message_, NSString *)

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsAnything__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsAnything__Annotations$1();

@implementation OrgHamcrestCoreIsAnything

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgHamcrestCoreIsAnything_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message {
  OrgHamcrestCoreIsAnything_initWithNSString_(self, message);
  return self;
}

- (jboolean)matchesWithId:(id)o {
  return true;
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:message_];
}

+ (id<OrgHamcrestMatcher>)anything {
  return OrgHamcrestCoreIsAnything_anything();
}

+ (id<OrgHamcrestMatcher>)anythingWithNSString:(NSString *)description_ {
  return OrgHamcrestCoreIsAnything_anythingWithNSString_(description_);
}

- (void)dealloc {
  RELEASE_(message_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, -1, -1, -1, 5, 6, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 7, 0, -1, 8, 9, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(matchesWithId:);
  methods[3].selector = @selector(describeToWithOrgHamcrestDescription:);
  methods[4].selector = @selector(anything);
  methods[5].selector = @selector(anythingWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "message_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "matches", "LNSObject;", "describeTo", "LOrgHamcrestDescription;", "()Lorg/hamcrest/Matcher<Ljava/lang/Object;>;", (void *)&OrgHamcrestCoreIsAnything__Annotations$0, "anything", "(Ljava/lang/String;)Lorg/hamcrest/Matcher<Ljava/lang/Object;>;", (void *)&OrgHamcrestCoreIsAnything__Annotations$1, "<T:Ljava/lang/Object;>Lorg/hamcrest/BaseMatcher<TT;>;" };
  static const J2ObjcClassInfo _OrgHamcrestCoreIsAnything = { "IsAnything", "org.hamcrest.core", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, 10, -1 };
  return &_OrgHamcrestCoreIsAnything;
}

@end

void OrgHamcrestCoreIsAnything_init(OrgHamcrestCoreIsAnything *self) {
  OrgHamcrestCoreIsAnything_initWithNSString_(self, @"ANYTHING");
}

OrgHamcrestCoreIsAnything *new_OrgHamcrestCoreIsAnything_init() {
  J2OBJC_NEW_IMPL(OrgHamcrestCoreIsAnything, init)
}

OrgHamcrestCoreIsAnything *create_OrgHamcrestCoreIsAnything_init() {
  J2OBJC_CREATE_IMPL(OrgHamcrestCoreIsAnything, init)
}

void OrgHamcrestCoreIsAnything_initWithNSString_(OrgHamcrestCoreIsAnything *self, NSString *message) {
  OrgHamcrestBaseMatcher_init(self);
  JreStrongAssign(&self->message_, message);
}

OrgHamcrestCoreIsAnything *new_OrgHamcrestCoreIsAnything_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgHamcrestCoreIsAnything, initWithNSString_, message)
}

OrgHamcrestCoreIsAnything *create_OrgHamcrestCoreIsAnything_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgHamcrestCoreIsAnything, initWithNSString_, message)
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsAnything_anything() {
  OrgHamcrestCoreIsAnything_initialize();
  return create_OrgHamcrestCoreIsAnything_init();
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsAnything_anythingWithNSString_(NSString *description_) {
  OrgHamcrestCoreIsAnything_initialize();
  return create_OrgHamcrestCoreIsAnything_initWithNSString_(description_);
}

IOSObjectArray *OrgHamcrestCoreIsAnything__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIsAnything__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestCoreIsAnything)
