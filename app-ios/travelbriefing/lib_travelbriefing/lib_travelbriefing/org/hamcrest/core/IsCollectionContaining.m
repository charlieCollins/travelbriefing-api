//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/core/IsCollectionContaining.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Factory.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/TypeSafeDiagnosingMatcher.h"
#include "org/hamcrest/core/AllOf.h"
#include "org/hamcrest/core/IsCollectionContaining.h"
#include "org/hamcrest/core/IsEqual.h"

@interface OrgHamcrestCoreIsCollectionContaining () {
 @public
  id<OrgHamcrestMatcher> elementMatcher_;
}

@end

J2OBJC_FIELD_SETTER(OrgHamcrestCoreIsCollectionContaining, elementMatcher_, id<OrgHamcrestMatcher>)

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$0();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$1();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$2();

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$3();

@implementation OrgHamcrestCoreIsCollectionContaining

- (instancetype)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)elementMatcher {
  OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(self, elementMatcher);
  return self;
}

- (jboolean)matchesSafelyWithId:(id<JavaLangIterable>)collection
     withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatchDescription {
  jboolean isPastFirst = false;
  for (id __strong item in nil_chk(collection)) {
    if ([((id<OrgHamcrestMatcher>) nil_chk(elementMatcher_)) matchesWithId:item]) {
      return true;
    }
    if (isPastFirst) {
      [((id<OrgHamcrestDescription>) nil_chk(mismatchDescription)) appendTextWithNSString:@", "];
    }
    [elementMatcher_ describeMismatchWithId:item withOrgHamcrestDescription:mismatchDescription];
    isPastFirst = true;
  }
  return false;
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestDescription>) nil_chk([((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:@"a collection containing "])) appendDescriptionOfWithOrgHamcrestSelfDescribing:elementMatcher_];
}

+ (id<OrgHamcrestMatcher>)hasItemWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)itemMatcher {
  return OrgHamcrestCoreIsCollectionContaining_hasItemWithOrgHamcrestMatcher_(itemMatcher);
}

+ (id<OrgHamcrestMatcher>)hasItemWithId:(id)item {
  return OrgHamcrestCoreIsCollectionContaining_hasItemWithId_(item);
}

+ (id<OrgHamcrestMatcher>)hasItemsWithOrgHamcrestMatcherArray:(IOSObjectArray *)itemMatchers {
  return OrgHamcrestCoreIsCollectionContaining_hasItemsWithOrgHamcrestMatcherArray_(itemMatchers);
}

+ (id<OrgHamcrestMatcher>)hasItemsWithNSObjectArray:(IOSObjectArray *)items {
  return OrgHamcrestCoreIsCollectionContaining_hasItemsWithNSObjectArray_(items);
}

- (void)dealloc {
  RELEASE_(elementMatcher_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x4, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 7, 0, -1, 8, 9, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x9, 7, 10, -1, 11, 12, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x89, 13, 14, -1, 15, 16, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x89, 13, 17, -1, 18, 19, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgHamcrestMatcher:);
  methods[1].selector = @selector(matchesSafelyWithId:withOrgHamcrestDescription:);
  methods[2].selector = @selector(describeToWithOrgHamcrestDescription:);
  methods[3].selector = @selector(hasItemWithOrgHamcrestMatcher:);
  methods[4].selector = @selector(hasItemWithId:);
  methods[5].selector = @selector(hasItemsWithOrgHamcrestMatcherArray:);
  methods[6].selector = @selector(hasItemsWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elementMatcher_", "LOrgHamcrestMatcher;", .constantValue.asLong = 0, 0x12, -1, -1, 20, -1 },
  };
  static const void *ptrTable[] = { "LOrgHamcrestMatcher;", "(Lorg/hamcrest/Matcher<-TT;>;)V", "matchesSafely", "LJavaLangIterable;LOrgHamcrestDescription;", "(Ljava/lang/Iterable<-TT;>;Lorg/hamcrest/Description;)Z", "describeTo", "LOrgHamcrestDescription;", "hasItem", "<T:Ljava/lang/Object;>(Lorg/hamcrest/Matcher<-TT;>;)Lorg/hamcrest/Matcher<Ljava/lang/Iterable<-TT;>;>;", (void *)&OrgHamcrestCoreIsCollectionContaining__Annotations$0, "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Lorg/hamcrest/Matcher<Ljava/lang/Iterable<-TT;>;>;", (void *)&OrgHamcrestCoreIsCollectionContaining__Annotations$1, "hasItems", "[LOrgHamcrestMatcher;", "<T:Ljava/lang/Object;>([Lorg/hamcrest/Matcher<-TT;>;)Lorg/hamcrest/Matcher<Ljava/lang/Iterable<TT;>;>;", (void *)&OrgHamcrestCoreIsCollectionContaining__Annotations$2, "[LNSObject;", "<T:Ljava/lang/Object;>([TT;)Lorg/hamcrest/Matcher<Ljava/lang/Iterable<TT;>;>;", (void *)&OrgHamcrestCoreIsCollectionContaining__Annotations$3, "Lorg/hamcrest/Matcher<-TT;>;", "<T:Ljava/lang/Object;>Lorg/hamcrest/TypeSafeDiagnosingMatcher<Ljava/lang/Iterable<-TT;>;>;" };
  static const J2ObjcClassInfo _OrgHamcrestCoreIsCollectionContaining = { "IsCollectionContaining", "org.hamcrest.core", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, 21, -1 };
  return &_OrgHamcrestCoreIsCollectionContaining;
}

@end

void OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(OrgHamcrestCoreIsCollectionContaining *self, id<OrgHamcrestMatcher> elementMatcher) {
  OrgHamcrestTypeSafeDiagnosingMatcher_init(self);
  JreStrongAssign(&self->elementMatcher_, elementMatcher);
}

OrgHamcrestCoreIsCollectionContaining *new_OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> elementMatcher) {
  J2OBJC_NEW_IMPL(OrgHamcrestCoreIsCollectionContaining, initWithOrgHamcrestMatcher_, elementMatcher)
}

OrgHamcrestCoreIsCollectionContaining *create_OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> elementMatcher) {
  J2OBJC_CREATE_IMPL(OrgHamcrestCoreIsCollectionContaining, initWithOrgHamcrestMatcher_, elementMatcher)
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> itemMatcher) {
  OrgHamcrestCoreIsCollectionContaining_initialize();
  return create_OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(itemMatcher);
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemWithId_(id item) {
  OrgHamcrestCoreIsCollectionContaining_initialize();
  return create_OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(OrgHamcrestCoreIsEqual_equalToWithId_(item));
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemsWithOrgHamcrestMatcherArray_(IOSObjectArray *itemMatchers) {
  OrgHamcrestCoreIsCollectionContaining_initialize();
  id<JavaUtilList> all = create_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(itemMatchers))->size_);
  {
    IOSObjectArray *a__ = itemMatchers;
    id<OrgHamcrestMatcher> const *b__ = a__->buffer_;
    id<OrgHamcrestMatcher> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<OrgHamcrestMatcher> elementMatcher = *b__++;
      [all addWithId:create_OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(elementMatcher)];
    }
  }
  return OrgHamcrestCoreAllOf_allOfWithJavaLangIterable_(all);
}

id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemsWithNSObjectArray_(IOSObjectArray *items) {
  OrgHamcrestCoreIsCollectionContaining_initialize();
  id<JavaUtilList> all = create_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(items))->size_);
  {
    IOSObjectArray *a__ = items;
    id const *b__ = a__->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id element = *b__++;
      [all addWithId:OrgHamcrestCoreIsCollectionContaining_hasItemWithId_(element)];
    }
  }
  return OrgHamcrestCoreAllOf_allOfWithJavaLangIterable_(all);
}

IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgHamcrestCoreIsCollectionContaining__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestCoreIsCollectionContaining)
