//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/core/DescribedAs.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/hamcrest/BaseMatcher.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/Factory.h"
#include "org/hamcrest/Matcher.h"
#include "org/hamcrest/core/DescribedAs.h"

@interface OrgHamcrestCoreDescribedAs () {
 @public
  NSString *descriptionTemplate_;
  id<OrgHamcrestMatcher> matcher_;
  IOSObjectArray *values_;
}

@end

J2OBJC_FIELD_SETTER(OrgHamcrestCoreDescribedAs, descriptionTemplate_, NSString *)
J2OBJC_FIELD_SETTER(OrgHamcrestCoreDescribedAs, matcher_, id<OrgHamcrestMatcher>)
J2OBJC_FIELD_SETTER(OrgHamcrestCoreDescribedAs, values_, IOSObjectArray *)

inline JavaUtilRegexPattern *OrgHamcrestCoreDescribedAs_get_ARG_PATTERN();
static JavaUtilRegexPattern *OrgHamcrestCoreDescribedAs_ARG_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgHamcrestCoreDescribedAs, ARG_PATTERN, JavaUtilRegexPattern *)

__attribute__((unused)) static IOSObjectArray *OrgHamcrestCoreDescribedAs__Annotations$0();

J2OBJC_INITIALIZED_DEFN(OrgHamcrestCoreDescribedAs)

@implementation OrgHamcrestCoreDescribedAs

- (instancetype)initWithNSString:(NSString *)descriptionTemplate
          withOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher
               withNSObjectArray:(IOSObjectArray *)values {
  OrgHamcrestCoreDescribedAs_initWithNSString_withOrgHamcrestMatcher_withNSObjectArray_(self, descriptionTemplate, matcher, values);
  return self;
}

- (jboolean)matchesWithId:(id)o {
  return [((id<OrgHamcrestMatcher>) nil_chk(matcher_)) matchesWithId:o];
}

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  JavaUtilRegexMatcher *arg = [((JavaUtilRegexPattern *) nil_chk(OrgHamcrestCoreDescribedAs_ARG_PATTERN)) matcherWithJavaLangCharSequence:descriptionTemplate_];
  jint textStart = 0;
  while ([((JavaUtilRegexMatcher *) nil_chk(arg)) find]) {
    [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:[((NSString *) nil_chk(descriptionTemplate_)) java_substring:textStart endIndex:[arg start]]];
    [description_ appendValueWithId:IOSObjectArray_Get(nil_chk(values_), JavaLangInteger_parseIntWithNSString_([arg groupWithInt:1]))];
    textStart = [arg end];
  }
  if (textStart < ((jint) [((NSString *) nil_chk(descriptionTemplate_)) length])) {
    [((id<OrgHamcrestDescription>) nil_chk(description_)) appendTextWithNSString:[descriptionTemplate_ java_substring:textStart]];
  }
}

- (void)describeMismatchWithId:(id)item
    withOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_ {
  [((id<OrgHamcrestMatcher>) nil_chk(matcher_)) describeMismatchWithId:item withOrgHamcrestDescription:description_];
}

+ (id<OrgHamcrestMatcher>)describedAsWithNSString:(NSString *)description_
                           withOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher
                                withNSObjectArray:(IOSObjectArray *)values {
  return OrgHamcrestCoreDescribedAs_describedAsWithNSString_withOrgHamcrestMatcher_withNSObjectArray_(description_, matcher, values);
}

- (void)dealloc {
  RELEASE_(descriptionTemplate_);
  RELEASE_(matcher_);
  RELEASE_(values_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgHamcrestMatcher;", 0x89, 8, 0, -1, 9, 10, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withOrgHamcrestMatcher:withNSObjectArray:);
  methods[1].selector = @selector(matchesWithId:);
  methods[2].selector = @selector(describeToWithOrgHamcrestDescription:);
  methods[3].selector = @selector(describeMismatchWithId:withOrgHamcrestDescription:);
  methods[4].selector = @selector(describedAsWithNSString:withOrgHamcrestMatcher:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "descriptionTemplate_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "matcher_", "LOrgHamcrestMatcher;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "values_", "[LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "ARG_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgHamcrestMatcher;[LNSObject;", "(Ljava/lang/String;Lorg/hamcrest/Matcher<TT;>;[Ljava/lang/Object;)V", "matches", "LNSObject;", "describeTo", "LOrgHamcrestDescription;", "describeMismatch", "LNSObject;LOrgHamcrestDescription;", "describedAs", "<T:Ljava/lang/Object;>(Ljava/lang/String;Lorg/hamcrest/Matcher<TT;>;[Ljava/lang/Object;)Lorg/hamcrest/Matcher<TT;>;", (void *)&OrgHamcrestCoreDescribedAs__Annotations$0, "Lorg/hamcrest/Matcher<TT;>;", &OrgHamcrestCoreDescribedAs_ARG_PATTERN, "<T:Ljava/lang/Object;>Lorg/hamcrest/BaseMatcher<TT;>;" };
  static const J2ObjcClassInfo _OrgHamcrestCoreDescribedAs = { "DescribedAs", "org.hamcrest.core", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, 13, -1 };
  return &_OrgHamcrestCoreDescribedAs;
}

+ (void)initialize {
  if (self == [OrgHamcrestCoreDescribedAs class]) {
    JreStrongAssign(&OrgHamcrestCoreDescribedAs_ARG_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"%([0-9]+)"));
    J2OBJC_SET_INITIALIZED(OrgHamcrestCoreDescribedAs)
  }
}

@end

void OrgHamcrestCoreDescribedAs_initWithNSString_withOrgHamcrestMatcher_withNSObjectArray_(OrgHamcrestCoreDescribedAs *self, NSString *descriptionTemplate, id<OrgHamcrestMatcher> matcher, IOSObjectArray *values) {
  OrgHamcrestBaseMatcher_init(self);
  JreStrongAssign(&self->descriptionTemplate_, descriptionTemplate);
  JreStrongAssign(&self->matcher_, matcher);
  JreStrongAssign(&self->values_, [((IOSObjectArray *) nil_chk(values)) java_clone]);
}

OrgHamcrestCoreDescribedAs *new_OrgHamcrestCoreDescribedAs_initWithNSString_withOrgHamcrestMatcher_withNSObjectArray_(NSString *descriptionTemplate, id<OrgHamcrestMatcher> matcher, IOSObjectArray *values) {
  J2OBJC_NEW_IMPL(OrgHamcrestCoreDescribedAs, initWithNSString_withOrgHamcrestMatcher_withNSObjectArray_, descriptionTemplate, matcher, values)
}

OrgHamcrestCoreDescribedAs *create_OrgHamcrestCoreDescribedAs_initWithNSString_withOrgHamcrestMatcher_withNSObjectArray_(NSString *descriptionTemplate, id<OrgHamcrestMatcher> matcher, IOSObjectArray *values) {
  J2OBJC_CREATE_IMPL(OrgHamcrestCoreDescribedAs, initWithNSString_withOrgHamcrestMatcher_withNSObjectArray_, descriptionTemplate, matcher, values)
}

id<OrgHamcrestMatcher> OrgHamcrestCoreDescribedAs_describedAsWithNSString_withOrgHamcrestMatcher_withNSObjectArray_(NSString *description_, id<OrgHamcrestMatcher> matcher, IOSObjectArray *values) {
  OrgHamcrestCoreDescribedAs_initialize();
  return create_OrgHamcrestCoreDescribedAs_initWithNSString_withOrgHamcrestMatcher_withNSObjectArray_(description_, matcher, values);
}

IOSObjectArray *OrgHamcrestCoreDescribedAs__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgHamcrestFactory() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestCoreDescribedAs)
