//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/hamcrest/StringDescription.java
//

#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Appendable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "org/hamcrest/BaseDescription.h"
#include "org/hamcrest/Description.h"
#include "org/hamcrest/SelfDescribing.h"
#include "org/hamcrest/StringDescription.h"

@interface OrgHamcrestStringDescription () {
 @public
  id<JavaLangAppendable> out_;
}

@end

J2OBJC_FIELD_SETTER(OrgHamcrestStringDescription, out_, id<JavaLangAppendable>)

@implementation OrgHamcrestStringDescription

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgHamcrestStringDescription_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaLangAppendable:(id<JavaLangAppendable>)outArg {
  OrgHamcrestStringDescription_initWithJavaLangAppendable_(self, outArg);
  return self;
}

+ (NSString *)toStringWithOrgHamcrestSelfDescribing:(id<OrgHamcrestSelfDescribing>)selfDescribing {
  return OrgHamcrestStringDescription_toStringWithOrgHamcrestSelfDescribing_(selfDescribing);
}

+ (NSString *)asStringWithOrgHamcrestSelfDescribing:(id<OrgHamcrestSelfDescribing>)selfDescribing {
  return OrgHamcrestStringDescription_asStringWithOrgHamcrestSelfDescribing_(selfDescribing);
}

- (void)appendWithNSString:(NSString *)str {
  @try {
    [((id<JavaLangAppendable>) nil_chk(out_)) appendWithJavaLangCharSequence:str];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(@"Could not write description", e);
  }
}

- (void)appendWithChar:(jchar)c {
  @try {
    [((id<JavaLangAppendable>) nil_chk(out_)) appendWithChar:c];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(@"Could not write description", e);
  }
}

- (NSString *)description {
  return [((id<JavaLangAppendable>) nil_chk(out_)) description];
}

- (void)dealloc {
  RELEASE_(out_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaLangAppendable:);
  methods[2].selector = @selector(toStringWithOrgHamcrestSelfDescribing:);
  methods[3].selector = @selector(asStringWithOrgHamcrestSelfDescribing:);
  methods[4].selector = @selector(appendWithNSString:);
  methods[5].selector = @selector(appendWithChar:);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "out_", "LJavaLangAppendable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangAppendable;", "toString", "LOrgHamcrestSelfDescribing;", "asString", "append", "LNSString;", "C" };
  static const J2ObjcClassInfo _OrgHamcrestStringDescription = { "StringDescription", "org.hamcrest", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_OrgHamcrestStringDescription;
}

@end

void OrgHamcrestStringDescription_init(OrgHamcrestStringDescription *self) {
  OrgHamcrestStringDescription_initWithJavaLangAppendable_(self, create_JavaLangStringBuilder_init());
}

OrgHamcrestStringDescription *new_OrgHamcrestStringDescription_init() {
  J2OBJC_NEW_IMPL(OrgHamcrestStringDescription, init)
}

OrgHamcrestStringDescription *create_OrgHamcrestStringDescription_init() {
  J2OBJC_CREATE_IMPL(OrgHamcrestStringDescription, init)
}

void OrgHamcrestStringDescription_initWithJavaLangAppendable_(OrgHamcrestStringDescription *self, id<JavaLangAppendable> outArg) {
  OrgHamcrestBaseDescription_init(self);
  JreStrongAssign(&self->out_, outArg);
}

OrgHamcrestStringDescription *new_OrgHamcrestStringDescription_initWithJavaLangAppendable_(id<JavaLangAppendable> outArg) {
  J2OBJC_NEW_IMPL(OrgHamcrestStringDescription, initWithJavaLangAppendable_, outArg)
}

OrgHamcrestStringDescription *create_OrgHamcrestStringDescription_initWithJavaLangAppendable_(id<JavaLangAppendable> outArg) {
  J2OBJC_CREATE_IMPL(OrgHamcrestStringDescription, initWithJavaLangAppendable_, outArg)
}

NSString *OrgHamcrestStringDescription_toStringWithOrgHamcrestSelfDescribing_(id<OrgHamcrestSelfDescribing> selfDescribing) {
  OrgHamcrestStringDescription_initialize();
  return [((id<OrgHamcrestDescription>) nil_chk([create_OrgHamcrestStringDescription_init() appendDescriptionOfWithOrgHamcrestSelfDescribing:selfDescribing])) description];
}

NSString *OrgHamcrestStringDescription_asStringWithOrgHamcrestSelfDescribing_(id<OrgHamcrestSelfDescribing> selfDescribing) {
  OrgHamcrestStringDescription_initialize();
  return OrgHamcrestStringDescription_toStringWithOrgHamcrestSelfDescribing_(selfDescribing);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgHamcrestStringDescription)
