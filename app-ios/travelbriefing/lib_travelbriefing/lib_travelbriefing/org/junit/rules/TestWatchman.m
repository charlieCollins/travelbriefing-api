//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/rules/TestWatchman.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/junit/internal/AssumptionViolatedException.h"
#include "org/junit/rules/TestWatchman.h"
#include "org/junit/runners/model/FrameworkMethod.h"
#include "org/junit/runners/model/Statement.h"

__attribute__((unused)) static IOSObjectArray *OrgJunitRulesTestWatchman__Annotations$0();

@interface OrgJunitRulesTestWatchman_1 : OrgJunitRunnersModelStatement {
 @public
  OrgJunitRulesTestWatchman *this$0_;
  OrgJunitRunnersModelFrameworkMethod *val$method_;
  OrgJunitRunnersModelStatement *val$base_;
}

- (instancetype)initWithOrgJunitRulesTestWatchman:(OrgJunitRulesTestWatchman *)outer$
          withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)capture$0
                withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$1;

- (void)evaluate;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRulesTestWatchman_1)

__attribute__((unused)) static void OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatchman_1 *self, OrgJunitRulesTestWatchman *outer$, OrgJunitRunnersModelFrameworkMethod *capture$0, OrgJunitRunnersModelStatement *capture$1);

__attribute__((unused)) static OrgJunitRulesTestWatchman_1 *new_OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatchman *outer$, OrgJunitRunnersModelFrameworkMethod *capture$0, OrgJunitRunnersModelStatement *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitRulesTestWatchman_1 *create_OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatchman *outer$, OrgJunitRunnersModelFrameworkMethod *capture$0, OrgJunitRunnersModelStatement *capture$1);

@implementation OrgJunitRulesTestWatchman

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitRulesTestWatchman_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
                                  withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method
                                                                   withId:(id)target {
  return create_OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(self, method, base);
}

- (void)succeededWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method {
}

- (void)failedWithNSException:(NSException *)e
withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method {
}

- (void)startingWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method {
}

- (void)finishedWithOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)method {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnersModelStatement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(applyWithOrgJunitRunnersModelStatement:withOrgJunitRunnersModelFrameworkMethod:withId:);
  methods[2].selector = @selector(succeededWithOrgJunitRunnersModelFrameworkMethod:);
  methods[3].selector = @selector(failedWithNSException:withOrgJunitRunnersModelFrameworkMethod:);
  methods[4].selector = @selector(startingWithOrgJunitRunnersModelFrameworkMethod:);
  methods[5].selector = @selector(finishedWithOrgJunitRunnersModelFrameworkMethod:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LOrgJunitRunnersModelStatement;LOrgJunitRunnersModelFrameworkMethod;LNSObject;", "succeeded", "LOrgJunitRunnersModelFrameworkMethod;", "failed", "LNSException;LOrgJunitRunnersModelFrameworkMethod;", "starting", "finished", (void *)&OrgJunitRulesTestWatchman__Annotations$0 };
  static const J2ObjcClassInfo _OrgJunitRulesTestWatchman = { "TestWatchman", "org.junit.rules", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, 8 };
  return &_OrgJunitRulesTestWatchman;
}

@end

void OrgJunitRulesTestWatchman_init(OrgJunitRulesTestWatchman *self) {
  NSObject_init(self);
}

OrgJunitRulesTestWatchman *new_OrgJunitRulesTestWatchman_init() {
  J2OBJC_NEW_IMPL(OrgJunitRulesTestWatchman, init)
}

OrgJunitRulesTestWatchman *create_OrgJunitRulesTestWatchman_init() {
  J2OBJC_CREATE_IMPL(OrgJunitRulesTestWatchman, init)
}

IOSObjectArray *OrgJunitRulesTestWatchman__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRulesTestWatchman)

@implementation OrgJunitRulesTestWatchman_1

- (instancetype)initWithOrgJunitRulesTestWatchman:(OrgJunitRulesTestWatchman *)outer$
          withOrgJunitRunnersModelFrameworkMethod:(OrgJunitRunnersModelFrameworkMethod *)capture$0
                withOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)capture$1 {
  OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)evaluate {
  [this$0_ startingWithOrgJunitRunnersModelFrameworkMethod:val$method_];
  @try {
    [((OrgJunitRunnersModelStatement *) nil_chk(val$base_)) evaluate];
    [this$0_ succeededWithOrgJunitRunnersModelFrameworkMethod:val$method_];
  }
  @catch (OrgJunitInternalAssumptionViolatedException *e) {
    @throw e;
  }
  @catch (NSException *e) {
    [this$0_ failedWithNSException:e withOrgJunitRunnersModelFrameworkMethod:val$method_];
    @throw e;
  }
  @finally {
    [this$0_ finishedWithOrgJunitRunnersModelFrameworkMethod:val$method_];
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$method_);
  RELEASE_(val$base_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRulesTestWatchman:withOrgJunitRunnersModelFrameworkMethod:withOrgJunitRunnersModelStatement:);
  methods[1].selector = @selector(evaluate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgJunitRulesTestWatchman;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$method_", "LOrgJunitRunnersModelFrameworkMethod;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$base_", "LOrgJunitRunnersModelStatement;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSException;", "LOrgJunitRulesTestWatchman;", "applyWithOrgJunitRunnersModelStatement:withOrgJunitRunnersModelFrameworkMethod:withId:" };
  static const J2ObjcClassInfo _OrgJunitRulesTestWatchman_1 = { "", "org.junit.rules", ptrTable, methods, fields, 7, 0x8018, 2, 3, 1, -1, 2, -1, -1 };
  return &_OrgJunitRulesTestWatchman_1;
}

@end

void OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatchman_1 *self, OrgJunitRulesTestWatchman *outer$, OrgJunitRunnersModelFrameworkMethod *capture$0, OrgJunitRunnersModelStatement *capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$method_, capture$0);
  JreStrongAssign(&self->val$base_, capture$1);
  OrgJunitRunnersModelStatement_init(self);
}

OrgJunitRulesTestWatchman_1 *new_OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatchman *outer$, OrgJunitRunnersModelFrameworkMethod *capture$0, OrgJunitRunnersModelStatement *capture$1) {
  J2OBJC_NEW_IMPL(OrgJunitRulesTestWatchman_1, initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_, outer$, capture$0, capture$1)
}

OrgJunitRulesTestWatchman_1 *create_OrgJunitRulesTestWatchman_1_initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_(OrgJunitRulesTestWatchman *outer$, OrgJunitRunnersModelFrameworkMethod *capture$0, OrgJunitRunnersModelStatement *capture$1) {
  J2OBJC_CREATE_IMPL(OrgJunitRulesTestWatchman_1, initWithOrgJunitRulesTestWatchman_withOrgJunitRunnersModelFrameworkMethod_withOrgJunitRunnersModelStatement_, outer$, capture$0, capture$1)
}
