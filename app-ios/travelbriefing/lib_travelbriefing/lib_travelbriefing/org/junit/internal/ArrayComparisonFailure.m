//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/ArrayComparisonFailure.java
//

#include "J2ObjC_source.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/junit/internal/ArrayComparisonFailure.h"

@interface OrgJunitInternalArrayComparisonFailure () {
 @public
  id<JavaUtilList> fIndices_;
  NSString *fMessage_;
}

@end

J2OBJC_FIELD_SETTER(OrgJunitInternalArrayComparisonFailure, fIndices_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgJunitInternalArrayComparisonFailure, fMessage_, NSString *)

inline jlong OrgJunitInternalArrayComparisonFailure_get_serialVersionUID();
#define OrgJunitInternalArrayComparisonFailure_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJunitInternalArrayComparisonFailure, serialVersionUID, jlong)

@implementation OrgJunitInternalArrayComparisonFailure

- (instancetype)initWithNSString:(NSString *)message
      withJavaLangAssertionError:(JavaLangAssertionError *)cause
                         withInt:(jint)index {
  OrgJunitInternalArrayComparisonFailure_initWithNSString_withJavaLangAssertionError_withInt_(self, message, cause, index);
  return self;
}

- (void)addDimensionWithInt:(jint)index {
  [((id<JavaUtilList>) nil_chk(fIndices_)) addWithInt:0 withId:JavaLangInteger_valueOfWithInt_(index)];
}

- (NSString *)getMessage {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  if (fMessage_ != nil) {
    [sb appendWithNSString:fMessage_];
  }
  [sb appendWithNSString:@"arrays first differed at element "];
  for (JavaLangInteger *boxed__ in nil_chk(fIndices_)) {
    jint each = [((JavaLangInteger *) nil_chk(boxed__)) intValue];
    [sb appendWithNSString:@"["];
    [sb appendWithInt:each];
    [sb appendWithNSString:@"]"];
  }
  [sb appendWithNSString:@"; "];
  [sb appendWithNSString:[((NSException *) nil_chk([self getCause])) getMessage]];
  return [sb description];
}

- (NSString *)description {
  return [self getMessage];
}

- (void)dealloc {
  RELEASE_(fIndices_);
  RELEASE_(fMessage_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withJavaLangAssertionError:withInt:);
  methods[1].selector = @selector(addDimensionWithInt:);
  methods[2].selector = @selector(getMessage);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJunitInternalArrayComparisonFailure_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "fIndices_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
    { "fMessage_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangAssertionError;I", "addDimension", "I", "toString", "Ljava/util/List<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _OrgJunitInternalArrayComparisonFailure = { "ArrayComparisonFailure", "org.junit.internal", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_OrgJunitInternalArrayComparisonFailure;
}

@end

void OrgJunitInternalArrayComparisonFailure_initWithNSString_withJavaLangAssertionError_withInt_(OrgJunitInternalArrayComparisonFailure *self, NSString *message, JavaLangAssertionError *cause, jint index) {
  JavaLangAssertionError_init(self);
  JreStrongAssignAndConsume(&self->fIndices_, new_JavaUtilArrayList_init());
  JreStrongAssign(&self->fMessage_, message);
  [self initCauseWithNSException:cause];
  [self addDimensionWithInt:index];
}

OrgJunitInternalArrayComparisonFailure *new_OrgJunitInternalArrayComparisonFailure_initWithNSString_withJavaLangAssertionError_withInt_(NSString *message, JavaLangAssertionError *cause, jint index) {
  J2OBJC_NEW_IMPL(OrgJunitInternalArrayComparisonFailure, initWithNSString_withJavaLangAssertionError_withInt_, message, cause, index)
}

OrgJunitInternalArrayComparisonFailure *create_OrgJunitInternalArrayComparisonFailure_initWithNSString_withJavaLangAssertionError_withInt_(NSString *message, JavaLangAssertionError *cause, jint index) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalArrayComparisonFailure, initWithNSString_withJavaLangAssertionError_withInt_, message, cause, index)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalArrayComparisonFailure)
