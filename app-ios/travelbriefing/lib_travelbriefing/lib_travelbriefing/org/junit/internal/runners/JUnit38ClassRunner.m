//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/internal/runners/JUnit38ClassRunner.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Method.h"
#include "junit/extensions/TestDecorator.h"
#include "junit/framework/AssertionFailedError.h"
#include "junit/framework/Test.h"
#include "junit/framework/TestCase.h"
#include "junit/framework/TestListener.h"
#include "junit/framework/TestResult.h"
#include "junit/framework/TestSuite.h"
#include "org/junit/internal/runners/JUnit38ClassRunner.h"
#include "org/junit/runner/Describable.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runner/manipulation/Filter.h"
#include "org/junit/runner/manipulation/Filterable.h"
#include "org/junit/runner/manipulation/NoTestsRemainException.h"
#include "org/junit/runner/manipulation/Sortable.h"
#include "org/junit/runner/manipulation/Sorter.h"
#include "org/junit/runner/notification/Failure.h"
#include "org/junit/runner/notification/RunNotifier.h"

@interface OrgJunitInternalRunnersJUnit38ClassRunner () {
 @public
  volatile_id test_;
}

+ (OrgJunitRunnerDescription *)makeDescriptionWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

+ (IOSObjectArray *)getAnnotationsWithJunitFrameworkTestCase:(JunitFrameworkTestCase *)test;

+ (NSString *)createSuiteDescriptionWithJunitFrameworkTestSuite:(JunitFrameworkTestSuite *)ts;

- (void)setTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (id<JunitFrameworkTest>)getTest;

@end

J2OBJC_VOLATILE_FIELD_SETTER(OrgJunitInternalRunnersJUnit38ClassRunner, test_, id<JunitFrameworkTest>)

__attribute__((unused)) static OrgJunitRunnerDescription *OrgJunitInternalRunnersJUnit38ClassRunner_makeDescriptionWithJunitFrameworkTest_(id<JunitFrameworkTest> test);

__attribute__((unused)) static IOSObjectArray *OrgJunitInternalRunnersJUnit38ClassRunner_getAnnotationsWithJunitFrameworkTestCase_(JunitFrameworkTestCase *test);

__attribute__((unused)) static NSString *OrgJunitInternalRunnersJUnit38ClassRunner_createSuiteDescriptionWithJunitFrameworkTestSuite_(JunitFrameworkTestSuite *ts);

__attribute__((unused)) static void OrgJunitInternalRunnersJUnit38ClassRunner_setTestWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner *self, id<JunitFrameworkTest> test);

__attribute__((unused)) static id<JunitFrameworkTest> OrgJunitInternalRunnersJUnit38ClassRunner_getTest(OrgJunitInternalRunnersJUnit38ClassRunner *self);

@interface OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener : NSObject < JunitFrameworkTestListener > {
 @public
  OrgJunitRunnerNotificationRunNotifier *notifier_;
}

- (instancetype)initWithOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier;

- (void)endTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (void)startTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (void)addErrorWithJunitFrameworkTest:(id<JunitFrameworkTest>)test
                       withNSException:(NSException *)e;

- (OrgJunitRunnerDescription *)asDescriptionWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (IOSClass *)getEffectiveClassWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (NSString *)getNameWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (void)addFailureWithJunitFrameworkTest:(id<JunitFrameworkTest>)test
  withJunitFrameworkAssertionFailedError:(JunitFrameworkAssertionFailedError *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener)

J2OBJC_FIELD_SETTER(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener, notifier_, OrgJunitRunnerNotificationRunNotifier *)

__attribute__((unused)) static void OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, OrgJunitRunnerNotificationRunNotifier *notifier);

__attribute__((unused)) static OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *new_OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(OrgJunitRunnerNotificationRunNotifier *notifier) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *create_OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(OrgJunitRunnerNotificationRunNotifier *notifier);

__attribute__((unused)) static OrgJunitRunnerDescription *OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_asDescriptionWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, id<JunitFrameworkTest> test);

__attribute__((unused)) static IOSClass *OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getEffectiveClassWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, id<JunitFrameworkTest> test);

__attribute__((unused)) static NSString *OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getNameWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, id<JunitFrameworkTest> test);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener)

@implementation OrgJunitInternalRunnersJUnit38ClassRunner

- (instancetype)initWithIOSClass:(IOSClass *)klass {
  OrgJunitInternalRunnersJUnit38ClassRunner_initWithIOSClass_(self, klass);
  return self;
}

- (instancetype)initWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  OrgJunitInternalRunnersJUnit38ClassRunner_initWithJunitFrameworkTest_(self, test);
  return self;
}

- (void)runWithOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier {
  JunitFrameworkTestResult *result = create_JunitFrameworkTestResult_init();
  [result addListenerWithJunitFrameworkTestListener:[self createAdaptingListenerWithOrgJunitRunnerNotificationRunNotifier:notifier]];
  [((id<JunitFrameworkTest>) nil_chk(OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self))) runWithJunitFrameworkTestResult:result];
}

- (id<JunitFrameworkTestListener>)createAdaptingListenerWithOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier {
  return create_OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(notifier);
}

- (OrgJunitRunnerDescription *)getDescription {
  return OrgJunitInternalRunnersJUnit38ClassRunner_makeDescriptionWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self));
}

+ (OrgJunitRunnerDescription *)makeDescriptionWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  return OrgJunitInternalRunnersJUnit38ClassRunner_makeDescriptionWithJunitFrameworkTest_(test);
}

+ (IOSObjectArray *)getAnnotationsWithJunitFrameworkTestCase:(JunitFrameworkTestCase *)test {
  return OrgJunitInternalRunnersJUnit38ClassRunner_getAnnotationsWithJunitFrameworkTestCase_(test);
}

+ (NSString *)createSuiteDescriptionWithJunitFrameworkTestSuite:(JunitFrameworkTestSuite *)ts {
  return OrgJunitInternalRunnersJUnit38ClassRunner_createSuiteDescriptionWithJunitFrameworkTestSuite_(ts);
}

- (void)filterWithOrgJunitRunnerManipulationFilter:(OrgJunitRunnerManipulationFilter *)filter {
  if ([OrgJunitRunnerManipulationFilterable_class_() isInstance:OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self)]) {
    id<OrgJunitRunnerManipulationFilterable> adapter = (id<OrgJunitRunnerManipulationFilterable>) cast_check(OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self), OrgJunitRunnerManipulationFilterable_class_());
    [((id<OrgJunitRunnerManipulationFilterable>) nil_chk(adapter)) filterWithOrgJunitRunnerManipulationFilter:filter];
  }
  else if ([OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self) isKindOfClass:[JunitFrameworkTestSuite class]]) {
    JunitFrameworkTestSuite *suite = (JunitFrameworkTestSuite *) cast_chk(OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self), [JunitFrameworkTestSuite class]);
    JunitFrameworkTestSuite *filtered = create_JunitFrameworkTestSuite_initWithNSString_([((JunitFrameworkTestSuite *) nil_chk(suite)) getName]);
    jint n = [suite testCount];
    for (jint i = 0; i < n; i++) {
      id<JunitFrameworkTest> test = [suite testAtWithInt:i];
      if ([((OrgJunitRunnerManipulationFilter *) nil_chk(filter)) shouldRunWithOrgJunitRunnerDescription:OrgJunitInternalRunnersJUnit38ClassRunner_makeDescriptionWithJunitFrameworkTest_(test)]) {
        [filtered addTestWithJunitFrameworkTest:test];
      }
    }
    OrgJunitInternalRunnersJUnit38ClassRunner_setTestWithJunitFrameworkTest_(self, filtered);
    if ([filtered testCount] == 0) {
      @throw create_OrgJunitRunnerManipulationNoTestsRemainException_init();
    }
  }
}

- (void)sortWithOrgJunitRunnerManipulationSorter:(OrgJunitRunnerManipulationSorter *)sorter {
  if ([OrgJunitRunnerManipulationSortable_class_() isInstance:OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self)]) {
    id<OrgJunitRunnerManipulationSortable> adapter = (id<OrgJunitRunnerManipulationSortable>) cast_check(OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self), OrgJunitRunnerManipulationSortable_class_());
    [((id<OrgJunitRunnerManipulationSortable>) nil_chk(adapter)) sortWithOrgJunitRunnerManipulationSorter:sorter];
  }
}

- (void)setTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  OrgJunitInternalRunnersJUnit38ClassRunner_setTestWithJunitFrameworkTest_(self, test);
}

- (id<JunitFrameworkTest>)getTest {
  return OrgJunitInternalRunnersJUnit38ClassRunner_getTest(self);
}

- (void)__javaClone:(OrgJunitInternalRunnersJUnit38ClassRunner *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&test_, &original->test_);
}

- (void)dealloc {
  JreReleaseVolatile(&test_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJunitFrameworkTestListener;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0xa, 6, 2, -1, -1, -1, -1 },
    { NULL, "[LJavaLangAnnotationAnnotation;", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, 13, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 2, -1, -1, -1, -1 },
    { NULL, "LJunitFrameworkTest;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(initWithJunitFrameworkTest:);
  methods[2].selector = @selector(runWithOrgJunitRunnerNotificationRunNotifier:);
  methods[3].selector = @selector(createAdaptingListenerWithOrgJunitRunnerNotificationRunNotifier:);
  methods[4].selector = @selector(getDescription);
  methods[5].selector = @selector(makeDescriptionWithJunitFrameworkTest:);
  methods[6].selector = @selector(getAnnotationsWithJunitFrameworkTestCase:);
  methods[7].selector = @selector(createSuiteDescriptionWithJunitFrameworkTestSuite:);
  methods[8].selector = @selector(filterWithOrgJunitRunnerManipulationFilter:);
  methods[9].selector = @selector(sortWithOrgJunitRunnerManipulationSorter:);
  methods[10].selector = @selector(setTestWithJunitFrameworkTest:);
  methods[11].selector = @selector(getTest);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "test_", "LJunitFrameworkTest;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "LJunitFrameworkTest;", "run", "LOrgJunitRunnerNotificationRunNotifier;", "createAdaptingListener", "makeDescription", "getAnnotations", "LJunitFrameworkTestCase;", "createSuiteDescription", "LJunitFrameworkTestSuite;", "filter", "LOrgJunitRunnerManipulationFilter;", "LOrgJunitRunnerManipulationNoTestsRemainException;", "sort", "LOrgJunitRunnerManipulationSorter;", "setTest", "LOrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener;" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersJUnit38ClassRunner = { "JUnit38ClassRunner", "org.junit.internal.runners", ptrTable, methods, fields, 7, 0x1, 12, 1, -1, 17, -1, -1, -1 };
  return &_OrgJunitInternalRunnersJUnit38ClassRunner;
}

@end

void OrgJunitInternalRunnersJUnit38ClassRunner_initWithIOSClass_(OrgJunitInternalRunnersJUnit38ClassRunner *self, IOSClass *klass) {
  OrgJunitInternalRunnersJUnit38ClassRunner_initWithJunitFrameworkTest_(self, create_JunitFrameworkTestSuite_initWithIOSClass_([((IOSClass *) nil_chk(klass)) asSubclass:JunitFrameworkTestCase_class_()]));
}

OrgJunitInternalRunnersJUnit38ClassRunner *new_OrgJunitInternalRunnersJUnit38ClassRunner_initWithIOSClass_(IOSClass *klass) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersJUnit38ClassRunner, initWithIOSClass_, klass)
}

OrgJunitInternalRunnersJUnit38ClassRunner *create_OrgJunitInternalRunnersJUnit38ClassRunner_initWithIOSClass_(IOSClass *klass) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersJUnit38ClassRunner, initWithIOSClass_, klass)
}

void OrgJunitInternalRunnersJUnit38ClassRunner_initWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner *self, id<JunitFrameworkTest> test) {
  OrgJunitRunnerRunner_init(self);
  OrgJunitInternalRunnersJUnit38ClassRunner_setTestWithJunitFrameworkTest_(self, test);
}

OrgJunitInternalRunnersJUnit38ClassRunner *new_OrgJunitInternalRunnersJUnit38ClassRunner_initWithJunitFrameworkTest_(id<JunitFrameworkTest> test) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersJUnit38ClassRunner, initWithJunitFrameworkTest_, test)
}

OrgJunitInternalRunnersJUnit38ClassRunner *create_OrgJunitInternalRunnersJUnit38ClassRunner_initWithJunitFrameworkTest_(id<JunitFrameworkTest> test) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersJUnit38ClassRunner, initWithJunitFrameworkTest_, test)
}

OrgJunitRunnerDescription *OrgJunitInternalRunnersJUnit38ClassRunner_makeDescriptionWithJunitFrameworkTest_(id<JunitFrameworkTest> test) {
  OrgJunitInternalRunnersJUnit38ClassRunner_initialize();
  if ([test isKindOfClass:[JunitFrameworkTestCase class]]) {
    JunitFrameworkTestCase *tc = (JunitFrameworkTestCase *) cast_chk(test, [JunitFrameworkTestCase class]);
    return OrgJunitRunnerDescription_createTestDescriptionWithIOSClass_withNSString_withJavaLangAnnotationAnnotationArray_([((JunitFrameworkTestCase *) nil_chk(tc)) java_getClass], [tc getName], OrgJunitInternalRunnersJUnit38ClassRunner_getAnnotationsWithJunitFrameworkTestCase_(tc));
  }
  else if ([test isKindOfClass:[JunitFrameworkTestSuite class]]) {
    JunitFrameworkTestSuite *ts = (JunitFrameworkTestSuite *) cast_chk(test, [JunitFrameworkTestSuite class]);
    NSString *name = [((JunitFrameworkTestSuite *) nil_chk(ts)) getName] == nil ? OrgJunitInternalRunnersJUnit38ClassRunner_createSuiteDescriptionWithJunitFrameworkTestSuite_(ts) : [ts getName];
    OrgJunitRunnerDescription *description_ = OrgJunitRunnerDescription_createSuiteDescriptionWithNSString_withJavaLangAnnotationAnnotationArray_(name, [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()]);
    jint n = [ts testCount];
    for (jint i = 0; i < n; i++) {
      OrgJunitRunnerDescription *made = OrgJunitInternalRunnersJUnit38ClassRunner_makeDescriptionWithJunitFrameworkTest_([ts testAtWithInt:i]);
      [((OrgJunitRunnerDescription *) nil_chk(description_)) addChildWithOrgJunitRunnerDescription:made];
    }
    return description_;
  }
  else if ([OrgJunitRunnerDescribable_class_() isInstance:test]) {
    id<OrgJunitRunnerDescribable> adapter = (id<OrgJunitRunnerDescribable>) cast_check(test, OrgJunitRunnerDescribable_class_());
    return [((id<OrgJunitRunnerDescribable>) nil_chk(adapter)) getDescription];
  }
  else if ([test isKindOfClass:[JunitExtensionsTestDecorator class]]) {
    JunitExtensionsTestDecorator *decorator = (JunitExtensionsTestDecorator *) cast_chk(test, [JunitExtensionsTestDecorator class]);
    return OrgJunitInternalRunnersJUnit38ClassRunner_makeDescriptionWithJunitFrameworkTest_([((JunitExtensionsTestDecorator *) nil_chk(decorator)) getTest]);
  }
  else {
    return OrgJunitRunnerDescription_createSuiteDescriptionWithIOSClass_([((id<JunitFrameworkTest>) nil_chk(test)) java_getClass]);
  }
}

IOSObjectArray *OrgJunitInternalRunnersJUnit38ClassRunner_getAnnotationsWithJunitFrameworkTestCase_(JunitFrameworkTestCase *test) {
  OrgJunitInternalRunnersJUnit38ClassRunner_initialize();
  @try {
    JavaLangReflectMethod *m = [[((JunitFrameworkTestCase *) nil_chk(test)) java_getClass] getMethod:[test getName] parameterTypes:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]];
    return [((JavaLangReflectMethod *) nil_chk(m)) getDeclaredAnnotations];
  }
  @catch (JavaLangSecurityException *e) {
  }
  @catch (JavaLangNoSuchMethodException *e) {
  }
  return [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()];
}

NSString *OrgJunitInternalRunnersJUnit38ClassRunner_createSuiteDescriptionWithJunitFrameworkTestSuite_(JunitFrameworkTestSuite *ts) {
  OrgJunitInternalRunnersJUnit38ClassRunner_initialize();
  jint count = [((JunitFrameworkTestSuite *) nil_chk(ts)) countTestCases];
  NSString *example = count == 0 ? @"" : NSString_java_formatWithNSString_withNSObjectArray_(@" [example: %s]", [IOSObjectArray arrayWithObjects:(id[]){ [ts testAtWithInt:0] } count:1 type:NSObject_class_()]);
  return NSString_java_formatWithNSString_withNSObjectArray_(@"TestSuite with %s tests%s", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(count), example } count:2 type:NSObject_class_()]);
}

void OrgJunitInternalRunnersJUnit38ClassRunner_setTestWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner *self, id<JunitFrameworkTest> test) {
  JreVolatileStrongAssign(&self->test_, test);
}

id<JunitFrameworkTest> OrgJunitInternalRunnersJUnit38ClassRunner_getTest(OrgJunitInternalRunnersJUnit38ClassRunner *self) {
  return JreLoadVolatileId(&self->test_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersJUnit38ClassRunner)

@implementation OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener

- (instancetype)initWithOrgJunitRunnerNotificationRunNotifier:(OrgJunitRunnerNotificationRunNotifier *)notifier {
  OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(self, notifier);
  return self;
}

- (void)endTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(notifier_)) fireTestFinishedWithOrgJunitRunnerDescription:OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_asDescriptionWithJunitFrameworkTest_(self, test)];
}

- (void)startTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(notifier_)) fireTestStartedWithOrgJunitRunnerDescription:OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_asDescriptionWithJunitFrameworkTest_(self, test)];
}

- (void)addErrorWithJunitFrameworkTest:(id<JunitFrameworkTest>)test
                       withNSException:(NSException *)e {
  OrgJunitRunnerNotificationFailure *failure = create_OrgJunitRunnerNotificationFailure_initWithOrgJunitRunnerDescription_withNSException_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_asDescriptionWithJunitFrameworkTest_(self, test), e);
  [((OrgJunitRunnerNotificationRunNotifier *) nil_chk(notifier_)) fireTestFailureWithOrgJunitRunnerNotificationFailure:failure];
}

- (OrgJunitRunnerDescription *)asDescriptionWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  return OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_asDescriptionWithJunitFrameworkTest_(self, test);
}

- (IOSClass *)getEffectiveClassWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  return OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getEffectiveClassWithJunitFrameworkTest_(self, test);
}

- (NSString *)getNameWithJunitFrameworkTest:(id<JunitFrameworkTest>)test {
  return OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getNameWithJunitFrameworkTest_(self, test);
}

- (void)addFailureWithJunitFrameworkTest:(id<JunitFrameworkTest>)test
  withJunitFrameworkAssertionFailedError:(JunitFrameworkAssertionFailedError *)t {
  [self addErrorWithJunitFrameworkTest:test withNSException:t];
}

- (void)dealloc {
  RELEASE_(notifier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerDescription;", 0x2, 6, 2, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x2, 7, 2, -1, 8, -1, -1 },
    { NULL, "LNSString;", 0x2, 9, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJunitRunnerNotificationRunNotifier:);
  methods[1].selector = @selector(endTestWithJunitFrameworkTest:);
  methods[2].selector = @selector(startTestWithJunitFrameworkTest:);
  methods[3].selector = @selector(addErrorWithJunitFrameworkTest:withNSException:);
  methods[4].selector = @selector(asDescriptionWithJunitFrameworkTest:);
  methods[5].selector = @selector(getEffectiveClassWithJunitFrameworkTest:);
  methods[6].selector = @selector(getNameWithJunitFrameworkTest:);
  methods[7].selector = @selector(addFailureWithJunitFrameworkTest:withJunitFrameworkAssertionFailedError:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "notifier_", "LOrgJunitRunnerNotificationRunNotifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJunitRunnerNotificationRunNotifier;", "endTest", "LJunitFrameworkTest;", "startTest", "addError", "LJunitFrameworkTest;LNSException;", "asDescription", "getEffectiveClass", "(Ljunit/framework/Test;)Ljava/lang/Class<+Ljunit/framework/Test;>;", "getName", "addFailure", "LJunitFrameworkTest;LJunitFrameworkAssertionFailedError;", "LOrgJunitInternalRunnersJUnit38ClassRunner;" };
  static const J2ObjcClassInfo _OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener = { "OldTestClassAdaptingListener", "org.junit.internal.runners", ptrTable, methods, fields, 7, 0x1a, 8, 1, 12, -1, -1, -1, -1 };
  return &_OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener;
}

@end

void OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, OrgJunitRunnerNotificationRunNotifier *notifier) {
  NSObject_init(self);
  JreStrongAssign(&self->notifier_, notifier);
}

OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *new_OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(OrgJunitRunnerNotificationRunNotifier *notifier) {
  J2OBJC_NEW_IMPL(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener, initWithOrgJunitRunnerNotificationRunNotifier_, notifier)
}

OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *create_OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_initWithOrgJunitRunnerNotificationRunNotifier_(OrgJunitRunnerNotificationRunNotifier *notifier) {
  J2OBJC_CREATE_IMPL(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener, initWithOrgJunitRunnerNotificationRunNotifier_, notifier)
}

OrgJunitRunnerDescription *OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_asDescriptionWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, id<JunitFrameworkTest> test) {
  if ([OrgJunitRunnerDescribable_class_() isInstance:test]) {
    id<OrgJunitRunnerDescribable> facade = (id<OrgJunitRunnerDescribable>) cast_check(test, OrgJunitRunnerDescribable_class_());
    return [((id<OrgJunitRunnerDescribable>) nil_chk(facade)) getDescription];
  }
  return OrgJunitRunnerDescription_createTestDescriptionWithIOSClass_withNSString_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getEffectiveClassWithJunitFrameworkTest_(self, test), OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getNameWithJunitFrameworkTest_(self, test));
}

IOSClass *OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getEffectiveClassWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, id<JunitFrameworkTest> test) {
  return [((id<JunitFrameworkTest>) nil_chk(test)) java_getClass];
}

NSString *OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener_getNameWithJunitFrameworkTest_(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener *self, id<JunitFrameworkTest> test) {
  if ([test isKindOfClass:[JunitFrameworkTestCase class]]) {
    return [((JunitFrameworkTestCase *) nil_chk(((JunitFrameworkTestCase *) cast_chk(test, [JunitFrameworkTestCase class])))) getName];
  }
  else {
    return [((id<JunitFrameworkTest>) nil_chk(test)) description];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitInternalRunnersJUnit38ClassRunner_OldTestClassAdaptingListener)
