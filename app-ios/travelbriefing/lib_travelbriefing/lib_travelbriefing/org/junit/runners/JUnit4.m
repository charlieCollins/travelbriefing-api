//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/runners/JUnit4.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/junit/runners/BlockJUnit4ClassRunner.h"
#include "org/junit/runners/JUnit4.h"

@implementation OrgJunitRunnersJUnit4

- (instancetype)initWithIOSClass:(IOSClass *)klass {
  OrgJunitRunnersJUnit4_initWithIOSClass_(self, klass);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;", "LOrgJunitRunnersModelInitializationError;", "(Ljava/lang/Class<*>;)V" };
  static const J2ObjcClassInfo _OrgJunitRunnersJUnit4 = { "JUnit4", "org.junit.runners", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitRunnersJUnit4;
}

@end

void OrgJunitRunnersJUnit4_initWithIOSClass_(OrgJunitRunnersJUnit4 *self, IOSClass *klass) {
  OrgJunitRunnersBlockJUnit4ClassRunner_initWithIOSClass_(self, klass);
}

OrgJunitRunnersJUnit4 *new_OrgJunitRunnersJUnit4_initWithIOSClass_(IOSClass *klass) {
  J2OBJC_NEW_IMPL(OrgJunitRunnersJUnit4, initWithIOSClass_, klass)
}

OrgJunitRunnersJUnit4 *create_OrgJunitRunnersJUnit4_initWithIOSClass_(IOSClass *klass) {
  J2OBJC_CREATE_IMPL(OrgJunitRunnersJUnit4, initWithIOSClass_, klass)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitRunnersJUnit4)
