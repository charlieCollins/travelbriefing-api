//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/categories/CategoryFilterFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/junit/experimental/categories/CategoryFilterFactory.h"
#include "org/junit/internal/Classes.h"
#include "org/junit/runner/FilterFactory.h"
#include "org/junit/runner/FilterFactoryParams.h"
#include "org/junit/runner/manipulation/Filter.h"

@interface OrgJunitExperimentalCategoriesCategoryFilterFactory ()

- (id<JavaUtilList>)parseCategoriesWithNSString:(NSString *)categories;

@end

__attribute__((unused)) static id<JavaUtilList> OrgJunitExperimentalCategoriesCategoryFilterFactory_parseCategoriesWithNSString_(OrgJunitExperimentalCategoriesCategoryFilterFactory *self, NSString *categories);

@implementation OrgJunitExperimentalCategoriesCategoryFilterFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJunitExperimentalCategoriesCategoryFilterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJunitRunnerManipulationFilter *)createFilterWithOrgJunitRunnerFilterFactoryParams:(OrgJunitRunnerFilterFactoryParams *)params {
  @try {
    return [self createFilterWithJavaUtilList:OrgJunitExperimentalCategoriesCategoryFilterFactory_parseCategoriesWithNSString_(self, [((OrgJunitRunnerFilterFactoryParams *) nil_chk(params)) getArgs])];
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw create_OrgJunitRunnerFilterFactory_FilterNotCreatedException_initWithJavaLangException_(e);
  }
}

- (OrgJunitRunnerManipulationFilter *)createFilterWithJavaUtilList:(id<JavaUtilList>)categories {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilList>)parseCategoriesWithNSString:(NSString *)categories {
  return OrgJunitExperimentalCategoriesCategoryFilterFactory_parseCategoriesWithNSString_(self, categories);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerManipulationFilter;", 0x404, 0, 3, -1, 4, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 5, 6, 7, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createFilterWithOrgJunitRunnerFilterFactoryParams:);
  methods[2].selector = @selector(createFilterWithJavaUtilList:);
  methods[3].selector = @selector(parseCategoriesWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createFilter", "LOrgJunitRunnerFilterFactoryParams;", "LOrgJunitRunnerFilterFactory_FilterNotCreatedException;", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/Class<*>;>;)Lorg/junit/runner/manipulation/Filter;", "parseCategories", "LNSString;", "LJavaLangClassNotFoundException;", "(Ljava/lang/String;)Ljava/util/List<Ljava/lang/Class<*>;>;" };
  static const J2ObjcClassInfo _OrgJunitExperimentalCategoriesCategoryFilterFactory = { "CategoryFilterFactory", "org.junit.experimental.categories", ptrTable, methods, NULL, 7, 0x400, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalCategoriesCategoryFilterFactory;
}

@end

void OrgJunitExperimentalCategoriesCategoryFilterFactory_init(OrgJunitExperimentalCategoriesCategoryFilterFactory *self) {
  NSObject_init(self);
}

id<JavaUtilList> OrgJunitExperimentalCategoriesCategoryFilterFactory_parseCategoriesWithNSString_(OrgJunitExperimentalCategoriesCategoryFilterFactory *self, NSString *categories) {
  id<JavaUtilList> categoryClasses = create_JavaUtilArrayList_init();
  {
    IOSObjectArray *a__ = [((NSString *) nil_chk(categories)) java_split:@","];
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *category = *b__++;
      IOSClass *categoryClass = OrgJunitInternalClasses_getClassWithNSString_(category);
      [categoryClasses addWithId:categoryClass];
    }
  }
  return categoryClasses;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalCategoriesCategoryFilterFactory)
