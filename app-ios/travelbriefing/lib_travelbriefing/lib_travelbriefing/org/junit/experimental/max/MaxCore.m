//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../target/dependency/org/junit/experimental/max/MaxCore.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "junit/framework/TestSuite.h"
#include "org/junit/experimental/max/MaxCore.h"
#include "org/junit/experimental/max/MaxHistory.h"
#include "org/junit/internal/requests/SortingRequest.h"
#include "org/junit/internal/runners/ErrorReportingRunner.h"
#include "org/junit/internal/runners/JUnit38ClassRunner.h"
#include "org/junit/runner/Description.h"
#include "org/junit/runner/JUnitCore.h"
#include "org/junit/runner/Request.h"
#include "org/junit/runner/Result.h"
#include "org/junit/runner/Runner.h"
#include "org/junit/runner/notification/RunListener.h"
#include "org/junit/runners/Suite.h"
#include "org/junit/runners/model/InitializationError.h"

@interface OrgJunitExperimentalMaxMaxCore () {
 @public
  OrgJunitExperimentalMaxMaxHistory *history_;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)storedResults;

- (OrgJunitRunnerRequest *)constructLeafRequestWithJavaUtilList:(id<JavaUtilList>)leaves;

- (OrgJunitRunnerRunner *)buildRunnerWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)each;

- (IOSClass *)getMalformedTestClassWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)each;

- (id<JavaUtilList>)findLeavesWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request;

- (void)findLeavesWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)parent
                  withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                               withJavaUtilList:(id<JavaUtilList>)results;

@end

J2OBJC_FIELD_SETTER(OrgJunitExperimentalMaxMaxCore, history_, OrgJunitExperimentalMaxMaxHistory *)

inline NSString *OrgJunitExperimentalMaxMaxCore_get_MALFORMED_JUNIT_3_TEST_CLASS_PREFIX();
static NSString *OrgJunitExperimentalMaxMaxCore_MALFORMED_JUNIT_3_TEST_CLASS_PREFIX = @"malformed JUnit 3 test class: ";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJunitExperimentalMaxMaxCore, MALFORMED_JUNIT_3_TEST_CLASS_PREFIX, NSString *)

__attribute__((unused)) static void OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(OrgJunitExperimentalMaxMaxCore *self, JavaIoFile *storedResults);

__attribute__((unused)) static OrgJunitExperimentalMaxMaxCore *new_OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(JavaIoFile *storedResults) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalMaxMaxCore *create_OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(JavaIoFile *storedResults);

__attribute__((unused)) static OrgJunitRunnerRequest *OrgJunitExperimentalMaxMaxCore_constructLeafRequestWithJavaUtilList_(OrgJunitExperimentalMaxMaxCore *self, id<JavaUtilList> leaves);

__attribute__((unused)) static OrgJunitRunnerRunner *OrgJunitExperimentalMaxMaxCore_buildRunnerWithOrgJunitRunnerDescription_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerDescription *each);

__attribute__((unused)) static IOSClass *OrgJunitExperimentalMaxMaxCore_getMalformedTestClassWithOrgJunitRunnerDescription_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerDescription *each);

__attribute__((unused)) static id<JavaUtilList> OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerRequest_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerRequest *request);

__attribute__((unused)) static void OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerDescription_withOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerDescription *parent, OrgJunitRunnerDescription *description_, id<JavaUtilList> results);

__attribute__((unused)) static IOSObjectArray *OrgJunitExperimentalMaxMaxCore__Annotations$0();

@interface OrgJunitExperimentalMaxMaxCore_1 : OrgJunitRunnerRequest {
 @public
  id<JavaUtilList> val$runners_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0;

- (OrgJunitRunnerRunner *)getRunner;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalMaxMaxCore_1)

__attribute__((unused)) static void OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(OrgJunitExperimentalMaxMaxCore_1 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static OrgJunitExperimentalMaxMaxCore_1 *new_OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalMaxMaxCore_1 *create_OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface OrgJunitExperimentalMaxMaxCore_1_1 : OrgJunitRunnersSuite

- (instancetype)initWithIOSClass:(IOSClass *)klass
                withJavaUtilList:(id<JavaUtilList>)runners;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalMaxMaxCore_1_1)

__attribute__((unused)) static void OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(OrgJunitExperimentalMaxMaxCore_1_1 *self, IOSClass *klass, id<JavaUtilList> runners);

__attribute__((unused)) static OrgJunitExperimentalMaxMaxCore_1_1 *new_OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(IOSClass *klass, id<JavaUtilList> runners) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJunitExperimentalMaxMaxCore_1_1 *create_OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(IOSClass *klass, id<JavaUtilList> runners);

@implementation OrgJunitExperimentalMaxMaxCore

+ (OrgJunitExperimentalMaxMaxCore *)forFolderWithNSString:(NSString *)folderName {
  return OrgJunitExperimentalMaxMaxCore_forFolderWithNSString_(folderName);
}

+ (OrgJunitExperimentalMaxMaxCore *)storedLocallyWithJavaIoFile:(JavaIoFile *)storedResults {
  return OrgJunitExperimentalMaxMaxCore_storedLocallyWithJavaIoFile_(storedResults);
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)storedResults {
  OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(self, storedResults);
  return self;
}

- (OrgJunitRunnerResult *)runWithIOSClass:(IOSClass *)testClass {
  return [self runWithOrgJunitRunnerRequest:OrgJunitRunnerRequest_aClassWithIOSClass_(testClass)];
}

- (OrgJunitRunnerResult *)runWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request {
  return [self runWithOrgJunitRunnerRequest:request withOrgJunitRunnerJUnitCore:create_OrgJunitRunnerJUnitCore_init()];
}

- (OrgJunitRunnerResult *)runWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request
                           withOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)core {
  [((OrgJunitRunnerJUnitCore *) nil_chk(core)) addListenerWithOrgJunitRunnerNotificationRunListener:[((OrgJunitExperimentalMaxMaxHistory *) nil_chk(history_)) listener]];
  return [core runWithOrgJunitRunnerRunner:[((OrgJunitRunnerRequest *) nil_chk([self sortRequestWithOrgJunitRunnerRequest:request])) getRunner]];
}

- (OrgJunitRunnerRequest *)sortRequestWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request {
  if ([request isKindOfClass:[OrgJunitInternalRequestsSortingRequest class]]) {
    return request;
  }
  id<JavaUtilList> leaves = OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerRequest_(self, request);
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(leaves, [((OrgJunitExperimentalMaxMaxHistory *) nil_chk(history_)) testComparator]);
  return OrgJunitExperimentalMaxMaxCore_constructLeafRequestWithJavaUtilList_(self, leaves);
}

- (OrgJunitRunnerRequest *)constructLeafRequestWithJavaUtilList:(id<JavaUtilList>)leaves {
  return OrgJunitExperimentalMaxMaxCore_constructLeafRequestWithJavaUtilList_(self, leaves);
}

- (OrgJunitRunnerRunner *)buildRunnerWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)each {
  return OrgJunitExperimentalMaxMaxCore_buildRunnerWithOrgJunitRunnerDescription_(self, each);
}

- (IOSClass *)getMalformedTestClassWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)each {
  return OrgJunitExperimentalMaxMaxCore_getMalformedTestClassWithOrgJunitRunnerDescription_(self, each);
}

- (id<JavaUtilList>)sortedLeavesForTestWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request {
  return OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerRequest_(self, [self sortRequestWithOrgJunitRunnerRequest:request]);
}

- (id<JavaUtilList>)findLeavesWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request {
  return OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerRequest_(self, request);
}

- (void)findLeavesWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)parent
                  withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_
                               withJavaUtilList:(id<JavaUtilList>)results {
  OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerDescription_withOrgJunitRunnerDescription_withJavaUtilList_(self, parent, description_, results);
}

- (void)dealloc {
  RELEASE_(history_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJunitExperimentalMaxMaxCore;", 0x9, 0, 1, -1, -1, 2, -1 },
    { NULL, "LOrgJunitExperimentalMaxMaxCore;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerResult;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LOrgJunitRunnerResult;", 0x1, 5, 8, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerResult;", 0x1, 5, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerRequest;", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerRequest;", 0x2, 11, 12, -1, 13, -1, -1 },
    { NULL, "LOrgJunitRunnerRunner;", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x2, 16, 15, -1, 17, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 18, 8, -1, 19, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 20, 8, -1, 19, -1, -1 },
    { NULL, "V", 0x2, 20, 21, -1, 22, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(forFolderWithNSString:);
  methods[1].selector = @selector(storedLocallyWithJavaIoFile:);
  methods[2].selector = @selector(initWithJavaIoFile:);
  methods[3].selector = @selector(runWithIOSClass:);
  methods[4].selector = @selector(runWithOrgJunitRunnerRequest:);
  methods[5].selector = @selector(runWithOrgJunitRunnerRequest:withOrgJunitRunnerJUnitCore:);
  methods[6].selector = @selector(sortRequestWithOrgJunitRunnerRequest:);
  methods[7].selector = @selector(constructLeafRequestWithJavaUtilList:);
  methods[8].selector = @selector(buildRunnerWithOrgJunitRunnerDescription:);
  methods[9].selector = @selector(getMalformedTestClassWithOrgJunitRunnerDescription:);
  methods[10].selector = @selector(sortedLeavesForTestWithOrgJunitRunnerRequest:);
  methods[11].selector = @selector(findLeavesWithOrgJunitRunnerRequest:);
  methods[12].selector = @selector(findLeavesWithOrgJunitRunnerDescription:withOrgJunitRunnerDescription:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MALFORMED_JUNIT_3_TEST_CLASS_PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "history_", "LOrgJunitExperimentalMaxMaxHistory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "forFolder", "LNSString;", (void *)&OrgJunitExperimentalMaxMaxCore__Annotations$0, "storedLocally", "LJavaIoFile;", "run", "LIOSClass;", "(Ljava/lang/Class<*>;)Lorg/junit/runner/Result;", "LOrgJunitRunnerRequest;", "LOrgJunitRunnerRequest;LOrgJunitRunnerJUnitCore;", "sortRequest", "constructLeafRequest", "LJavaUtilList;", "(Ljava/util/List<Lorg/junit/runner/Description;>;)Lorg/junit/runner/Request;", "buildRunner", "LOrgJunitRunnerDescription;", "getMalformedTestClass", "(Lorg/junit/runner/Description;)Ljava/lang/Class<*>;", "sortedLeavesForTest", "(Lorg/junit/runner/Request;)Ljava/util/List<Lorg/junit/runner/Description;>;", "findLeaves", "LOrgJunitRunnerDescription;LOrgJunitRunnerDescription;LJavaUtilList;", "(Lorg/junit/runner/Description;Lorg/junit/runner/Description;Ljava/util/List<Lorg/junit/runner/Description;>;)V", &OrgJunitExperimentalMaxMaxCore_MALFORMED_JUNIT_3_TEST_CLASS_PREFIX };
  static const J2ObjcClassInfo _OrgJunitExperimentalMaxMaxCore = { "MaxCore", "org.junit.experimental.max", ptrTable, methods, fields, 7, 0x1, 13, 2, -1, -1, -1, -1, -1 };
  return &_OrgJunitExperimentalMaxMaxCore;
}

@end

OrgJunitExperimentalMaxMaxCore *OrgJunitExperimentalMaxMaxCore_forFolderWithNSString_(NSString *folderName) {
  OrgJunitExperimentalMaxMaxCore_initialize();
  return OrgJunitExperimentalMaxMaxCore_storedLocallyWithJavaIoFile_(create_JavaIoFile_initWithNSString_(folderName));
}

OrgJunitExperimentalMaxMaxCore *OrgJunitExperimentalMaxMaxCore_storedLocallyWithJavaIoFile_(JavaIoFile *storedResults) {
  OrgJunitExperimentalMaxMaxCore_initialize();
  return create_OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(storedResults);
}

void OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(OrgJunitExperimentalMaxMaxCore *self, JavaIoFile *storedResults) {
  NSObject_init(self);
  JreStrongAssign(&self->history_, OrgJunitExperimentalMaxMaxHistory_forFolderWithJavaIoFile_(storedResults));
}

OrgJunitExperimentalMaxMaxCore *new_OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(JavaIoFile *storedResults) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalMaxMaxCore, initWithJavaIoFile_, storedResults)
}

OrgJunitExperimentalMaxMaxCore *create_OrgJunitExperimentalMaxMaxCore_initWithJavaIoFile_(JavaIoFile *storedResults) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalMaxMaxCore, initWithJavaIoFile_, storedResults)
}

OrgJunitRunnerRequest *OrgJunitExperimentalMaxMaxCore_constructLeafRequestWithJavaUtilList_(OrgJunitExperimentalMaxMaxCore *self, id<JavaUtilList> leaves) {
  id<JavaUtilList> runners = create_JavaUtilArrayList_init();
  for (OrgJunitRunnerDescription * __strong each in nil_chk(leaves)) {
    [runners addWithId:OrgJunitExperimentalMaxMaxCore_buildRunnerWithOrgJunitRunnerDescription_(self, each)];
  }
  return create_OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(runners);
}

OrgJunitRunnerRunner *OrgJunitExperimentalMaxMaxCore_buildRunnerWithOrgJunitRunnerDescription_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerDescription *each) {
  if ([((NSString *) nil_chk([((OrgJunitRunnerDescription *) nil_chk(each)) description])) isEqual:@"TestSuite with 0 tests"]) {
    return OrgJunitRunnersSuite_emptySuite();
  }
  if ([((NSString *) nil_chk([each description])) hasPrefix:OrgJunitExperimentalMaxMaxCore_MALFORMED_JUNIT_3_TEST_CLASS_PREFIX]) {
    return create_OrgJunitInternalRunnersJUnit38ClassRunner_initWithJunitFrameworkTest_(create_JunitFrameworkTestSuite_initWithIOSClass_(OrgJunitExperimentalMaxMaxCore_getMalformedTestClassWithOrgJunitRunnerDescription_(self, each)));
  }
  IOSClass *type = [each getTestClass];
  if (type == nil) {
    @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@C", @"Can't build a runner from description [", each, ']'));
  }
  NSString *methodName = [each getMethodName];
  if (methodName == nil) {
    return [((OrgJunitRunnerRequest *) nil_chk(OrgJunitRunnerRequest_aClassWithIOSClass_(type))) getRunner];
  }
  return [((OrgJunitRunnerRequest *) nil_chk(OrgJunitRunnerRequest_methodWithIOSClass_withNSString_(type, methodName))) getRunner];
}

IOSClass *OrgJunitExperimentalMaxMaxCore_getMalformedTestClassWithOrgJunitRunnerDescription_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerDescription *each) {
  @try {
    return IOSClass_forName_([((NSString *) nil_chk([((OrgJunitRunnerDescription *) nil_chk(each)) description])) java_replace:OrgJunitExperimentalMaxMaxCore_MALFORMED_JUNIT_3_TEST_CLASS_PREFIX withSequence:@""]);
  }
  @catch (JavaLangClassNotFoundException *e) {
    return nil;
  }
}

id<JavaUtilList> OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerRequest_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerRequest *request) {
  id<JavaUtilList> results = create_JavaUtilArrayList_init();
  OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerDescription_withOrgJunitRunnerDescription_withJavaUtilList_(self, nil, [((OrgJunitRunnerRunner *) nil_chk([((OrgJunitRunnerRequest *) nil_chk(request)) getRunner])) getDescription], results);
  return results;
}

void OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerDescription_withOrgJunitRunnerDescription_withJavaUtilList_(OrgJunitExperimentalMaxMaxCore *self, OrgJunitRunnerDescription *parent, OrgJunitRunnerDescription *description_, id<JavaUtilList> results) {
  if ([((JavaUtilArrayList *) nil_chk([((OrgJunitRunnerDescription *) nil_chk(description_)) getChildren])) isEmpty]) {
    if ([((NSString *) nil_chk([description_ description])) isEqual:@"warning(junit.framework.TestSuite$1)"]) {
      [((id<JavaUtilList>) nil_chk(results)) addWithId:OrgJunitRunnerDescription_createSuiteDescriptionWithNSString_withJavaLangAnnotationAnnotationArray_(JreStrcat("$@", OrgJunitExperimentalMaxMaxCore_MALFORMED_JUNIT_3_TEST_CLASS_PREFIX, parent), [IOSObjectArray arrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()])];
    }
    else {
      [((id<JavaUtilList>) nil_chk(results)) addWithId:description_];
    }
  }
  else {
    for (OrgJunitRunnerDescription * __strong each in nil_chk([description_ getChildren])) {
      OrgJunitExperimentalMaxMaxCore_findLeavesWithOrgJunitRunnerDescription_withOrgJunitRunnerDescription_withJavaUtilList_(self, description_, each, results);
    }
  }
}

IOSObjectArray *OrgJunitExperimentalMaxMaxCore__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJunitExperimentalMaxMaxCore)

@implementation OrgJunitExperimentalMaxMaxCore_1

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)capture$0 {
  OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(self, capture$0);
  return self;
}

- (OrgJunitRunnerRunner *)getRunner {
  @try {
    return create_OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(nil, val$runners_);
  }
  @catch (OrgJunitRunnersModelInitializationError *e) {
    return create_OrgJunitInternalRunnersErrorReportingRunner_initWithIOSClass_withNSException_(nil, e);
  }
}

- (void)dealloc {
  RELEASE_(val$runners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJunitRunnerRunner;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(getRunner);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$runners_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/List<Lorg/junit/runner/Runner;>;", "LOrgJunitExperimentalMaxMaxCore;", "constructLeafRequestWithJavaUtilList:" };
  static const J2ObjcClassInfo _OrgJunitExperimentalMaxMaxCore_1 = { "", "org.junit.experimental.max", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, -1, -1 };
  return &_OrgJunitExperimentalMaxMaxCore_1;
}

@end

void OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(OrgJunitExperimentalMaxMaxCore_1 *self, id<JavaUtilList> capture$0) {
  JreStrongAssign(&self->val$runners_, capture$0);
  OrgJunitRunnerRequest_init(self);
}

OrgJunitExperimentalMaxMaxCore_1 *new_OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalMaxMaxCore_1, initWithJavaUtilList_, capture$0)
}

OrgJunitExperimentalMaxMaxCore_1 *create_OrgJunitExperimentalMaxMaxCore_1_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalMaxMaxCore_1, initWithJavaUtilList_, capture$0)
}

@implementation OrgJunitExperimentalMaxMaxCore_1_1

- (instancetype)initWithIOSClass:(IOSClass *)klass
                withJavaUtilList:(id<JavaUtilList>)runners {
  OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(self, klass, runners);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;LJavaUtilList;", "(Ljava/lang/Class<*>;Ljava/util/List<Lorg/junit/runner/Runner;>;)V", "LOrgJunitExperimentalMaxMaxCore_1;", "getRunner" };
  static const J2ObjcClassInfo _OrgJunitExperimentalMaxMaxCore_1_1 = { "", "org.junit.experimental.max", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 2, -1, 3, -1, -1 };
  return &_OrgJunitExperimentalMaxMaxCore_1_1;
}

@end

void OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(OrgJunitExperimentalMaxMaxCore_1_1 *self, IOSClass *klass, id<JavaUtilList> runners) {
  OrgJunitRunnersSuite_initWithIOSClass_withJavaUtilList_(self, klass, runners);
}

OrgJunitExperimentalMaxMaxCore_1_1 *new_OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(IOSClass *klass, id<JavaUtilList> runners) {
  J2OBJC_NEW_IMPL(OrgJunitExperimentalMaxMaxCore_1_1, initWithIOSClass_withJavaUtilList_, klass, runners)
}

OrgJunitExperimentalMaxMaxCore_1_1 *create_OrgJunitExperimentalMaxMaxCore_1_1_initWithIOSClass_withJavaUtilList_(IOSClass *klass, id<JavaUtilList> runners) {
  J2OBJC_CREATE_IMPL(OrgJunitExperimentalMaxMaxCore_1_1, initWithIOSClass_withJavaUtilList_, klass, runners)
}
